

Microchip Technology PIC PRO Macro Assembler V1.44 build -154322312 
                                                                                               Wed Oct 31 11:43:17 2018

Microchip Technology Omniscient Code Generator v1.44 (PRO mode) build 201709140600
     1                           	processor	16F18345
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	inittext,global,class=CODE,delta=2
    12                           	psect	clrtext,global,class=CODE,delta=2
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	swtext1,local,class=CONST,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text46,local,class=CODE,merge=1,delta=2
    18                           	psect	text47,local,class=CODE,merge=1,delta=2
    19                           	psect	text49,local,class=CODE,merge=1,delta=2
    20                           	psect	text50,local,class=CODE,merge=1,delta=2
    21                           	psect	text51,local,class=CODE,merge=1,delta=2
    22                           	psect	text52,local,class=CODE,merge=1,delta=2
    23                           	psect	text53,local,class=CODE,merge=1,delta=2
    24                           	psect	text67,local,class=CODE,merge=1,delta=2
    25                           	psect	pa_nodes0,global,class=CODE,delta=2
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 1.44
    29                           ; Generated 14/09/2017 GMT
    30                           ; 
    31                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F18345 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0097                     	;# 
   105  009B                     	;# 
   106  009B                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  0111                     	;# 
   115  0112                     	;# 
   116  0113                     	;# 
   117  0114                     	;# 
   118  0115                     	;# 
   119  0116                     	;# 
   120  0117                     	;# 
   121  0118                     	;# 
   122  0119                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  018E                     	;# 
   126  0197                     	;# 
   127  0199                     	;# 
   128  0199                     	;# 
   129  0199                     	;# 
   130  019A                     	;# 
   131  019A                     	;# 
   132  019A                     	;# 
   133  019B                     	;# 
   134  019B                     	;# 
   135  019B                     	;# 
   136  019B                     	;# 
   137  019B                     	;# 
   138  019C                     	;# 
   139  019C                     	;# 
   140  019C                     	;# 
   141  019D                     	;# 
   142  019D                     	;# 
   143  019D                     	;# 
   144  019E                     	;# 
   145  019E                     	;# 
   146  019E                     	;# 
   147  019F                     	;# 
   148  019F                     	;# 
   149  019F                     	;# 
   150  019F                     	;# 
   151  019F                     	;# 
   152  020C                     	;# 
   153  020D                     	;# 
   154  020E                     	;# 
   155  0211                     	;# 
   156  0211                     	;# 
   157  0212                     	;# 
   158  0212                     	;# 
   159  0213                     	;# 
   160  0213                     	;# 
   161  0214                     	;# 
   162  0214                     	;# 
   163  0215                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  0219                     	;# 
   172  021A                     	;# 
   173  021B                     	;# 
   174  021C                     	;# 
   175  021D                     	;# 
   176  021D                     	;# 
   177  021E                     	;# 
   178  021F                     	;# 
   179  028C                     	;# 
   180  028D                     	;# 
   181  028E                     	;# 
   182  0291                     	;# 
   183  0291                     	;# 
   184  0292                     	;# 
   185  0293                     	;# 
   186  0294                     	;# 
   187  0295                     	;# 
   188  0295                     	;# 
   189  0296                     	;# 
   190  0297                     	;# 
   191  0298                     	;# 
   192  029F                     	;# 
   193  030C                     	;# 
   194  030D                     	;# 
   195  030E                     	;# 
   196  0311                     	;# 
   197  0311                     	;# 
   198  0312                     	;# 
   199  0313                     	;# 
   200  0314                     	;# 
   201  0315                     	;# 
   202  0315                     	;# 
   203  0316                     	;# 
   204  0317                     	;# 
   205  0318                     	;# 
   206  038C                     	;# 
   207  038D                     	;# 
   208  038E                     	;# 
   209  0391                     	;# 
   210  0392                     	;# 
   211  0393                     	;# 
   212  0394                     	;# 
   213  0395                     	;# 
   214  0396                     	;# 
   215  0397                     	;# 
   216  0398                     	;# 
   217  0399                     	;# 
   218  039A                     	;# 
   219  039C                     	;# 
   220  039D                     	;# 
   221  039E                     	;# 
   222  039F                     	;# 
   223  0411                     	;# 
   224  0411                     	;# 
   225  0412                     	;# 
   226  0413                     	;# 
   227  0414                     	;# 
   228  0415                     	;# 
   229  0416                     	;# 
   230  0417                     	;# 
   231  0418                     	;# 
   232  0418                     	;# 
   233  0419                     	;# 
   234  041A                     	;# 
   235  041B                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  041F                     	;# 
   240  0498                     	;# 
   241  0498                     	;# 
   242  0499                     	;# 
   243  049A                     	;# 
   244  049B                     	;# 
   245  049B                     	;# 
   246  049C                     	;# 
   247  049D                     	;# 
   248  049E                     	;# 
   249  049F                     	;# 
   250  0617                     	;# 
   251  0618                     	;# 
   252  0619                     	;# 
   253  0619                     	;# 
   254  061A                     	;# 
   255  061B                     	;# 
   256  061C                     	;# 
   257  061C                     	;# 
   258  061F                     	;# 
   259  0691                     	;# 
   260  0692                     	;# 
   261  0693                     	;# 
   262  0694                     	;# 
   263  0695                     	;# 
   264  0696                     	;# 
   265  0697                     	;# 
   266  0698                     	;# 
   267  0699                     	;# 
   268  0711                     	;# 
   269  0712                     	;# 
   270  0713                     	;# 
   271  0714                     	;# 
   272  0715                     	;# 
   273  0716                     	;# 
   274  0717                     	;# 
   275  0718                     	;# 
   276  0719                     	;# 
   277  0891                     	;# 
   278  0891                     	;# 
   279  0891                     	;# 
   280  0891                     	;# 
   281  0891                     	;# 
   282  0891                     	;# 
   283  0892                     	;# 
   284  0892                     	;# 
   285  0892                     	;# 
   286  0893                     	;# 
   287  0893                     	;# 
   288  0893                     	;# 
   289  0893                     	;# 
   290  0893                     	;# 
   291  0893                     	;# 
   292  0894                     	;# 
   293  0894                     	;# 
   294  0894                     	;# 
   295  0895                     	;# 
   296  0895                     	;# 
   297  0895                     	;# 
   298  0896                     	;# 
   299  0896                     	;# 
   300  0896                     	;# 
   301  089B                     	;# 
   302  0911                     	;# 
   303  0912                     	;# 
   304  0913                     	;# 
   305  0914                     	;# 
   306  0915                     	;# 
   307  0916                     	;# 
   308  0918                     	;# 
   309  0919                     	;# 
   310  091A                     	;# 
   311  091B                     	;# 
   312  091C                     	;# 
   313  091D                     	;# 
   314  091E                     	;# 
   315  091F                     	;# 
   316  0E0F                     	;# 
   317  0E10                     	;# 
   318  0E11                     	;# 
   319  0E12                     	;# 
   320  0E13                     	;# 
   321  0E14                     	;# 
   322  0E15                     	;# 
   323  0E16                     	;# 
   324  0E17                     	;# 
   325  0E18                     	;# 
   326  0E19                     	;# 
   327  0E1A                     	;# 
   328  0E1B                     	;# 
   329  0E1C                     	;# 
   330  0E1D                     	;# 
   331  0E1E                     	;# 
   332  0E1F                     	;# 
   333  0E20                     	;# 
   334  0E21                     	;# 
   335  0E22                     	;# 
   336  0E24                     	;# 
   337  0E25                     	;# 
   338  0E28                     	;# 
   339  0E29                     	;# 
   340  0E2A                     	;# 
   341  0E2B                     	;# 
   342  0E2C                     	;# 
   343  0E2D                     	;# 
   344  0E2E                     	;# 
   345  0E2F                     	;# 
   346  0E90                     	;# 
   347  0E91                     	;# 
   348  0E92                     	;# 
   349  0E94                     	;# 
   350  0E95                     	;# 
   351  0E9C                     	;# 
   352  0E9D                     	;# 
   353  0E9E                     	;# 
   354  0E9F                     	;# 
   355  0EA0                     	;# 
   356  0EA1                     	;# 
   357  0EA2                     	;# 
   358  0EA3                     	;# 
   359  0EA4                     	;# 
   360  0EA5                     	;# 
   361  0EA6                     	;# 
   362  0EA7                     	;# 
   363  0F0F                     	;# 
   364  0F10                     	;# 
   365  0F11                     	;# 
   366  0F12                     	;# 
   367  0F13                     	;# 
   368  0F14                     	;# 
   369  0F15                     	;# 
   370  0F16                     	;# 
   371  0F17                     	;# 
   372  0F18                     	;# 
   373  0F19                     	;# 
   374  0F1A                     	;# 
   375  0F1B                     	;# 
   376  0F1C                     	;# 
   377  0F1D                     	;# 
   378  0F1E                     	;# 
   379  0F1F                     	;# 
   380  0F20                     	;# 
   381  0F21                     	;# 
   382  0F22                     	;# 
   383  0F23                     	;# 
   384  0F24                     	;# 
   385  0F25                     	;# 
   386  0F26                     	;# 
   387  0F27                     	;# 
   388  0F28                     	;# 
   389  0F29                     	;# 
   390  0F2A                     	;# 
   391  0F2B                     	;# 
   392  0F2C                     	;# 
   393  0F2D                     	;# 
   394  0F2E                     	;# 
   395  0F2F                     	;# 
   396  0F30                     	;# 
   397  0F31                     	;# 
   398  0F32                     	;# 
   399  0F33                     	;# 
   400  0F34                     	;# 
   401  0F35                     	;# 
   402  0F36                     	;# 
   403  0F37                     	;# 
   404  0FE4                     	;# 
   405  0FE5                     	;# 
   406  0FE6                     	;# 
   407  0FE7                     	;# 
   408  0FE8                     	;# 
   409  0FE9                     	;# 
   410  0FEA                     	;# 
   411  0FEB                     	;# 
   412  0FED                     	;# 
   413  0FEE                     	;# 
   414  0FEF                     	;# 
   415  0000                     	;# 
   416  0001                     	;# 
   417  0002                     	;# 
   418  0003                     	;# 
   419  0004                     	;# 
   420  0005                     	;# 
   421  0006                     	;# 
   422  0007                     	;# 
   423  0008                     	;# 
   424  0009                     	;# 
   425  000A                     	;# 
   426  000B                     	;# 
   427  000C                     	;# 
   428  000D                     	;# 
   429  000E                     	;# 
   430  0010                     	;# 
   431  0011                     	;# 
   432  0012                     	;# 
   433  0013                     	;# 
   434  0014                     	;# 
   435  0015                     	;# 
   436  0015                     	;# 
   437  0016                     	;# 
   438  0016                     	;# 
   439  0017                     	;# 
   440  0018                     	;# 
   441  0019                     	;# 
   442  0019                     	;# 
   443  001A                     	;# 
   444  001B                     	;# 
   445  001C                     	;# 
   446  001D                     	;# 
   447  001E                     	;# 
   448  001F                     	;# 
   449  008C                     	;# 
   450  008D                     	;# 
   451  008E                     	;# 
   452  0090                     	;# 
   453  0091                     	;# 
   454  0092                     	;# 
   455  0093                     	;# 
   456  0094                     	;# 
   457  0097                     	;# 
   458  009B                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  010C                     	;# 
   465  010D                     	;# 
   466  010E                     	;# 
   467  0111                     	;# 
   468  0112                     	;# 
   469  0113                     	;# 
   470  0114                     	;# 
   471  0115                     	;# 
   472  0116                     	;# 
   473  0117                     	;# 
   474  0118                     	;# 
   475  0119                     	;# 
   476  018C                     	;# 
   477  018D                     	;# 
   478  018E                     	;# 
   479  0197                     	;# 
   480  0199                     	;# 
   481  0199                     	;# 
   482  0199                     	;# 
   483  019A                     	;# 
   484  019A                     	;# 
   485  019A                     	;# 
   486  019B                     	;# 
   487  019B                     	;# 
   488  019B                     	;# 
   489  019B                     	;# 
   490  019B                     	;# 
   491  019C                     	;# 
   492  019C                     	;# 
   493  019C                     	;# 
   494  019D                     	;# 
   495  019D                     	;# 
   496  019D                     	;# 
   497  019E                     	;# 
   498  019E                     	;# 
   499  019E                     	;# 
   500  019F                     	;# 
   501  019F                     	;# 
   502  019F                     	;# 
   503  019F                     	;# 
   504  019F                     	;# 
   505  020C                     	;# 
   506  020D                     	;# 
   507  020E                     	;# 
   508  0211                     	;# 
   509  0211                     	;# 
   510  0212                     	;# 
   511  0212                     	;# 
   512  0213                     	;# 
   513  0213                     	;# 
   514  0214                     	;# 
   515  0214                     	;# 
   516  0215                     	;# 
   517  0215                     	;# 
   518  0215                     	;# 
   519  0215                     	;# 
   520  0216                     	;# 
   521  0216                     	;# 
   522  0217                     	;# 
   523  0217                     	;# 
   524  0219                     	;# 
   525  021A                     	;# 
   526  021B                     	;# 
   527  021C                     	;# 
   528  021D                     	;# 
   529  021D                     	;# 
   530  021E                     	;# 
   531  021F                     	;# 
   532  028C                     	;# 
   533  028D                     	;# 
   534  028E                     	;# 
   535  0291                     	;# 
   536  0291                     	;# 
   537  0292                     	;# 
   538  0293                     	;# 
   539  0294                     	;# 
   540  0295                     	;# 
   541  0295                     	;# 
   542  0296                     	;# 
   543  0297                     	;# 
   544  0298                     	;# 
   545  029F                     	;# 
   546  030C                     	;# 
   547  030D                     	;# 
   548  030E                     	;# 
   549  0311                     	;# 
   550  0311                     	;# 
   551  0312                     	;# 
   552  0313                     	;# 
   553  0314                     	;# 
   554  0315                     	;# 
   555  0315                     	;# 
   556  0316                     	;# 
   557  0317                     	;# 
   558  0318                     	;# 
   559  038C                     	;# 
   560  038D                     	;# 
   561  038E                     	;# 
   562  0391                     	;# 
   563  0392                     	;# 
   564  0393                     	;# 
   565  0394                     	;# 
   566  0395                     	;# 
   567  0396                     	;# 
   568  0397                     	;# 
   569  0398                     	;# 
   570  0399                     	;# 
   571  039A                     	;# 
   572  039C                     	;# 
   573  039D                     	;# 
   574  039E                     	;# 
   575  039F                     	;# 
   576  0411                     	;# 
   577  0411                     	;# 
   578  0412                     	;# 
   579  0413                     	;# 
   580  0414                     	;# 
   581  0415                     	;# 
   582  0416                     	;# 
   583  0417                     	;# 
   584  0418                     	;# 
   585  0418                     	;# 
   586  0419                     	;# 
   587  041A                     	;# 
   588  041B                     	;# 
   589  041C                     	;# 
   590  041D                     	;# 
   591  041E                     	;# 
   592  041F                     	;# 
   593  0498                     	;# 
   594  0498                     	;# 
   595  0499                     	;# 
   596  049A                     	;# 
   597  049B                     	;# 
   598  049B                     	;# 
   599  049C                     	;# 
   600  049D                     	;# 
   601  049E                     	;# 
   602  049F                     	;# 
   603  0617                     	;# 
   604  0618                     	;# 
   605  0619                     	;# 
   606  0619                     	;# 
   607  061A                     	;# 
   608  061B                     	;# 
   609  061C                     	;# 
   610  061C                     	;# 
   611  061F                     	;# 
   612  0691                     	;# 
   613  0692                     	;# 
   614  0693                     	;# 
   615  0694                     	;# 
   616  0695                     	;# 
   617  0696                     	;# 
   618  0697                     	;# 
   619  0698                     	;# 
   620  0699                     	;# 
   621  0711                     	;# 
   622  0712                     	;# 
   623  0713                     	;# 
   624  0714                     	;# 
   625  0715                     	;# 
   626  0716                     	;# 
   627  0717                     	;# 
   628  0718                     	;# 
   629  0719                     	;# 
   630  0891                     	;# 
   631  0891                     	;# 
   632  0891                     	;# 
   633  0891                     	;# 
   634  0891                     	;# 
   635  0891                     	;# 
   636  0892                     	;# 
   637  0892                     	;# 
   638  0892                     	;# 
   639  0893                     	;# 
   640  0893                     	;# 
   641  0893                     	;# 
   642  0893                     	;# 
   643  0893                     	;# 
   644  0893                     	;# 
   645  0894                     	;# 
   646  0894                     	;# 
   647  0894                     	;# 
   648  0895                     	;# 
   649  0895                     	;# 
   650  0895                     	;# 
   651  0896                     	;# 
   652  0896                     	;# 
   653  0896                     	;# 
   654  089B                     	;# 
   655  0911                     	;# 
   656  0912                     	;# 
   657  0913                     	;# 
   658  0914                     	;# 
   659  0915                     	;# 
   660  0916                     	;# 
   661  0918                     	;# 
   662  0919                     	;# 
   663  091A                     	;# 
   664  091B                     	;# 
   665  091C                     	;# 
   666  091D                     	;# 
   667  091E                     	;# 
   668  091F                     	;# 
   669  0E0F                     	;# 
   670  0E10                     	;# 
   671  0E11                     	;# 
   672  0E12                     	;# 
   673  0E13                     	;# 
   674  0E14                     	;# 
   675  0E15                     	;# 
   676  0E16                     	;# 
   677  0E17                     	;# 
   678  0E18                     	;# 
   679  0E19                     	;# 
   680  0E1A                     	;# 
   681  0E1B                     	;# 
   682  0E1C                     	;# 
   683  0E1D                     	;# 
   684  0E1E                     	;# 
   685  0E1F                     	;# 
   686  0E20                     	;# 
   687  0E21                     	;# 
   688  0E22                     	;# 
   689  0E24                     	;# 
   690  0E25                     	;# 
   691  0E28                     	;# 
   692  0E29                     	;# 
   693  0E2A                     	;# 
   694  0E2B                     	;# 
   695  0E2C                     	;# 
   696  0E2D                     	;# 
   697  0E2E                     	;# 
   698  0E2F                     	;# 
   699  0E90                     	;# 
   700  0E91                     	;# 
   701  0E92                     	;# 
   702  0E94                     	;# 
   703  0E95                     	;# 
   704  0E9C                     	;# 
   705  0E9D                     	;# 
   706  0E9E                     	;# 
   707  0E9F                     	;# 
   708  0EA0                     	;# 
   709  0EA1                     	;# 
   710  0EA2                     	;# 
   711  0EA3                     	;# 
   712  0EA4                     	;# 
   713  0EA5                     	;# 
   714  0EA6                     	;# 
   715  0EA7                     	;# 
   716  0F0F                     	;# 
   717  0F10                     	;# 
   718  0F11                     	;# 
   719  0F12                     	;# 
   720  0F13                     	;# 
   721  0F14                     	;# 
   722  0F15                     	;# 
   723  0F16                     	;# 
   724  0F17                     	;# 
   725  0F18                     	;# 
   726  0F19                     	;# 
   727  0F1A                     	;# 
   728  0F1B                     	;# 
   729  0F1C                     	;# 
   730  0F1D                     	;# 
   731  0F1E                     	;# 
   732  0F1F                     	;# 
   733  0F20                     	;# 
   734  0F21                     	;# 
   735  0F22                     	;# 
   736  0F23                     	;# 
   737  0F24                     	;# 
   738  0F25                     	;# 
   739  0F26                     	;# 
   740  0F27                     	;# 
   741  0F28                     	;# 
   742  0F29                     	;# 
   743  0F2A                     	;# 
   744  0F2B                     	;# 
   745  0F2C                     	;# 
   746  0F2D                     	;# 
   747  0F2E                     	;# 
   748  0F2F                     	;# 
   749  0F30                     	;# 
   750  0F31                     	;# 
   751  0F32                     	;# 
   752  0F33                     	;# 
   753  0F34                     	;# 
   754  0F35                     	;# 
   755  0F36                     	;# 
   756  0F37                     	;# 
   757  0FE4                     	;# 
   758  0FE5                     	;# 
   759  0FE6                     	;# 
   760  0FE7                     	;# 
   761  0FE8                     	;# 
   762  0FE9                     	;# 
   763  0FEA                     	;# 
   764  0FEB                     	;# 
   765  0FED                     	;# 
   766  0FEE                     	;# 
   767  0FEF                     	;# 
   768  0000                     	;# 
   769  0001                     	;# 
   770  0002                     	;# 
   771  0003                     	;# 
   772  0004                     	;# 
   773  0005                     	;# 
   774  0006                     	;# 
   775  0007                     	;# 
   776  0008                     	;# 
   777  0009                     	;# 
   778  000A                     	;# 
   779  000B                     	;# 
   780  000C                     	;# 
   781  000D                     	;# 
   782  000E                     	;# 
   783  0010                     	;# 
   784  0011                     	;# 
   785  0012                     	;# 
   786  0013                     	;# 
   787  0014                     	;# 
   788  0015                     	;# 
   789  0015                     	;# 
   790  0016                     	;# 
   791  0016                     	;# 
   792  0017                     	;# 
   793  0018                     	;# 
   794  0019                     	;# 
   795  0019                     	;# 
   796  001A                     	;# 
   797  001B                     	;# 
   798  001C                     	;# 
   799  001D                     	;# 
   800  001E                     	;# 
   801  001F                     	;# 
   802  008C                     	;# 
   803  008D                     	;# 
   804  008E                     	;# 
   805  0090                     	;# 
   806  0091                     	;# 
   807  0092                     	;# 
   808  0093                     	;# 
   809  0094                     	;# 
   810  0097                     	;# 
   811  009B                     	;# 
   812  009B                     	;# 
   813  009C                     	;# 
   814  009D                     	;# 
   815  009E                     	;# 
   816  009F                     	;# 
   817  010C                     	;# 
   818  010D                     	;# 
   819  010E                     	;# 
   820  0111                     	;# 
   821  0112                     	;# 
   822  0113                     	;# 
   823  0114                     	;# 
   824  0115                     	;# 
   825  0116                     	;# 
   826  0117                     	;# 
   827  0118                     	;# 
   828  0119                     	;# 
   829  018C                     	;# 
   830  018D                     	;# 
   831  018E                     	;# 
   832  0197                     	;# 
   833  0199                     	;# 
   834  0199                     	;# 
   835  0199                     	;# 
   836  019A                     	;# 
   837  019A                     	;# 
   838  019A                     	;# 
   839  019B                     	;# 
   840  019B                     	;# 
   841  019B                     	;# 
   842  019B                     	;# 
   843  019B                     	;# 
   844  019C                     	;# 
   845  019C                     	;# 
   846  019C                     	;# 
   847  019D                     	;# 
   848  019D                     	;# 
   849  019D                     	;# 
   850  019E                     	;# 
   851  019E                     	;# 
   852  019E                     	;# 
   853  019F                     	;# 
   854  019F                     	;# 
   855  019F                     	;# 
   856  019F                     	;# 
   857  019F                     	;# 
   858  020C                     	;# 
   859  020D                     	;# 
   860  020E                     	;# 
   861  0211                     	;# 
   862  0211                     	;# 
   863  0212                     	;# 
   864  0212                     	;# 
   865  0213                     	;# 
   866  0213                     	;# 
   867  0214                     	;# 
   868  0214                     	;# 
   869  0215                     	;# 
   870  0215                     	;# 
   871  0215                     	;# 
   872  0215                     	;# 
   873  0216                     	;# 
   874  0216                     	;# 
   875  0217                     	;# 
   876  0217                     	;# 
   877  0219                     	;# 
   878  021A                     	;# 
   879  021B                     	;# 
   880  021C                     	;# 
   881  021D                     	;# 
   882  021D                     	;# 
   883  021E                     	;# 
   884  021F                     	;# 
   885  028C                     	;# 
   886  028D                     	;# 
   887  028E                     	;# 
   888  0291                     	;# 
   889  0291                     	;# 
   890  0292                     	;# 
   891  0293                     	;# 
   892  0294                     	;# 
   893  0295                     	;# 
   894  0295                     	;# 
   895  0296                     	;# 
   896  0297                     	;# 
   897  0298                     	;# 
   898  029F                     	;# 
   899  030C                     	;# 
   900  030D                     	;# 
   901  030E                     	;# 
   902  0311                     	;# 
   903  0311                     	;# 
   904  0312                     	;# 
   905  0313                     	;# 
   906  0314                     	;# 
   907  0315                     	;# 
   908  0315                     	;# 
   909  0316                     	;# 
   910  0317                     	;# 
   911  0318                     	;# 
   912  038C                     	;# 
   913  038D                     	;# 
   914  038E                     	;# 
   915  0391                     	;# 
   916  0392                     	;# 
   917  0393                     	;# 
   918  0394                     	;# 
   919  0395                     	;# 
   920  0396                     	;# 
   921  0397                     	;# 
   922  0398                     	;# 
   923  0399                     	;# 
   924  039A                     	;# 
   925  039C                     	;# 
   926  039D                     	;# 
   927  039E                     	;# 
   928  039F                     	;# 
   929  0411                     	;# 
   930  0411                     	;# 
   931  0412                     	;# 
   932  0413                     	;# 
   933  0414                     	;# 
   934  0415                     	;# 
   935  0416                     	;# 
   936  0417                     	;# 
   937  0418                     	;# 
   938  0418                     	;# 
   939  0419                     	;# 
   940  041A                     	;# 
   941  041B                     	;# 
   942  041C                     	;# 
   943  041D                     	;# 
   944  041E                     	;# 
   945  041F                     	;# 
   946  0498                     	;# 
   947  0498                     	;# 
   948  0499                     	;# 
   949  049A                     	;# 
   950  049B                     	;# 
   951  049B                     	;# 
   952  049C                     	;# 
   953  049D                     	;# 
   954  049E                     	;# 
   955  049F                     	;# 
   956  0617                     	;# 
   957  0618                     	;# 
   958  0619                     	;# 
   959  0619                     	;# 
   960  061A                     	;# 
   961  061B                     	;# 
   962  061C                     	;# 
   963  061C                     	;# 
   964  061F                     	;# 
   965  0691                     	;# 
   966  0692                     	;# 
   967  0693                     	;# 
   968  0694                     	;# 
   969  0695                     	;# 
   970  0696                     	;# 
   971  0697                     	;# 
   972  0698                     	;# 
   973  0699                     	;# 
   974  0711                     	;# 
   975  0712                     	;# 
   976  0713                     	;# 
   977  0714                     	;# 
   978  0715                     	;# 
   979  0716                     	;# 
   980  0717                     	;# 
   981  0718                     	;# 
   982  0719                     	;# 
   983  0891                     	;# 
   984  0891                     	;# 
   985  0891                     	;# 
   986  0891                     	;# 
   987  0891                     	;# 
   988  0891                     	;# 
   989  0892                     	;# 
   990  0892                     	;# 
   991  0892                     	;# 
   992  0893                     	;# 
   993  0893                     	;# 
   994  0893                     	;# 
   995  0893                     	;# 
   996  0893                     	;# 
   997  0893                     	;# 
   998  0894                     	;# 
   999  0894                     	;# 
  1000  0894                     	;# 
  1001  0895                     	;# 
  1002  0895                     	;# 
  1003  0895                     	;# 
  1004  0896                     	;# 
  1005  0896                     	;# 
  1006  0896                     	;# 
  1007  089B                     	;# 
  1008  0911                     	;# 
  1009  0912                     	;# 
  1010  0913                     	;# 
  1011  0914                     	;# 
  1012  0915                     	;# 
  1013  0916                     	;# 
  1014  0918                     	;# 
  1015  0919                     	;# 
  1016  091A                     	;# 
  1017  091B                     	;# 
  1018  091C                     	;# 
  1019  091D                     	;# 
  1020  091E                     	;# 
  1021  091F                     	;# 
  1022  0E0F                     	;# 
  1023  0E10                     	;# 
  1024  0E11                     	;# 
  1025  0E12                     	;# 
  1026  0E13                     	;# 
  1027  0E14                     	;# 
  1028  0E15                     	;# 
  1029  0E16                     	;# 
  1030  0E17                     	;# 
  1031  0E18                     	;# 
  1032  0E19                     	;# 
  1033  0E1A                     	;# 
  1034  0E1B                     	;# 
  1035  0E1C                     	;# 
  1036  0E1D                     	;# 
  1037  0E1E                     	;# 
  1038  0E1F                     	;# 
  1039  0E20                     	;# 
  1040  0E21                     	;# 
  1041  0E22                     	;# 
  1042  0E24                     	;# 
  1043  0E25                     	;# 
  1044  0E28                     	;# 
  1045  0E29                     	;# 
  1046  0E2A                     	;# 
  1047  0E2B                     	;# 
  1048  0E2C                     	;# 
  1049  0E2D                     	;# 
  1050  0E2E                     	;# 
  1051  0E2F                     	;# 
  1052  0E90                     	;# 
  1053  0E91                     	;# 
  1054  0E92                     	;# 
  1055  0E94                     	;# 
  1056  0E95                     	;# 
  1057  0E9C                     	;# 
  1058  0E9D                     	;# 
  1059  0E9E                     	;# 
  1060  0E9F                     	;# 
  1061  0EA0                     	;# 
  1062  0EA1                     	;# 
  1063  0EA2                     	;# 
  1064  0EA3                     	;# 
  1065  0EA4                     	;# 
  1066  0EA5                     	;# 
  1067  0EA6                     	;# 
  1068  0EA7                     	;# 
  1069  0F0F                     	;# 
  1070  0F10                     	;# 
  1071  0F11                     	;# 
  1072  0F12                     	;# 
  1073  0F13                     	;# 
  1074  0F14                     	;# 
  1075  0F15                     	;# 
  1076  0F16                     	;# 
  1077  0F17                     	;# 
  1078  0F18                     	;# 
  1079  0F19                     	;# 
  1080  0F1A                     	;# 
  1081  0F1B                     	;# 
  1082  0F1C                     	;# 
  1083  0F1D                     	;# 
  1084  0F1E                     	;# 
  1085  0F1F                     	;# 
  1086  0F20                     	;# 
  1087  0F21                     	;# 
  1088  0F22                     	;# 
  1089  0F23                     	;# 
  1090  0F24                     	;# 
  1091  0F25                     	;# 
  1092  0F26                     	;# 
  1093  0F27                     	;# 
  1094  0F28                     	;# 
  1095  0F29                     	;# 
  1096  0F2A                     	;# 
  1097  0F2B                     	;# 
  1098  0F2C                     	;# 
  1099  0F2D                     	;# 
  1100  0F2E                     	;# 
  1101  0F2F                     	;# 
  1102  0F30                     	;# 
  1103  0F31                     	;# 
  1104  0F32                     	;# 
  1105  0F33                     	;# 
  1106  0F34                     	;# 
  1107  0F35                     	;# 
  1108  0F36                     	;# 
  1109  0F37                     	;# 
  1110  0FE4                     	;# 
  1111  0FE5                     	;# 
  1112  0FE6                     	;# 
  1113  0FE7                     	;# 
  1114  0FE8                     	;# 
  1115  0FE9                     	;# 
  1116  0FEA                     	;# 
  1117  0FEB                     	;# 
  1118  0FED                     	;# 
  1119  0FEE                     	;# 
  1120  0FEF                     	;# 
  1121  0000                     	;# 
  1122  0001                     	;# 
  1123  0002                     	;# 
  1124  0003                     	;# 
  1125  0004                     	;# 
  1126  0005                     	;# 
  1127  0006                     	;# 
  1128  0007                     	;# 
  1129  0008                     	;# 
  1130  0009                     	;# 
  1131  000A                     	;# 
  1132  000B                     	;# 
  1133  000C                     	;# 
  1134  000D                     	;# 
  1135  000E                     	;# 
  1136  0010                     	;# 
  1137  0011                     	;# 
  1138  0012                     	;# 
  1139  0013                     	;# 
  1140  0014                     	;# 
  1141  0015                     	;# 
  1142  0015                     	;# 
  1143  0016                     	;# 
  1144  0016                     	;# 
  1145  0017                     	;# 
  1146  0018                     	;# 
  1147  0019                     	;# 
  1148  0019                     	;# 
  1149  001A                     	;# 
  1150  001B                     	;# 
  1151  001C                     	;# 
  1152  001D                     	;# 
  1153  001E                     	;# 
  1154  001F                     	;# 
  1155  008C                     	;# 
  1156  008D                     	;# 
  1157  008E                     	;# 
  1158  0090                     	;# 
  1159  0091                     	;# 
  1160  0092                     	;# 
  1161  0093                     	;# 
  1162  0094                     	;# 
  1163  0097                     	;# 
  1164  009B                     	;# 
  1165  009B                     	;# 
  1166  009C                     	;# 
  1167  009D                     	;# 
  1168  009E                     	;# 
  1169  009F                     	;# 
  1170  010C                     	;# 
  1171  010D                     	;# 
  1172  010E                     	;# 
  1173  0111                     	;# 
  1174  0112                     	;# 
  1175  0113                     	;# 
  1176  0114                     	;# 
  1177  0115                     	;# 
  1178  0116                     	;# 
  1179  0117                     	;# 
  1180  0118                     	;# 
  1181  0119                     	;# 
  1182  018C                     	;# 
  1183  018D                     	;# 
  1184  018E                     	;# 
  1185  0197                     	;# 
  1186  0199                     	;# 
  1187  0199                     	;# 
  1188  0199                     	;# 
  1189  019A                     	;# 
  1190  019A                     	;# 
  1191  019A                     	;# 
  1192  019B                     	;# 
  1193  019B                     	;# 
  1194  019B                     	;# 
  1195  019B                     	;# 
  1196  019B                     	;# 
  1197  019C                     	;# 
  1198  019C                     	;# 
  1199  019C                     	;# 
  1200  019D                     	;# 
  1201  019D                     	;# 
  1202  019D                     	;# 
  1203  019E                     	;# 
  1204  019E                     	;# 
  1205  019E                     	;# 
  1206  019F                     	;# 
  1207  019F                     	;# 
  1208  019F                     	;# 
  1209  019F                     	;# 
  1210  019F                     	;# 
  1211  020C                     	;# 
  1212  020D                     	;# 
  1213  020E                     	;# 
  1214  0211                     	;# 
  1215  0211                     	;# 
  1216  0212                     	;# 
  1217  0212                     	;# 
  1218  0213                     	;# 
  1219  0213                     	;# 
  1220  0214                     	;# 
  1221  0214                     	;# 
  1222  0215                     	;# 
  1223  0215                     	;# 
  1224  0215                     	;# 
  1225  0215                     	;# 
  1226  0216                     	;# 
  1227  0216                     	;# 
  1228  0217                     	;# 
  1229  0217                     	;# 
  1230  0219                     	;# 
  1231  021A                     	;# 
  1232  021B                     	;# 
  1233  021C                     	;# 
  1234  021D                     	;# 
  1235  021D                     	;# 
  1236  021E                     	;# 
  1237  021F                     	;# 
  1238  028C                     	;# 
  1239  028D                     	;# 
  1240  028E                     	;# 
  1241  0291                     	;# 
  1242  0291                     	;# 
  1243  0292                     	;# 
  1244  0293                     	;# 
  1245  0294                     	;# 
  1246  0295                     	;# 
  1247  0295                     	;# 
  1248  0296                     	;# 
  1249  0297                     	;# 
  1250  0298                     	;# 
  1251  029F                     	;# 
  1252  030C                     	;# 
  1253  030D                     	;# 
  1254  030E                     	;# 
  1255  0311                     	;# 
  1256  0311                     	;# 
  1257  0312                     	;# 
  1258  0313                     	;# 
  1259  0314                     	;# 
  1260  0315                     	;# 
  1261  0315                     	;# 
  1262  0316                     	;# 
  1263  0317                     	;# 
  1264  0318                     	;# 
  1265  038C                     	;# 
  1266  038D                     	;# 
  1267  038E                     	;# 
  1268  0391                     	;# 
  1269  0392                     	;# 
  1270  0393                     	;# 
  1271  0394                     	;# 
  1272  0395                     	;# 
  1273  0396                     	;# 
  1274  0397                     	;# 
  1275  0398                     	;# 
  1276  0399                     	;# 
  1277  039A                     	;# 
  1278  039C                     	;# 
  1279  039D                     	;# 
  1280  039E                     	;# 
  1281  039F                     	;# 
  1282  0411                     	;# 
  1283  0411                     	;# 
  1284  0412                     	;# 
  1285  0413                     	;# 
  1286  0414                     	;# 
  1287  0415                     	;# 
  1288  0416                     	;# 
  1289  0417                     	;# 
  1290  0418                     	;# 
  1291  0418                     	;# 
  1292  0419                     	;# 
  1293  041A                     	;# 
  1294  041B                     	;# 
  1295  041C                     	;# 
  1296  041D                     	;# 
  1297  041E                     	;# 
  1298  041F                     	;# 
  1299  0498                     	;# 
  1300  0498                     	;# 
  1301  0499                     	;# 
  1302  049A                     	;# 
  1303  049B                     	;# 
  1304  049B                     	;# 
  1305  049C                     	;# 
  1306  049D                     	;# 
  1307  049E                     	;# 
  1308  049F                     	;# 
  1309  0617                     	;# 
  1310  0618                     	;# 
  1311  0619                     	;# 
  1312  0619                     	;# 
  1313  061A                     	;# 
  1314  061B                     	;# 
  1315  061C                     	;# 
  1316  061C                     	;# 
  1317  061F                     	;# 
  1318  0691                     	;# 
  1319  0692                     	;# 
  1320  0693                     	;# 
  1321  0694                     	;# 
  1322  0695                     	;# 
  1323  0696                     	;# 
  1324  0697                     	;# 
  1325  0698                     	;# 
  1326  0699                     	;# 
  1327  0711                     	;# 
  1328  0712                     	;# 
  1329  0713                     	;# 
  1330  0714                     	;# 
  1331  0715                     	;# 
  1332  0716                     	;# 
  1333  0717                     	;# 
  1334  0718                     	;# 
  1335  0719                     	;# 
  1336  0891                     	;# 
  1337  0891                     	;# 
  1338  0891                     	;# 
  1339  0891                     	;# 
  1340  0891                     	;# 
  1341  0891                     	;# 
  1342  0892                     	;# 
  1343  0892                     	;# 
  1344  0892                     	;# 
  1345  0893                     	;# 
  1346  0893                     	;# 
  1347  0893                     	;# 
  1348  0893                     	;# 
  1349  0893                     	;# 
  1350  0893                     	;# 
  1351  0894                     	;# 
  1352  0894                     	;# 
  1353  0894                     	;# 
  1354  0895                     	;# 
  1355  0895                     	;# 
  1356  0895                     	;# 
  1357  0896                     	;# 
  1358  0896                     	;# 
  1359  0896                     	;# 
  1360  089B                     	;# 
  1361  0911                     	;# 
  1362  0912                     	;# 
  1363  0913                     	;# 
  1364  0914                     	;# 
  1365  0915                     	;# 
  1366  0916                     	;# 
  1367  0918                     	;# 
  1368  0919                     	;# 
  1369  091A                     	;# 
  1370  091B                     	;# 
  1371  091C                     	;# 
  1372  091D                     	;# 
  1373  091E                     	;# 
  1374  091F                     	;# 
  1375  0E0F                     	;# 
  1376  0E10                     	;# 
  1377  0E11                     	;# 
  1378  0E12                     	;# 
  1379  0E13                     	;# 
  1380  0E14                     	;# 
  1381  0E15                     	;# 
  1382  0E16                     	;# 
  1383  0E17                     	;# 
  1384  0E18                     	;# 
  1385  0E19                     	;# 
  1386  0E1A                     	;# 
  1387  0E1B                     	;# 
  1388  0E1C                     	;# 
  1389  0E1D                     	;# 
  1390  0E1E                     	;# 
  1391  0E1F                     	;# 
  1392  0E20                     	;# 
  1393  0E21                     	;# 
  1394  0E22                     	;# 
  1395  0E24                     	;# 
  1396  0E25                     	;# 
  1397  0E28                     	;# 
  1398  0E29                     	;# 
  1399  0E2A                     	;# 
  1400  0E2B                     	;# 
  1401  0E2C                     	;# 
  1402  0E2D                     	;# 
  1403  0E2E                     	;# 
  1404  0E2F                     	;# 
  1405  0E90                     	;# 
  1406  0E91                     	;# 
  1407  0E92                     	;# 
  1408  0E94                     	;# 
  1409  0E95                     	;# 
  1410  0E9C                     	;# 
  1411  0E9D                     	;# 
  1412  0E9E                     	;# 
  1413  0E9F                     	;# 
  1414  0EA0                     	;# 
  1415  0EA1                     	;# 
  1416  0EA2                     	;# 
  1417  0EA3                     	;# 
  1418  0EA4                     	;# 
  1419  0EA5                     	;# 
  1420  0EA6                     	;# 
  1421  0EA7                     	;# 
  1422  0F0F                     	;# 
  1423  0F10                     	;# 
  1424  0F11                     	;# 
  1425  0F12                     	;# 
  1426  0F13                     	;# 
  1427  0F14                     	;# 
  1428  0F15                     	;# 
  1429  0F16                     	;# 
  1430  0F17                     	;# 
  1431  0F18                     	;# 
  1432  0F19                     	;# 
  1433  0F1A                     	;# 
  1434  0F1B                     	;# 
  1435  0F1C                     	;# 
  1436  0F1D                     	;# 
  1437  0F1E                     	;# 
  1438  0F1F                     	;# 
  1439  0F20                     	;# 
  1440  0F21                     	;# 
  1441  0F22                     	;# 
  1442  0F23                     	;# 
  1443  0F24                     	;# 
  1444  0F25                     	;# 
  1445  0F26                     	;# 
  1446  0F27                     	;# 
  1447  0F28                     	;# 
  1448  0F29                     	;# 
  1449  0F2A                     	;# 
  1450  0F2B                     	;# 
  1451  0F2C                     	;# 
  1452  0F2D                     	;# 
  1453  0F2E                     	;# 
  1454  0F2F                     	;# 
  1455  0F30                     	;# 
  1456  0F31                     	;# 
  1457  0F32                     	;# 
  1458  0F33                     	;# 
  1459  0F34                     	;# 
  1460  0F35                     	;# 
  1461  0F36                     	;# 
  1462  0F37                     	;# 
  1463  0FE4                     	;# 
  1464  0FE5                     	;# 
  1465  0FE6                     	;# 
  1466  0FE7                     	;# 
  1467  0FE8                     	;# 
  1468  0FE9                     	;# 
  1469  0FEA                     	;# 
  1470  0FEB                     	;# 
  1471  0FED                     	;# 
  1472  0FEE                     	;# 
  1473  0FEF                     	;# 
  1474  0000                     	;# 
  1475  0001                     	;# 
  1476  0002                     	;# 
  1477  0003                     	;# 
  1478  0004                     	;# 
  1479  0005                     	;# 
  1480  0006                     	;# 
  1481  0007                     	;# 
  1482  0008                     	;# 
  1483  0009                     	;# 
  1484  000A                     	;# 
  1485  000B                     	;# 
  1486  000C                     	;# 
  1487  000D                     	;# 
  1488  000E                     	;# 
  1489  0010                     	;# 
  1490  0011                     	;# 
  1491  0012                     	;# 
  1492  0013                     	;# 
  1493  0014                     	;# 
  1494  0015                     	;# 
  1495  0015                     	;# 
  1496  0016                     	;# 
  1497  0016                     	;# 
  1498  0017                     	;# 
  1499  0018                     	;# 
  1500  0019                     	;# 
  1501  0019                     	;# 
  1502  001A                     	;# 
  1503  001B                     	;# 
  1504  001C                     	;# 
  1505  001D                     	;# 
  1506  001E                     	;# 
  1507  001F                     	;# 
  1508  008C                     	;# 
  1509  008D                     	;# 
  1510  008E                     	;# 
  1511  0090                     	;# 
  1512  0091                     	;# 
  1513  0092                     	;# 
  1514  0093                     	;# 
  1515  0094                     	;# 
  1516  0097                     	;# 
  1517  009B                     	;# 
  1518  009B                     	;# 
  1519  009C                     	;# 
  1520  009D                     	;# 
  1521  009E                     	;# 
  1522  009F                     	;# 
  1523  010C                     	;# 
  1524  010D                     	;# 
  1525  010E                     	;# 
  1526  0111                     	;# 
  1527  0112                     	;# 
  1528  0113                     	;# 
  1529  0114                     	;# 
  1530  0115                     	;# 
  1531  0116                     	;# 
  1532  0117                     	;# 
  1533  0118                     	;# 
  1534  0119                     	;# 
  1535  018C                     	;# 
  1536  018D                     	;# 
  1537  018E                     	;# 
  1538  0197                     	;# 
  1539  0199                     	;# 
  1540  0199                     	;# 
  1541  0199                     	;# 
  1542  019A                     	;# 
  1543  019A                     	;# 
  1544  019A                     	;# 
  1545  019B                     	;# 
  1546  019B                     	;# 
  1547  019B                     	;# 
  1548  019B                     	;# 
  1549  019B                     	;# 
  1550  019C                     	;# 
  1551  019C                     	;# 
  1552  019C                     	;# 
  1553  019D                     	;# 
  1554  019D                     	;# 
  1555  019D                     	;# 
  1556  019E                     	;# 
  1557  019E                     	;# 
  1558  019E                     	;# 
  1559  019F                     	;# 
  1560  019F                     	;# 
  1561  019F                     	;# 
  1562  019F                     	;# 
  1563  019F                     	;# 
  1564  020C                     	;# 
  1565  020D                     	;# 
  1566  020E                     	;# 
  1567  0211                     	;# 
  1568  0211                     	;# 
  1569  0212                     	;# 
  1570  0212                     	;# 
  1571  0213                     	;# 
  1572  0213                     	;# 
  1573  0214                     	;# 
  1574  0214                     	;# 
  1575  0215                     	;# 
  1576  0215                     	;# 
  1577  0215                     	;# 
  1578  0215                     	;# 
  1579  0216                     	;# 
  1580  0216                     	;# 
  1581  0217                     	;# 
  1582  0217                     	;# 
  1583  0219                     	;# 
  1584  021A                     	;# 
  1585  021B                     	;# 
  1586  021C                     	;# 
  1587  021D                     	;# 
  1588  021D                     	;# 
  1589  021E                     	;# 
  1590  021F                     	;# 
  1591  028C                     	;# 
  1592  028D                     	;# 
  1593  028E                     	;# 
  1594  0291                     	;# 
  1595  0291                     	;# 
  1596  0292                     	;# 
  1597  0293                     	;# 
  1598  0294                     	;# 
  1599  0295                     	;# 
  1600  0295                     	;# 
  1601  0296                     	;# 
  1602  0297                     	;# 
  1603  0298                     	;# 
  1604  029F                     	;# 
  1605  030C                     	;# 
  1606  030D                     	;# 
  1607  030E                     	;# 
  1608  0311                     	;# 
  1609  0311                     	;# 
  1610  0312                     	;# 
  1611  0313                     	;# 
  1612  0314                     	;# 
  1613  0315                     	;# 
  1614  0315                     	;# 
  1615  0316                     	;# 
  1616  0317                     	;# 
  1617  0318                     	;# 
  1618  038C                     	;# 
  1619  038D                     	;# 
  1620  038E                     	;# 
  1621  0391                     	;# 
  1622  0392                     	;# 
  1623  0393                     	;# 
  1624  0394                     	;# 
  1625  0395                     	;# 
  1626  0396                     	;# 
  1627  0397                     	;# 
  1628  0398                     	;# 
  1629  0399                     	;# 
  1630  039A                     	;# 
  1631  039C                     	;# 
  1632  039D                     	;# 
  1633  039E                     	;# 
  1634  039F                     	;# 
  1635  0411                     	;# 
  1636  0411                     	;# 
  1637  0412                     	;# 
  1638  0413                     	;# 
  1639  0414                     	;# 
  1640  0415                     	;# 
  1641  0416                     	;# 
  1642  0417                     	;# 
  1643  0418                     	;# 
  1644  0418                     	;# 
  1645  0419                     	;# 
  1646  041A                     	;# 
  1647  041B                     	;# 
  1648  041C                     	;# 
  1649  041D                     	;# 
  1650  041E                     	;# 
  1651  041F                     	;# 
  1652  0498                     	;# 
  1653  0498                     	;# 
  1654  0499                     	;# 
  1655  049A                     	;# 
  1656  049B                     	;# 
  1657  049B                     	;# 
  1658  049C                     	;# 
  1659  049D                     	;# 
  1660  049E                     	;# 
  1661  049F                     	;# 
  1662  0617                     	;# 
  1663  0618                     	;# 
  1664  0619                     	;# 
  1665  0619                     	;# 
  1666  061A                     	;# 
  1667  061B                     	;# 
  1668  061C                     	;# 
  1669  061C                     	;# 
  1670  061F                     	;# 
  1671  0691                     	;# 
  1672  0692                     	;# 
  1673  0693                     	;# 
  1674  0694                     	;# 
  1675  0695                     	;# 
  1676  0696                     	;# 
  1677  0697                     	;# 
  1678  0698                     	;# 
  1679  0699                     	;# 
  1680  0711                     	;# 
  1681  0712                     	;# 
  1682  0713                     	;# 
  1683  0714                     	;# 
  1684  0715                     	;# 
  1685  0716                     	;# 
  1686  0717                     	;# 
  1687  0718                     	;# 
  1688  0719                     	;# 
  1689  0891                     	;# 
  1690  0891                     	;# 
  1691  0891                     	;# 
  1692  0891                     	;# 
  1693  0891                     	;# 
  1694  0891                     	;# 
  1695  0892                     	;# 
  1696  0892                     	;# 
  1697  0892                     	;# 
  1698  0893                     	;# 
  1699  0893                     	;# 
  1700  0893                     	;# 
  1701  0893                     	;# 
  1702  0893                     	;# 
  1703  0893                     	;# 
  1704  0894                     	;# 
  1705  0894                     	;# 
  1706  0894                     	;# 
  1707  0895                     	;# 
  1708  0895                     	;# 
  1709  0895                     	;# 
  1710  0896                     	;# 
  1711  0896                     	;# 
  1712  0896                     	;# 
  1713  089B                     	;# 
  1714  0911                     	;# 
  1715  0912                     	;# 
  1716  0913                     	;# 
  1717  0914                     	;# 
  1718  0915                     	;# 
  1719  0916                     	;# 
  1720  0918                     	;# 
  1721  0919                     	;# 
  1722  091A                     	;# 
  1723  091B                     	;# 
  1724  091C                     	;# 
  1725  091D                     	;# 
  1726  091E                     	;# 
  1727  091F                     	;# 
  1728  0E0F                     	;# 
  1729  0E10                     	;# 
  1730  0E11                     	;# 
  1731  0E12                     	;# 
  1732  0E13                     	;# 
  1733  0E14                     	;# 
  1734  0E15                     	;# 
  1735  0E16                     	;# 
  1736  0E17                     	;# 
  1737  0E18                     	;# 
  1738  0E19                     	;# 
  1739  0E1A                     	;# 
  1740  0E1B                     	;# 
  1741  0E1C                     	;# 
  1742  0E1D                     	;# 
  1743  0E1E                     	;# 
  1744  0E1F                     	;# 
  1745  0E20                     	;# 
  1746  0E21                     	;# 
  1747  0E22                     	;# 
  1748  0E24                     	;# 
  1749  0E25                     	;# 
  1750  0E28                     	;# 
  1751  0E29                     	;# 
  1752  0E2A                     	;# 
  1753  0E2B                     	;# 
  1754  0E2C                     	;# 
  1755  0E2D                     	;# 
  1756  0E2E                     	;# 
  1757  0E2F                     	;# 
  1758  0E90                     	;# 
  1759  0E91                     	;# 
  1760  0E92                     	;# 
  1761  0E94                     	;# 
  1762  0E95                     	;# 
  1763  0E9C                     	;# 
  1764  0E9D                     	;# 
  1765  0E9E                     	;# 
  1766  0E9F                     	;# 
  1767  0EA0                     	;# 
  1768  0EA1                     	;# 
  1769  0EA2                     	;# 
  1770  0EA3                     	;# 
  1771  0EA4                     	;# 
  1772  0EA5                     	;# 
  1773  0EA6                     	;# 
  1774  0EA7                     	;# 
  1775  0F0F                     	;# 
  1776  0F10                     	;# 
  1777  0F11                     	;# 
  1778  0F12                     	;# 
  1779  0F13                     	;# 
  1780  0F14                     	;# 
  1781  0F15                     	;# 
  1782  0F16                     	;# 
  1783  0F17                     	;# 
  1784  0F18                     	;# 
  1785  0F19                     	;# 
  1786  0F1A                     	;# 
  1787  0F1B                     	;# 
  1788  0F1C                     	;# 
  1789  0F1D                     	;# 
  1790  0F1E                     	;# 
  1791  0F1F                     	;# 
  1792  0F20                     	;# 
  1793  0F21                     	;# 
  1794  0F22                     	;# 
  1795  0F23                     	;# 
  1796  0F24                     	;# 
  1797  0F25                     	;# 
  1798  0F26                     	;# 
  1799  0F27                     	;# 
  1800  0F28                     	;# 
  1801  0F29                     	;# 
  1802  0F2A                     	;# 
  1803  0F2B                     	;# 
  1804  0F2C                     	;# 
  1805  0F2D                     	;# 
  1806  0F2E                     	;# 
  1807  0F2F                     	;# 
  1808  0F30                     	;# 
  1809  0F31                     	;# 
  1810  0F32                     	;# 
  1811  0F33                     	;# 
  1812  0F34                     	;# 
  1813  0F35                     	;# 
  1814  0F36                     	;# 
  1815  0F37                     	;# 
  1816  0FE4                     	;# 
  1817  0FE5                     	;# 
  1818  0FE6                     	;# 
  1819  0FE7                     	;# 
  1820  0FE8                     	;# 
  1821  0FE9                     	;# 
  1822  0FEA                     	;# 
  1823  0FEB                     	;# 
  1824  0FED                     	;# 
  1825  0FEE                     	;# 
  1826  0FEF                     	;# 
  1827  0000                     	;# 
  1828  0001                     	;# 
  1829  0002                     	;# 
  1830  0003                     	;# 
  1831  0004                     	;# 
  1832  0005                     	;# 
  1833  0006                     	;# 
  1834  0007                     	;# 
  1835  0008                     	;# 
  1836  0009                     	;# 
  1837  000A                     	;# 
  1838  000B                     	;# 
  1839  000C                     	;# 
  1840  000D                     	;# 
  1841  000E                     	;# 
  1842  0010                     	;# 
  1843  0011                     	;# 
  1844  0012                     	;# 
  1845  0013                     	;# 
  1846  0014                     	;# 
  1847  0015                     	;# 
  1848  0015                     	;# 
  1849  0016                     	;# 
  1850  0016                     	;# 
  1851  0017                     	;# 
  1852  0018                     	;# 
  1853  0019                     	;# 
  1854  0019                     	;# 
  1855  001A                     	;# 
  1856  001B                     	;# 
  1857  001C                     	;# 
  1858  001D                     	;# 
  1859  001E                     	;# 
  1860  001F                     	;# 
  1861  008C                     	;# 
  1862  008D                     	;# 
  1863  008E                     	;# 
  1864  0090                     	;# 
  1865  0091                     	;# 
  1866  0092                     	;# 
  1867  0093                     	;# 
  1868  0094                     	;# 
  1869  0097                     	;# 
  1870  009B                     	;# 
  1871  009B                     	;# 
  1872  009C                     	;# 
  1873  009D                     	;# 
  1874  009E                     	;# 
  1875  009F                     	;# 
  1876  010C                     	;# 
  1877  010D                     	;# 
  1878  010E                     	;# 
  1879  0111                     	;# 
  1880  0112                     	;# 
  1881  0113                     	;# 
  1882  0114                     	;# 
  1883  0115                     	;# 
  1884  0116                     	;# 
  1885  0117                     	;# 
  1886  0118                     	;# 
  1887  0119                     	;# 
  1888  018C                     	;# 
  1889  018D                     	;# 
  1890  018E                     	;# 
  1891  0197                     	;# 
  1892  0199                     	;# 
  1893  0199                     	;# 
  1894  0199                     	;# 
  1895  019A                     	;# 
  1896  019A                     	;# 
  1897  019A                     	;# 
  1898  019B                     	;# 
  1899  019B                     	;# 
  1900  019B                     	;# 
  1901  019B                     	;# 
  1902  019B                     	;# 
  1903  019C                     	;# 
  1904  019C                     	;# 
  1905  019C                     	;# 
  1906  019D                     	;# 
  1907  019D                     	;# 
  1908  019D                     	;# 
  1909  019E                     	;# 
  1910  019E                     	;# 
  1911  019E                     	;# 
  1912  019F                     	;# 
  1913  019F                     	;# 
  1914  019F                     	;# 
  1915  019F                     	;# 
  1916  019F                     	;# 
  1917  020C                     	;# 
  1918  020D                     	;# 
  1919  020E                     	;# 
  1920  0211                     	;# 
  1921  0211                     	;# 
  1922  0212                     	;# 
  1923  0212                     	;# 
  1924  0213                     	;# 
  1925  0213                     	;# 
  1926  0214                     	;# 
  1927  0214                     	;# 
  1928  0215                     	;# 
  1929  0215                     	;# 
  1930  0215                     	;# 
  1931  0215                     	;# 
  1932  0216                     	;# 
  1933  0216                     	;# 
  1934  0217                     	;# 
  1935  0217                     	;# 
  1936  0219                     	;# 
  1937  021A                     	;# 
  1938  021B                     	;# 
  1939  021C                     	;# 
  1940  021D                     	;# 
  1941  021D                     	;# 
  1942  021E                     	;# 
  1943  021F                     	;# 
  1944  028C                     	;# 
  1945  028D                     	;# 
  1946  028E                     	;# 
  1947  0291                     	;# 
  1948  0291                     	;# 
  1949  0292                     	;# 
  1950  0293                     	;# 
  1951  0294                     	;# 
  1952  0295                     	;# 
  1953  0295                     	;# 
  1954  0296                     	;# 
  1955  0297                     	;# 
  1956  0298                     	;# 
  1957  029F                     	;# 
  1958  030C                     	;# 
  1959  030D                     	;# 
  1960  030E                     	;# 
  1961  0311                     	;# 
  1962  0311                     	;# 
  1963  0312                     	;# 
  1964  0313                     	;# 
  1965  0314                     	;# 
  1966  0315                     	;# 
  1967  0315                     	;# 
  1968  0316                     	;# 
  1969  0317                     	;# 
  1970  0318                     	;# 
  1971  038C                     	;# 
  1972  038D                     	;# 
  1973  038E                     	;# 
  1974  0391                     	;# 
  1975  0392                     	;# 
  1976  0393                     	;# 
  1977  0394                     	;# 
  1978  0395                     	;# 
  1979  0396                     	;# 
  1980  0397                     	;# 
  1981  0398                     	;# 
  1982  0399                     	;# 
  1983  039A                     	;# 
  1984  039C                     	;# 
  1985  039D                     	;# 
  1986  039E                     	;# 
  1987  039F                     	;# 
  1988  0411                     	;# 
  1989  0411                     	;# 
  1990  0412                     	;# 
  1991  0413                     	;# 
  1992  0414                     	;# 
  1993  0415                     	;# 
  1994  0416                     	;# 
  1995  0417                     	;# 
  1996  0418                     	;# 
  1997  0418                     	;# 
  1998  0419                     	;# 
  1999  041A                     	;# 
  2000  041B                     	;# 
  2001  041C                     	;# 
  2002  041D                     	;# 
  2003  041E                     	;# 
  2004  041F                     	;# 
  2005  0498                     	;# 
  2006  0498                     	;# 
  2007  0499                     	;# 
  2008  049A                     	;# 
  2009  049B                     	;# 
  2010  049B                     	;# 
  2011  049C                     	;# 
  2012  049D                     	;# 
  2013  049E                     	;# 
  2014  049F                     	;# 
  2015  0617                     	;# 
  2016  0618                     	;# 
  2017  0619                     	;# 
  2018  0619                     	;# 
  2019  061A                     	;# 
  2020  061B                     	;# 
  2021  061C                     	;# 
  2022  061C                     	;# 
  2023  061F                     	;# 
  2024  0691                     	;# 
  2025  0692                     	;# 
  2026  0693                     	;# 
  2027  0694                     	;# 
  2028  0695                     	;# 
  2029  0696                     	;# 
  2030  0697                     	;# 
  2031  0698                     	;# 
  2032  0699                     	;# 
  2033  0711                     	;# 
  2034  0712                     	;# 
  2035  0713                     	;# 
  2036  0714                     	;# 
  2037  0715                     	;# 
  2038  0716                     	;# 
  2039  0717                     	;# 
  2040  0718                     	;# 
  2041  0719                     	;# 
  2042  0891                     	;# 
  2043  0891                     	;# 
  2044  0891                     	;# 
  2045  0891                     	;# 
  2046  0891                     	;# 
  2047  0891                     	;# 
  2048  0892                     	;# 
  2049  0892                     	;# 
  2050  0892                     	;# 
  2051  0893                     	;# 
  2052  0893                     	;# 
  2053  0893                     	;# 
  2054  0893                     	;# 
  2055  0893                     	;# 
  2056  0893                     	;# 
  2057  0894                     	;# 
  2058  0894                     	;# 
  2059  0894                     	;# 
  2060  0895                     	;# 
  2061  0895                     	;# 
  2062  0895                     	;# 
  2063  0896                     	;# 
  2064  0896                     	;# 
  2065  0896                     	;# 
  2066  089B                     	;# 
  2067  0911                     	;# 
  2068  0912                     	;# 
  2069  0913                     	;# 
  2070  0914                     	;# 
  2071  0915                     	;# 
  2072  0916                     	;# 
  2073  0918                     	;# 
  2074  0919                     	;# 
  2075  091A                     	;# 
  2076  091B                     	;# 
  2077  091C                     	;# 
  2078  091D                     	;# 
  2079  091E                     	;# 
  2080  091F                     	;# 
  2081  0E0F                     	;# 
  2082  0E10                     	;# 
  2083  0E11                     	;# 
  2084  0E12                     	;# 
  2085  0E13                     	;# 
  2086  0E14                     	;# 
  2087  0E15                     	;# 
  2088  0E16                     	;# 
  2089  0E17                     	;# 
  2090  0E18                     	;# 
  2091  0E19                     	;# 
  2092  0E1A                     	;# 
  2093  0E1B                     	;# 
  2094  0E1C                     	;# 
  2095  0E1D                     	;# 
  2096  0E1E                     	;# 
  2097  0E1F                     	;# 
  2098  0E20                     	;# 
  2099  0E21                     	;# 
  2100  0E22                     	;# 
  2101  0E24                     	;# 
  2102  0E25                     	;# 
  2103  0E28                     	;# 
  2104  0E29                     	;# 
  2105  0E2A                     	;# 
  2106  0E2B                     	;# 
  2107  0E2C                     	;# 
  2108  0E2D                     	;# 
  2109  0E2E                     	;# 
  2110  0E2F                     	;# 
  2111  0E90                     	;# 
  2112  0E91                     	;# 
  2113  0E92                     	;# 
  2114  0E94                     	;# 
  2115  0E95                     	;# 
  2116  0E9C                     	;# 
  2117  0E9D                     	;# 
  2118  0E9E                     	;# 
  2119  0E9F                     	;# 
  2120  0EA0                     	;# 
  2121  0EA1                     	;# 
  2122  0EA2                     	;# 
  2123  0EA3                     	;# 
  2124  0EA4                     	;# 
  2125  0EA5                     	;# 
  2126  0EA6                     	;# 
  2127  0EA7                     	;# 
  2128  0F0F                     	;# 
  2129  0F10                     	;# 
  2130  0F11                     	;# 
  2131  0F12                     	;# 
  2132  0F13                     	;# 
  2133  0F14                     	;# 
  2134  0F15                     	;# 
  2135  0F16                     	;# 
  2136  0F17                     	;# 
  2137  0F18                     	;# 
  2138  0F19                     	;# 
  2139  0F1A                     	;# 
  2140  0F1B                     	;# 
  2141  0F1C                     	;# 
  2142  0F1D                     	;# 
  2143  0F1E                     	;# 
  2144  0F1F                     	;# 
  2145  0F20                     	;# 
  2146  0F21                     	;# 
  2147  0F22                     	;# 
  2148  0F23                     	;# 
  2149  0F24                     	;# 
  2150  0F25                     	;# 
  2151  0F26                     	;# 
  2152  0F27                     	;# 
  2153  0F28                     	;# 
  2154  0F29                     	;# 
  2155  0F2A                     	;# 
  2156  0F2B                     	;# 
  2157  0F2C                     	;# 
  2158  0F2D                     	;# 
  2159  0F2E                     	;# 
  2160  0F2F                     	;# 
  2161  0F30                     	;# 
  2162  0F31                     	;# 
  2163  0F32                     	;# 
  2164  0F33                     	;# 
  2165  0F34                     	;# 
  2166  0F35                     	;# 
  2167  0F36                     	;# 
  2168  0F37                     	;# 
  2169  0FE4                     	;# 
  2170  0FE5                     	;# 
  2171  0FE6                     	;# 
  2172  0FE7                     	;# 
  2173  0FE8                     	;# 
  2174  0FE9                     	;# 
  2175  0FEA                     	;# 
  2176  0FEB                     	;# 
  2177  0FED                     	;# 
  2178  0FEE                     	;# 
  2179  0FEF                     	;# 
  2180  0000                     	;# 
  2181  0001                     	;# 
  2182  0002                     	;# 
  2183  0003                     	;# 
  2184  0004                     	;# 
  2185  0005                     	;# 
  2186  0006                     	;# 
  2187  0007                     	;# 
  2188  0008                     	;# 
  2189  0009                     	;# 
  2190  000A                     	;# 
  2191  000B                     	;# 
  2192  000C                     	;# 
  2193  000D                     	;# 
  2194  000E                     	;# 
  2195  0010                     	;# 
  2196  0011                     	;# 
  2197  0012                     	;# 
  2198  0013                     	;# 
  2199  0014                     	;# 
  2200  0015                     	;# 
  2201  0015                     	;# 
  2202  0016                     	;# 
  2203  0016                     	;# 
  2204  0017                     	;# 
  2205  0018                     	;# 
  2206  0019                     	;# 
  2207  0019                     	;# 
  2208  001A                     	;# 
  2209  001B                     	;# 
  2210  001C                     	;# 
  2211  001D                     	;# 
  2212  001E                     	;# 
  2213  001F                     	;# 
  2214  008C                     	;# 
  2215  008D                     	;# 
  2216  008E                     	;# 
  2217  0090                     	;# 
  2218  0091                     	;# 
  2219  0092                     	;# 
  2220  0093                     	;# 
  2221  0094                     	;# 
  2222  0097                     	;# 
  2223  009B                     	;# 
  2224  009B                     	;# 
  2225  009C                     	;# 
  2226  009D                     	;# 
  2227  009E                     	;# 
  2228  009F                     	;# 
  2229  010C                     	;# 
  2230  010D                     	;# 
  2231  010E                     	;# 
  2232  0111                     	;# 
  2233  0112                     	;# 
  2234  0113                     	;# 
  2235  0114                     	;# 
  2236  0115                     	;# 
  2237  0116                     	;# 
  2238  0117                     	;# 
  2239  0118                     	;# 
  2240  0119                     	;# 
  2241  018C                     	;# 
  2242  018D                     	;# 
  2243  018E                     	;# 
  2244  0197                     	;# 
  2245  0199                     	;# 
  2246  0199                     	;# 
  2247  0199                     	;# 
  2248  019A                     	;# 
  2249  019A                     	;# 
  2250  019A                     	;# 
  2251  019B                     	;# 
  2252  019B                     	;# 
  2253  019B                     	;# 
  2254  019B                     	;# 
  2255  019B                     	;# 
  2256  019C                     	;# 
  2257  019C                     	;# 
  2258  019C                     	;# 
  2259  019D                     	;# 
  2260  019D                     	;# 
  2261  019D                     	;# 
  2262  019E                     	;# 
  2263  019E                     	;# 
  2264  019E                     	;# 
  2265  019F                     	;# 
  2266  019F                     	;# 
  2267  019F                     	;# 
  2268  019F                     	;# 
  2269  019F                     	;# 
  2270  020C                     	;# 
  2271  020D                     	;# 
  2272  020E                     	;# 
  2273  0211                     	;# 
  2274  0211                     	;# 
  2275  0212                     	;# 
  2276  0212                     	;# 
  2277  0213                     	;# 
  2278  0213                     	;# 
  2279  0214                     	;# 
  2280  0214                     	;# 
  2281  0215                     	;# 
  2282  0215                     	;# 
  2283  0215                     	;# 
  2284  0215                     	;# 
  2285  0216                     	;# 
  2286  0216                     	;# 
  2287  0217                     	;# 
  2288  0217                     	;# 
  2289  0219                     	;# 
  2290  021A                     	;# 
  2291  021B                     	;# 
  2292  021C                     	;# 
  2293  021D                     	;# 
  2294  021D                     	;# 
  2295  021E                     	;# 
  2296  021F                     	;# 
  2297  028C                     	;# 
  2298  028D                     	;# 
  2299  028E                     	;# 
  2300  0291                     	;# 
  2301  0291                     	;# 
  2302  0292                     	;# 
  2303  0293                     	;# 
  2304  0294                     	;# 
  2305  0295                     	;# 
  2306  0295                     	;# 
  2307  0296                     	;# 
  2308  0297                     	;# 
  2309  0298                     	;# 
  2310  029F                     	;# 
  2311  030C                     	;# 
  2312  030D                     	;# 
  2313  030E                     	;# 
  2314  0311                     	;# 
  2315  0311                     	;# 
  2316  0312                     	;# 
  2317  0313                     	;# 
  2318  0314                     	;# 
  2319  0315                     	;# 
  2320  0315                     	;# 
  2321  0316                     	;# 
  2322  0317                     	;# 
  2323  0318                     	;# 
  2324  038C                     	;# 
  2325  038D                     	;# 
  2326  038E                     	;# 
  2327  0391                     	;# 
  2328  0392                     	;# 
  2329  0393                     	;# 
  2330  0394                     	;# 
  2331  0395                     	;# 
  2332  0396                     	;# 
  2333  0397                     	;# 
  2334  0398                     	;# 
  2335  0399                     	;# 
  2336  039A                     	;# 
  2337  039C                     	;# 
  2338  039D                     	;# 
  2339  039E                     	;# 
  2340  039F                     	;# 
  2341  0411                     	;# 
  2342  0411                     	;# 
  2343  0412                     	;# 
  2344  0413                     	;# 
  2345  0414                     	;# 
  2346  0415                     	;# 
  2347  0416                     	;# 
  2348  0417                     	;# 
  2349  0418                     	;# 
  2350  0418                     	;# 
  2351  0419                     	;# 
  2352  041A                     	;# 
  2353  041B                     	;# 
  2354  041C                     	;# 
  2355  041D                     	;# 
  2356  041E                     	;# 
  2357  041F                     	;# 
  2358  0498                     	;# 
  2359  0498                     	;# 
  2360  0499                     	;# 
  2361  049A                     	;# 
  2362  049B                     	;# 
  2363  049B                     	;# 
  2364  049C                     	;# 
  2365  049D                     	;# 
  2366  049E                     	;# 
  2367  049F                     	;# 
  2368  0617                     	;# 
  2369  0618                     	;# 
  2370  0619                     	;# 
  2371  0619                     	;# 
  2372  061A                     	;# 
  2373  061B                     	;# 
  2374  061C                     	;# 
  2375  061C                     	;# 
  2376  061F                     	;# 
  2377  0691                     	;# 
  2378  0692                     	;# 
  2379  0693                     	;# 
  2380  0694                     	;# 
  2381  0695                     	;# 
  2382  0696                     	;# 
  2383  0697                     	;# 
  2384  0698                     	;# 
  2385  0699                     	;# 
  2386  0711                     	;# 
  2387  0712                     	;# 
  2388  0713                     	;# 
  2389  0714                     	;# 
  2390  0715                     	;# 
  2391  0716                     	;# 
  2392  0717                     	;# 
  2393  0718                     	;# 
  2394  0719                     	;# 
  2395  0891                     	;# 
  2396  0891                     	;# 
  2397  0891                     	;# 
  2398  0891                     	;# 
  2399  0891                     	;# 
  2400  0891                     	;# 
  2401  0892                     	;# 
  2402  0892                     	;# 
  2403  0892                     	;# 
  2404  0893                     	;# 
  2405  0893                     	;# 
  2406  0893                     	;# 
  2407  0893                     	;# 
  2408  0893                     	;# 
  2409  0893                     	;# 
  2410  0894                     	;# 
  2411  0894                     	;# 
  2412  0894                     	;# 
  2413  0895                     	;# 
  2414  0895                     	;# 
  2415  0895                     	;# 
  2416  0896                     	;# 
  2417  0896                     	;# 
  2418  0896                     	;# 
  2419  089B                     	;# 
  2420  0911                     	;# 
  2421  0912                     	;# 
  2422  0913                     	;# 
  2423  0914                     	;# 
  2424  0915                     	;# 
  2425  0916                     	;# 
  2426  0918                     	;# 
  2427  0919                     	;# 
  2428  091A                     	;# 
  2429  091B                     	;# 
  2430  091C                     	;# 
  2431  091D                     	;# 
  2432  091E                     	;# 
  2433  091F                     	;# 
  2434  0E0F                     	;# 
  2435  0E10                     	;# 
  2436  0E11                     	;# 
  2437  0E12                     	;# 
  2438  0E13                     	;# 
  2439  0E14                     	;# 
  2440  0E15                     	;# 
  2441  0E16                     	;# 
  2442  0E17                     	;# 
  2443  0E18                     	;# 
  2444  0E19                     	;# 
  2445  0E1A                     	;# 
  2446  0E1B                     	;# 
  2447  0E1C                     	;# 
  2448  0E1D                     	;# 
  2449  0E1E                     	;# 
  2450  0E1F                     	;# 
  2451  0E20                     	;# 
  2452  0E21                     	;# 
  2453  0E22                     	;# 
  2454  0E24                     	;# 
  2455  0E25                     	;# 
  2456  0E28                     	;# 
  2457  0E29                     	;# 
  2458  0E2A                     	;# 
  2459  0E2B                     	;# 
  2460  0E2C                     	;# 
  2461  0E2D                     	;# 
  2462  0E2E                     	;# 
  2463  0E2F                     	;# 
  2464  0E90                     	;# 
  2465  0E91                     	;# 
  2466  0E92                     	;# 
  2467  0E94                     	;# 
  2468  0E95                     	;# 
  2469  0E9C                     	;# 
  2470  0E9D                     	;# 
  2471  0E9E                     	;# 
  2472  0E9F                     	;# 
  2473  0EA0                     	;# 
  2474  0EA1                     	;# 
  2475  0EA2                     	;# 
  2476  0EA3                     	;# 
  2477  0EA4                     	;# 
  2478  0EA5                     	;# 
  2479  0EA6                     	;# 
  2480  0EA7                     	;# 
  2481  0F0F                     	;# 
  2482  0F10                     	;# 
  2483  0F11                     	;# 
  2484  0F12                     	;# 
  2485  0F13                     	;# 
  2486  0F14                     	;# 
  2487  0F15                     	;# 
  2488  0F16                     	;# 
  2489  0F17                     	;# 
  2490  0F18                     	;# 
  2491  0F19                     	;# 
  2492  0F1A                     	;# 
  2493  0F1B                     	;# 
  2494  0F1C                     	;# 
  2495  0F1D                     	;# 
  2496  0F1E                     	;# 
  2497  0F1F                     	;# 
  2498  0F20                     	;# 
  2499  0F21                     	;# 
  2500  0F22                     	;# 
  2501  0F23                     	;# 
  2502  0F24                     	;# 
  2503  0F25                     	;# 
  2504  0F26                     	;# 
  2505  0F27                     	;# 
  2506  0F28                     	;# 
  2507  0F29                     	;# 
  2508  0F2A                     	;# 
  2509  0F2B                     	;# 
  2510  0F2C                     	;# 
  2511  0F2D                     	;# 
  2512  0F2E                     	;# 
  2513  0F2F                     	;# 
  2514  0F30                     	;# 
  2515  0F31                     	;# 
  2516  0F32                     	;# 
  2517  0F33                     	;# 
  2518  0F34                     	;# 
  2519  0F35                     	;# 
  2520  0F36                     	;# 
  2521  0F37                     	;# 
  2522  0FE4                     	;# 
  2523  0FE5                     	;# 
  2524  0FE6                     	;# 
  2525  0FE7                     	;# 
  2526  0FE8                     	;# 
  2527  0FE9                     	;# 
  2528  0FEA                     	;# 
  2529  0FEB                     	;# 
  2530  0FED                     	;# 
  2531  0FEE                     	;# 
  2532  0FEF                     	;# 
  2533  0000                     	;# 
  2534  0001                     	;# 
  2535  0002                     	;# 
  2536  0003                     	;# 
  2537  0004                     	;# 
  2538  0005                     	;# 
  2539  0006                     	;# 
  2540  0007                     	;# 
  2541  0008                     	;# 
  2542  0009                     	;# 
  2543  000A                     	;# 
  2544  000B                     	;# 
  2545  000C                     	;# 
  2546  000D                     	;# 
  2547  000E                     	;# 
  2548  0010                     	;# 
  2549  0011                     	;# 
  2550  0012                     	;# 
  2551  0013                     	;# 
  2552  0014                     	;# 
  2553  0015                     	;# 
  2554  0015                     	;# 
  2555  0016                     	;# 
  2556  0016                     	;# 
  2557  0017                     	;# 
  2558  0018                     	;# 
  2559  0019                     	;# 
  2560  0019                     	;# 
  2561  001A                     	;# 
  2562  001B                     	;# 
  2563  001C                     	;# 
  2564  001D                     	;# 
  2565  001E                     	;# 
  2566  001F                     	;# 
  2567  008C                     	;# 
  2568  008D                     	;# 
  2569  008E                     	;# 
  2570  0090                     	;# 
  2571  0091                     	;# 
  2572  0092                     	;# 
  2573  0093                     	;# 
  2574  0094                     	;# 
  2575  0097                     	;# 
  2576  009B                     	;# 
  2577  009B                     	;# 
  2578  009C                     	;# 
  2579  009D                     	;# 
  2580  009E                     	;# 
  2581  009F                     	;# 
  2582  010C                     	;# 
  2583  010D                     	;# 
  2584  010E                     	;# 
  2585  0111                     	;# 
  2586  0112                     	;# 
  2587  0113                     	;# 
  2588  0114                     	;# 
  2589  0115                     	;# 
  2590  0116                     	;# 
  2591  0117                     	;# 
  2592  0118                     	;# 
  2593  0119                     	;# 
  2594  018C                     	;# 
  2595  018D                     	;# 
  2596  018E                     	;# 
  2597  0197                     	;# 
  2598  0199                     	;# 
  2599  0199                     	;# 
  2600  0199                     	;# 
  2601  019A                     	;# 
  2602  019A                     	;# 
  2603  019A                     	;# 
  2604  019B                     	;# 
  2605  019B                     	;# 
  2606  019B                     	;# 
  2607  019B                     	;# 
  2608  019B                     	;# 
  2609  019C                     	;# 
  2610  019C                     	;# 
  2611  019C                     	;# 
  2612  019D                     	;# 
  2613  019D                     	;# 
  2614  019D                     	;# 
  2615  019E                     	;# 
  2616  019E                     	;# 
  2617  019E                     	;# 
  2618  019F                     	;# 
  2619  019F                     	;# 
  2620  019F                     	;# 
  2621  019F                     	;# 
  2622  019F                     	;# 
  2623  020C                     	;# 
  2624  020D                     	;# 
  2625  020E                     	;# 
  2626  0211                     	;# 
  2627  0211                     	;# 
  2628  0212                     	;# 
  2629  0212                     	;# 
  2630  0213                     	;# 
  2631  0213                     	;# 
  2632  0214                     	;# 
  2633  0214                     	;# 
  2634  0215                     	;# 
  2635  0215                     	;# 
  2636  0215                     	;# 
  2637  0215                     	;# 
  2638  0216                     	;# 
  2639  0216                     	;# 
  2640  0217                     	;# 
  2641  0217                     	;# 
  2642  0219                     	;# 
  2643  021A                     	;# 
  2644  021B                     	;# 
  2645  021C                     	;# 
  2646  021D                     	;# 
  2647  021D                     	;# 
  2648  021E                     	;# 
  2649  021F                     	;# 
  2650  028C                     	;# 
  2651  028D                     	;# 
  2652  028E                     	;# 
  2653  0291                     	;# 
  2654  0291                     	;# 
  2655  0292                     	;# 
  2656  0293                     	;# 
  2657  0294                     	;# 
  2658  0295                     	;# 
  2659  0295                     	;# 
  2660  0296                     	;# 
  2661  0297                     	;# 
  2662  0298                     	;# 
  2663  029F                     	;# 
  2664  030C                     	;# 
  2665  030D                     	;# 
  2666  030E                     	;# 
  2667  0311                     	;# 
  2668  0311                     	;# 
  2669  0312                     	;# 
  2670  0313                     	;# 
  2671  0314                     	;# 
  2672  0315                     	;# 
  2673  0315                     	;# 
  2674  0316                     	;# 
  2675  0317                     	;# 
  2676  0318                     	;# 
  2677  038C                     	;# 
  2678  038D                     	;# 
  2679  038E                     	;# 
  2680  0391                     	;# 
  2681  0392                     	;# 
  2682  0393                     	;# 
  2683  0394                     	;# 
  2684  0395                     	;# 
  2685  0396                     	;# 
  2686  0397                     	;# 
  2687  0398                     	;# 
  2688  0399                     	;# 
  2689  039A                     	;# 
  2690  039C                     	;# 
  2691  039D                     	;# 
  2692  039E                     	;# 
  2693  039F                     	;# 
  2694  0411                     	;# 
  2695  0411                     	;# 
  2696  0412                     	;# 
  2697  0413                     	;# 
  2698  0414                     	;# 
  2699  0415                     	;# 
  2700  0416                     	;# 
  2701  0417                     	;# 
  2702  0418                     	;# 
  2703  0418                     	;# 
  2704  0419                     	;# 
  2705  041A                     	;# 
  2706  041B                     	;# 
  2707  041C                     	;# 
  2708  041D                     	;# 
  2709  041E                     	;# 
  2710  041F                     	;# 
  2711  0498                     	;# 
  2712  0498                     	;# 
  2713  0499                     	;# 
  2714  049A                     	;# 
  2715  049B                     	;# 
  2716  049B                     	;# 
  2717  049C                     	;# 
  2718  049D                     	;# 
  2719  049E                     	;# 
  2720  049F                     	;# 
  2721  0617                     	;# 
  2722  0618                     	;# 
  2723  0619                     	;# 
  2724  0619                     	;# 
  2725  061A                     	;# 
  2726  061B                     	;# 
  2727  061C                     	;# 
  2728  061C                     	;# 
  2729  061F                     	;# 
  2730  0691                     	;# 
  2731  0692                     	;# 
  2732  0693                     	;# 
  2733  0694                     	;# 
  2734  0695                     	;# 
  2735  0696                     	;# 
  2736  0697                     	;# 
  2737  0698                     	;# 
  2738  0699                     	;# 
  2739  0711                     	;# 
  2740  0712                     	;# 
  2741  0713                     	;# 
  2742  0714                     	;# 
  2743  0715                     	;# 
  2744  0716                     	;# 
  2745  0717                     	;# 
  2746  0718                     	;# 
  2747  0719                     	;# 
  2748  0891                     	;# 
  2749  0891                     	;# 
  2750  0891                     	;# 
  2751  0891                     	;# 
  2752  0891                     	;# 
  2753  0891                     	;# 
  2754  0892                     	;# 
  2755  0892                     	;# 
  2756  0892                     	;# 
  2757  0893                     	;# 
  2758  0893                     	;# 
  2759  0893                     	;# 
  2760  0893                     	;# 
  2761  0893                     	;# 
  2762  0893                     	;# 
  2763  0894                     	;# 
  2764  0894                     	;# 
  2765  0894                     	;# 
  2766  0895                     	;# 
  2767  0895                     	;# 
  2768  0895                     	;# 
  2769  0896                     	;# 
  2770  0896                     	;# 
  2771  0896                     	;# 
  2772  089B                     	;# 
  2773  0911                     	;# 
  2774  0912                     	;# 
  2775  0913                     	;# 
  2776  0914                     	;# 
  2777  0915                     	;# 
  2778  0916                     	;# 
  2779  0918                     	;# 
  2780  0919                     	;# 
  2781  091A                     	;# 
  2782  091B                     	;# 
  2783  091C                     	;# 
  2784  091D                     	;# 
  2785  091E                     	;# 
  2786  091F                     	;# 
  2787  0E0F                     	;# 
  2788  0E10                     	;# 
  2789  0E11                     	;# 
  2790  0E12                     	;# 
  2791  0E13                     	;# 
  2792  0E14                     	;# 
  2793  0E15                     	;# 
  2794  0E16                     	;# 
  2795  0E17                     	;# 
  2796  0E18                     	;# 
  2797  0E19                     	;# 
  2798  0E1A                     	;# 
  2799  0E1B                     	;# 
  2800  0E1C                     	;# 
  2801  0E1D                     	;# 
  2802  0E1E                     	;# 
  2803  0E1F                     	;# 
  2804  0E20                     	;# 
  2805  0E21                     	;# 
  2806  0E22                     	;# 
  2807  0E24                     	;# 
  2808  0E25                     	;# 
  2809  0E28                     	;# 
  2810  0E29                     	;# 
  2811  0E2A                     	;# 
  2812  0E2B                     	;# 
  2813  0E2C                     	;# 
  2814  0E2D                     	;# 
  2815  0E2E                     	;# 
  2816  0E2F                     	;# 
  2817  0E90                     	;# 
  2818  0E91                     	;# 
  2819  0E92                     	;# 
  2820  0E94                     	;# 
  2821  0E95                     	;# 
  2822  0E9C                     	;# 
  2823  0E9D                     	;# 
  2824  0E9E                     	;# 
  2825  0E9F                     	;# 
  2826  0EA0                     	;# 
  2827  0EA1                     	;# 
  2828  0EA2                     	;# 
  2829  0EA3                     	;# 
  2830  0EA4                     	;# 
  2831  0EA5                     	;# 
  2832  0EA6                     	;# 
  2833  0EA7                     	;# 
  2834  0F0F                     	;# 
  2835  0F10                     	;# 
  2836  0F11                     	;# 
  2837  0F12                     	;# 
  2838  0F13                     	;# 
  2839  0F14                     	;# 
  2840  0F15                     	;# 
  2841  0F16                     	;# 
  2842  0F17                     	;# 
  2843  0F18                     	;# 
  2844  0F19                     	;# 
  2845  0F1A                     	;# 
  2846  0F1B                     	;# 
  2847  0F1C                     	;# 
  2848  0F1D                     	;# 
  2849  0F1E                     	;# 
  2850  0F1F                     	;# 
  2851  0F20                     	;# 
  2852  0F21                     	;# 
  2853  0F22                     	;# 
  2854  0F23                     	;# 
  2855  0F24                     	;# 
  2856  0F25                     	;# 
  2857  0F26                     	;# 
  2858  0F27                     	;# 
  2859  0F28                     	;# 
  2860  0F29                     	;# 
  2861  0F2A                     	;# 
  2862  0F2B                     	;# 
  2863  0F2C                     	;# 
  2864  0F2D                     	;# 
  2865  0F2E                     	;# 
  2866  0F2F                     	;# 
  2867  0F30                     	;# 
  2868  0F31                     	;# 
  2869  0F32                     	;# 
  2870  0F33                     	;# 
  2871  0F34                     	;# 
  2872  0F35                     	;# 
  2873  0F36                     	;# 
  2874  0F37                     	;# 
  2875  0FE4                     	;# 
  2876  0FE5                     	;# 
  2877  0FE6                     	;# 
  2878  0FE7                     	;# 
  2879  0FE8                     	;# 
  2880  0FE9                     	;# 
  2881  0FEA                     	;# 
  2882  0FEB                     	;# 
  2883  0FED                     	;# 
  2884  0FEE                     	;# 
  2885  0FEF                     	;# 
  2886  0000                     	;# 
  2887  0001                     	;# 
  2888  0002                     	;# 
  2889  0003                     	;# 
  2890  0004                     	;# 
  2891  0005                     	;# 
  2892  0006                     	;# 
  2893  0007                     	;# 
  2894  0008                     	;# 
  2895  0009                     	;# 
  2896  000A                     	;# 
  2897  000B                     	;# 
  2898  000C                     	;# 
  2899  000D                     	;# 
  2900  000E                     	;# 
  2901  0010                     	;# 
  2902  0011                     	;# 
  2903  0012                     	;# 
  2904  0013                     	;# 
  2905  0014                     	;# 
  2906  0015                     	;# 
  2907  0015                     	;# 
  2908  0016                     	;# 
  2909  0016                     	;# 
  2910  0017                     	;# 
  2911  0018                     	;# 
  2912  0019                     	;# 
  2913  0019                     	;# 
  2914  001A                     	;# 
  2915  001B                     	;# 
  2916  001C                     	;# 
  2917  001D                     	;# 
  2918  001E                     	;# 
  2919  001F                     	;# 
  2920  008C                     	;# 
  2921  008D                     	;# 
  2922  008E                     	;# 
  2923  0090                     	;# 
  2924  0091                     	;# 
  2925  0092                     	;# 
  2926  0093                     	;# 
  2927  0094                     	;# 
  2928  0097                     	;# 
  2929  009B                     	;# 
  2930  009B                     	;# 
  2931  009C                     	;# 
  2932  009D                     	;# 
  2933  009E                     	;# 
  2934  009F                     	;# 
  2935  010C                     	;# 
  2936  010D                     	;# 
  2937  010E                     	;# 
  2938  0111                     	;# 
  2939  0112                     	;# 
  2940  0113                     	;# 
  2941  0114                     	;# 
  2942  0115                     	;# 
  2943  0116                     	;# 
  2944  0117                     	;# 
  2945  0118                     	;# 
  2946  0119                     	;# 
  2947  018C                     	;# 
  2948  018D                     	;# 
  2949  018E                     	;# 
  2950  0197                     	;# 
  2951  0199                     	;# 
  2952  0199                     	;# 
  2953  0199                     	;# 
  2954  019A                     	;# 
  2955  019A                     	;# 
  2956  019A                     	;# 
  2957  019B                     	;# 
  2958  019B                     	;# 
  2959  019B                     	;# 
  2960  019B                     	;# 
  2961  019B                     	;# 
  2962  019C                     	;# 
  2963  019C                     	;# 
  2964  019C                     	;# 
  2965  019D                     	;# 
  2966  019D                     	;# 
  2967  019D                     	;# 
  2968  019E                     	;# 
  2969  019E                     	;# 
  2970  019E                     	;# 
  2971  019F                     	;# 
  2972  019F                     	;# 
  2973  019F                     	;# 
  2974  019F                     	;# 
  2975  019F                     	;# 
  2976  020C                     	;# 
  2977  020D                     	;# 
  2978  020E                     	;# 
  2979  0211                     	;# 
  2980  0211                     	;# 
  2981  0212                     	;# 
  2982  0212                     	;# 
  2983  0213                     	;# 
  2984  0213                     	;# 
  2985  0214                     	;# 
  2986  0214                     	;# 
  2987  0215                     	;# 
  2988  0215                     	;# 
  2989  0215                     	;# 
  2990  0215                     	;# 
  2991  0216                     	;# 
  2992  0216                     	;# 
  2993  0217                     	;# 
  2994  0217                     	;# 
  2995  0219                     	;# 
  2996  021A                     	;# 
  2997  021B                     	;# 
  2998  021C                     	;# 
  2999  021D                     	;# 
  3000  021D                     	;# 
  3001  021E                     	;# 
  3002  021F                     	;# 
  3003  028C                     	;# 
  3004  028D                     	;# 
  3005  028E                     	;# 
  3006  0291                     	;# 
  3007  0291                     	;# 
  3008  0292                     	;# 
  3009  0293                     	;# 
  3010  0294                     	;# 
  3011  0295                     	;# 
  3012  0295                     	;# 
  3013  0296                     	;# 
  3014  0297                     	;# 
  3015  0298                     	;# 
  3016  029F                     	;# 
  3017  030C                     	;# 
  3018  030D                     	;# 
  3019  030E                     	;# 
  3020  0311                     	;# 
  3021  0311                     	;# 
  3022  0312                     	;# 
  3023  0313                     	;# 
  3024  0314                     	;# 
  3025  0315                     	;# 
  3026  0315                     	;# 
  3027  0316                     	;# 
  3028  0317                     	;# 
  3029  0318                     	;# 
  3030  038C                     	;# 
  3031  038D                     	;# 
  3032  038E                     	;# 
  3033  0391                     	;# 
  3034  0392                     	;# 
  3035  0393                     	;# 
  3036  0394                     	;# 
  3037  0395                     	;# 
  3038  0396                     	;# 
  3039  0397                     	;# 
  3040  0398                     	;# 
  3041  0399                     	;# 
  3042  039A                     	;# 
  3043  039C                     	;# 
  3044  039D                     	;# 
  3045  039E                     	;# 
  3046  039F                     	;# 
  3047  0411                     	;# 
  3048  0411                     	;# 
  3049  0412                     	;# 
  3050  0413                     	;# 
  3051  0414                     	;# 
  3052  0415                     	;# 
  3053  0416                     	;# 
  3054  0417                     	;# 
  3055  0418                     	;# 
  3056  0418                     	;# 
  3057  0419                     	;# 
  3058  041A                     	;# 
  3059  041B                     	;# 
  3060  041C                     	;# 
  3061  041D                     	;# 
  3062  041E                     	;# 
  3063  041F                     	;# 
  3064  0498                     	;# 
  3065  0498                     	;# 
  3066  0499                     	;# 
  3067  049A                     	;# 
  3068  049B                     	;# 
  3069  049B                     	;# 
  3070  049C                     	;# 
  3071  049D                     	;# 
  3072  049E                     	;# 
  3073  049F                     	;# 
  3074  0617                     	;# 
  3075  0618                     	;# 
  3076  0619                     	;# 
  3077  0619                     	;# 
  3078  061A                     	;# 
  3079  061B                     	;# 
  3080  061C                     	;# 
  3081  061C                     	;# 
  3082  061F                     	;# 
  3083  0691                     	;# 
  3084  0692                     	;# 
  3085  0693                     	;# 
  3086  0694                     	;# 
  3087  0695                     	;# 
  3088  0696                     	;# 
  3089  0697                     	;# 
  3090  0698                     	;# 
  3091  0699                     	;# 
  3092  0711                     	;# 
  3093  0712                     	;# 
  3094  0713                     	;# 
  3095  0714                     	;# 
  3096  0715                     	;# 
  3097  0716                     	;# 
  3098  0717                     	;# 
  3099  0718                     	;# 
  3100  0719                     	;# 
  3101  0891                     	;# 
  3102  0891                     	;# 
  3103  0891                     	;# 
  3104  0891                     	;# 
  3105  0891                     	;# 
  3106  0891                     	;# 
  3107  0892                     	;# 
  3108  0892                     	;# 
  3109  0892                     	;# 
  3110  0893                     	;# 
  3111  0893                     	;# 
  3112  0893                     	;# 
  3113  0893                     	;# 
  3114  0893                     	;# 
  3115  0893                     	;# 
  3116  0894                     	;# 
  3117  0894                     	;# 
  3118  0894                     	;# 
  3119  0895                     	;# 
  3120  0895                     	;# 
  3121  0895                     	;# 
  3122  0896                     	;# 
  3123  0896                     	;# 
  3124  0896                     	;# 
  3125  089B                     	;# 
  3126  0911                     	;# 
  3127  0912                     	;# 
  3128  0913                     	;# 
  3129  0914                     	;# 
  3130  0915                     	;# 
  3131  0916                     	;# 
  3132  0918                     	;# 
  3133  0919                     	;# 
  3134  091A                     	;# 
  3135  091B                     	;# 
  3136  091C                     	;# 
  3137  091D                     	;# 
  3138  091E                     	;# 
  3139  091F                     	;# 
  3140  0E0F                     	;# 
  3141  0E10                     	;# 
  3142  0E11                     	;# 
  3143  0E12                     	;# 
  3144  0E13                     	;# 
  3145  0E14                     	;# 
  3146  0E15                     	;# 
  3147  0E16                     	;# 
  3148  0E17                     	;# 
  3149  0E18                     	;# 
  3150  0E19                     	;# 
  3151  0E1A                     	;# 
  3152  0E1B                     	;# 
  3153  0E1C                     	;# 
  3154  0E1D                     	;# 
  3155  0E1E                     	;# 
  3156  0E1F                     	;# 
  3157  0E20                     	;# 
  3158  0E21                     	;# 
  3159  0E22                     	;# 
  3160  0E24                     	;# 
  3161  0E25                     	;# 
  3162  0E28                     	;# 
  3163  0E29                     	;# 
  3164  0E2A                     	;# 
  3165  0E2B                     	;# 
  3166  0E2C                     	;# 
  3167  0E2D                     	;# 
  3168  0E2E                     	;# 
  3169  0E2F                     	;# 
  3170  0E90                     	;# 
  3171  0E91                     	;# 
  3172  0E92                     	;# 
  3173  0E94                     	;# 
  3174  0E95                     	;# 
  3175  0E9C                     	;# 
  3176  0E9D                     	;# 
  3177  0E9E                     	;# 
  3178  0E9F                     	;# 
  3179  0EA0                     	;# 
  3180  0EA1                     	;# 
  3181  0EA2                     	;# 
  3182  0EA3                     	;# 
  3183  0EA4                     	;# 
  3184  0EA5                     	;# 
  3185  0EA6                     	;# 
  3186  0EA7                     	;# 
  3187  0F0F                     	;# 
  3188  0F10                     	;# 
  3189  0F11                     	;# 
  3190  0F12                     	;# 
  3191  0F13                     	;# 
  3192  0F14                     	;# 
  3193  0F15                     	;# 
  3194  0F16                     	;# 
  3195  0F17                     	;# 
  3196  0F18                     	;# 
  3197  0F19                     	;# 
  3198  0F1A                     	;# 
  3199  0F1B                     	;# 
  3200  0F1C                     	;# 
  3201  0F1D                     	;# 
  3202  0F1E                     	;# 
  3203  0F1F                     	;# 
  3204  0F20                     	;# 
  3205  0F21                     	;# 
  3206  0F22                     	;# 
  3207  0F23                     	;# 
  3208  0F24                     	;# 
  3209  0F25                     	;# 
  3210  0F26                     	;# 
  3211  0F27                     	;# 
  3212  0F28                     	;# 
  3213  0F29                     	;# 
  3214  0F2A                     	;# 
  3215  0F2B                     	;# 
  3216  0F2C                     	;# 
  3217  0F2D                     	;# 
  3218  0F2E                     	;# 
  3219  0F2F                     	;# 
  3220  0F30                     	;# 
  3221  0F31                     	;# 
  3222  0F32                     	;# 
  3223  0F33                     	;# 
  3224  0F34                     	;# 
  3225  0F35                     	;# 
  3226  0F36                     	;# 
  3227  0F37                     	;# 
  3228  0FE4                     	;# 
  3229  0FE5                     	;# 
  3230  0FE6                     	;# 
  3231  0FE7                     	;# 
  3232  0FE8                     	;# 
  3233  0FE9                     	;# 
  3234  0FEA                     	;# 
  3235  0FEB                     	;# 
  3236  0FED                     	;# 
  3237  0FEE                     	;# 
  3238  0FEF                     	;# 
  3239  0000                     	;# 
  3240  0001                     	;# 
  3241  0002                     	;# 
  3242  0003                     	;# 
  3243  0004                     	;# 
  3244  0005                     	;# 
  3245  0006                     	;# 
  3246  0007                     	;# 
  3247  0008                     	;# 
  3248  0009                     	;# 
  3249  000A                     	;# 
  3250  000B                     	;# 
  3251  000C                     	;# 
  3252  000D                     	;# 
  3253  000E                     	;# 
  3254  0010                     	;# 
  3255  0011                     	;# 
  3256  0012                     	;# 
  3257  0013                     	;# 
  3258  0014                     	;# 
  3259  0015                     	;# 
  3260  0015                     	;# 
  3261  0016                     	;# 
  3262  0016                     	;# 
  3263  0017                     	;# 
  3264  0018                     	;# 
  3265  0019                     	;# 
  3266  0019                     	;# 
  3267  001A                     	;# 
  3268  001B                     	;# 
  3269  001C                     	;# 
  3270  001D                     	;# 
  3271  001E                     	;# 
  3272  001F                     	;# 
  3273  008C                     	;# 
  3274  008D                     	;# 
  3275  008E                     	;# 
  3276  0090                     	;# 
  3277  0091                     	;# 
  3278  0092                     	;# 
  3279  0093                     	;# 
  3280  0094                     	;# 
  3281  0097                     	;# 
  3282  009B                     	;# 
  3283  009B                     	;# 
  3284  009C                     	;# 
  3285  009D                     	;# 
  3286  009E                     	;# 
  3287  009F                     	;# 
  3288  010C                     	;# 
  3289  010D                     	;# 
  3290  010E                     	;# 
  3291  0111                     	;# 
  3292  0112                     	;# 
  3293  0113                     	;# 
  3294  0114                     	;# 
  3295  0115                     	;# 
  3296  0116                     	;# 
  3297  0117                     	;# 
  3298  0118                     	;# 
  3299  0119                     	;# 
  3300  018C                     	;# 
  3301  018D                     	;# 
  3302  018E                     	;# 
  3303  0197                     	;# 
  3304  0199                     	;# 
  3305  0199                     	;# 
  3306  0199                     	;# 
  3307  019A                     	;# 
  3308  019A                     	;# 
  3309  019A                     	;# 
  3310  019B                     	;# 
  3311  019B                     	;# 
  3312  019B                     	;# 
  3313  019B                     	;# 
  3314  019B                     	;# 
  3315  019C                     	;# 
  3316  019C                     	;# 
  3317  019C                     	;# 
  3318  019D                     	;# 
  3319  019D                     	;# 
  3320  019D                     	;# 
  3321  019E                     	;# 
  3322  019E                     	;# 
  3323  019E                     	;# 
  3324  019F                     	;# 
  3325  019F                     	;# 
  3326  019F                     	;# 
  3327  019F                     	;# 
  3328  019F                     	;# 
  3329  020C                     	;# 
  3330  020D                     	;# 
  3331  020E                     	;# 
  3332  0211                     	;# 
  3333  0211                     	;# 
  3334  0212                     	;# 
  3335  0212                     	;# 
  3336  0213                     	;# 
  3337  0213                     	;# 
  3338  0214                     	;# 
  3339  0214                     	;# 
  3340  0215                     	;# 
  3341  0215                     	;# 
  3342  0215                     	;# 
  3343  0215                     	;# 
  3344  0216                     	;# 
  3345  0216                     	;# 
  3346  0217                     	;# 
  3347  0217                     	;# 
  3348  0219                     	;# 
  3349  021A                     	;# 
  3350  021B                     	;# 
  3351  021C                     	;# 
  3352  021D                     	;# 
  3353  021D                     	;# 
  3354  021E                     	;# 
  3355  021F                     	;# 
  3356  028C                     	;# 
  3357  028D                     	;# 
  3358  028E                     	;# 
  3359  0291                     	;# 
  3360  0291                     	;# 
  3361  0292                     	;# 
  3362  0293                     	;# 
  3363  0294                     	;# 
  3364  0295                     	;# 
  3365  0295                     	;# 
  3366  0296                     	;# 
  3367  0297                     	;# 
  3368  0298                     	;# 
  3369  029F                     	;# 
  3370  030C                     	;# 
  3371  030D                     	;# 
  3372  030E                     	;# 
  3373  0311                     	;# 
  3374  0311                     	;# 
  3375  0312                     	;# 
  3376  0313                     	;# 
  3377  0314                     	;# 
  3378  0315                     	;# 
  3379  0315                     	;# 
  3380  0316                     	;# 
  3381  0317                     	;# 
  3382  0318                     	;# 
  3383  038C                     	;# 
  3384  038D                     	;# 
  3385  038E                     	;# 
  3386  0391                     	;# 
  3387  0392                     	;# 
  3388  0393                     	;# 
  3389  0394                     	;# 
  3390  0395                     	;# 
  3391  0396                     	;# 
  3392  0397                     	;# 
  3393  0398                     	;# 
  3394  0399                     	;# 
  3395  039A                     	;# 
  3396  039C                     	;# 
  3397  039D                     	;# 
  3398  039E                     	;# 
  3399  039F                     	;# 
  3400  0411                     	;# 
  3401  0411                     	;# 
  3402  0412                     	;# 
  3403  0413                     	;# 
  3404  0414                     	;# 
  3405  0415                     	;# 
  3406  0416                     	;# 
  3407  0417                     	;# 
  3408  0418                     	;# 
  3409  0418                     	;# 
  3410  0419                     	;# 
  3411  041A                     	;# 
  3412  041B                     	;# 
  3413  041C                     	;# 
  3414  041D                     	;# 
  3415  041E                     	;# 
  3416  041F                     	;# 
  3417  0498                     	;# 
  3418  0498                     	;# 
  3419  0499                     	;# 
  3420  049A                     	;# 
  3421  049B                     	;# 
  3422  049B                     	;# 
  3423  049C                     	;# 
  3424  049D                     	;# 
  3425  049E                     	;# 
  3426  049F                     	;# 
  3427  0617                     	;# 
  3428  0618                     	;# 
  3429  0619                     	;# 
  3430  0619                     	;# 
  3431  061A                     	;# 
  3432  061B                     	;# 
  3433  061C                     	;# 
  3434  061C                     	;# 
  3435  061F                     	;# 
  3436  0691                     	;# 
  3437  0692                     	;# 
  3438  0693                     	;# 
  3439  0694                     	;# 
  3440  0695                     	;# 
  3441  0696                     	;# 
  3442  0697                     	;# 
  3443  0698                     	;# 
  3444  0699                     	;# 
  3445  0711                     	;# 
  3446  0712                     	;# 
  3447  0713                     	;# 
  3448  0714                     	;# 
  3449  0715                     	;# 
  3450  0716                     	;# 
  3451  0717                     	;# 
  3452  0718                     	;# 
  3453  0719                     	;# 
  3454  0891                     	;# 
  3455  0891                     	;# 
  3456  0891                     	;# 
  3457  0891                     	;# 
  3458  0891                     	;# 
  3459  0891                     	;# 
  3460  0892                     	;# 
  3461  0892                     	;# 
  3462  0892                     	;# 
  3463  0893                     	;# 
  3464  0893                     	;# 
  3465  0893                     	;# 
  3466  0893                     	;# 
  3467  0893                     	;# 
  3468  0893                     	;# 
  3469  0894                     	;# 
  3470  0894                     	;# 
  3471  0894                     	;# 
  3472  0895                     	;# 
  3473  0895                     	;# 
  3474  0895                     	;# 
  3475  0896                     	;# 
  3476  0896                     	;# 
  3477  0896                     	;# 
  3478  089B                     	;# 
  3479  0911                     	;# 
  3480  0912                     	;# 
  3481  0913                     	;# 
  3482  0914                     	;# 
  3483  0915                     	;# 
  3484  0916                     	;# 
  3485  0918                     	;# 
  3486  0919                     	;# 
  3487  091A                     	;# 
  3488  091B                     	;# 
  3489  091C                     	;# 
  3490  091D                     	;# 
  3491  091E                     	;# 
  3492  091F                     	;# 
  3493  0E0F                     	;# 
  3494  0E10                     	;# 
  3495  0E11                     	;# 
  3496  0E12                     	;# 
  3497  0E13                     	;# 
  3498  0E14                     	;# 
  3499  0E15                     	;# 
  3500  0E16                     	;# 
  3501  0E17                     	;# 
  3502  0E18                     	;# 
  3503  0E19                     	;# 
  3504  0E1A                     	;# 
  3505  0E1B                     	;# 
  3506  0E1C                     	;# 
  3507  0E1D                     	;# 
  3508  0E1E                     	;# 
  3509  0E1F                     	;# 
  3510  0E20                     	;# 
  3511  0E21                     	;# 
  3512  0E22                     	;# 
  3513  0E24                     	;# 
  3514  0E25                     	;# 
  3515  0E28                     	;# 
  3516  0E29                     	;# 
  3517  0E2A                     	;# 
  3518  0E2B                     	;# 
  3519  0E2C                     	;# 
  3520  0E2D                     	;# 
  3521  0E2E                     	;# 
  3522  0E2F                     	;# 
  3523  0E90                     	;# 
  3524  0E91                     	;# 
  3525  0E92                     	;# 
  3526  0E94                     	;# 
  3527  0E95                     	;# 
  3528  0E9C                     	;# 
  3529  0E9D                     	;# 
  3530  0E9E                     	;# 
  3531  0E9F                     	;# 
  3532  0EA0                     	;# 
  3533  0EA1                     	;# 
  3534  0EA2                     	;# 
  3535  0EA3                     	;# 
  3536  0EA4                     	;# 
  3537  0EA5                     	;# 
  3538  0EA6                     	;# 
  3539  0EA7                     	;# 
  3540  0F0F                     	;# 
  3541  0F10                     	;# 
  3542  0F11                     	;# 
  3543  0F12                     	;# 
  3544  0F13                     	;# 
  3545  0F14                     	;# 
  3546  0F15                     	;# 
  3547  0F16                     	;# 
  3548  0F17                     	;# 
  3549  0F18                     	;# 
  3550  0F19                     	;# 
  3551  0F1A                     	;# 
  3552  0F1B                     	;# 
  3553  0F1C                     	;# 
  3554  0F1D                     	;# 
  3555  0F1E                     	;# 
  3556  0F1F                     	;# 
  3557  0F20                     	;# 
  3558  0F21                     	;# 
  3559  0F22                     	;# 
  3560  0F23                     	;# 
  3561  0F24                     	;# 
  3562  0F25                     	;# 
  3563  0F26                     	;# 
  3564  0F27                     	;# 
  3565  0F28                     	;# 
  3566  0F29                     	;# 
  3567  0F2A                     	;# 
  3568  0F2B                     	;# 
  3569  0F2C                     	;# 
  3570  0F2D                     	;# 
  3571  0F2E                     	;# 
  3572  0F2F                     	;# 
  3573  0F30                     	;# 
  3574  0F31                     	;# 
  3575  0F32                     	;# 
  3576  0F33                     	;# 
  3577  0F34                     	;# 
  3578  0F35                     	;# 
  3579  0F36                     	;# 
  3580  0F37                     	;# 
  3581  0FE4                     	;# 
  3582  0FE5                     	;# 
  3583  0FE6                     	;# 
  3584  0FE7                     	;# 
  3585  0FE8                     	;# 
  3586  0FE9                     	;# 
  3587  0FEA                     	;# 
  3588  0FEB                     	;# 
  3589  0FED                     	;# 
  3590  0FEE                     	;# 
  3591  0FEF                     	;# 
  3592                           
  3593                           	psect	idataBANK0
  3594  0757                     __pidataBANK0:	
  3595                           
  3596                           ;initializer for app_led@max_bright
  3597  0757  3458               	retlw	88
  3598  0758  3402               	retlw	2
  3599  0759  3458               	retlw	88
  3600  075A  3402               	retlw	2
  3601  075B  342C               	retlw	44
  3602  075C  3401               	retlw	1
  3603  075D  34EE               	retlw	238
  3604  075E  3402               	retlw	2
  3605  075F  34EE               	retlw	238
  3606  0760  3402               	retlw	2
  3607                           
  3608                           ;initializer for _max_bright
  3609  0761  3458               	retlw	88
  3610  0762  3402               	retlw	2
  3611  0763  3458               	retlw	88
  3612  0764  3402               	retlw	2
  3613  0765  342C               	retlw	44
  3614  0766  3401               	retlw	1
  3615  0767  34EE               	retlw	238
  3616  0768  3402               	retlw	2
  3617  0769  34EE               	retlw	238
  3618  076A  3402               	retlw	2
  3619                           
  3620                           ;initializer for _step_bright
  3621  076B  343C               	retlw	60
  3622  076C  343C               	retlw	60
  3623  076D  341E               	retlw	30
  3624  076E  344B               	retlw	75
  3625  076F  344B               	retlw	75
  3626                           
  3627                           	psect	idataBANK1
  3628  07E3                     __pidataBANK1:	
  3629                           
  3630                           ;initializer for _led_load_duty
  3631  07E3  3498               	retlw	low _pwm2_load_duty
  3632  07E4  3407               	retlw	high _pwm2_load_duty
  3633  07E5  34AC               	retlw	low _pwm1_load_duty
  3634  07E6  3407               	retlw	high _pwm1_load_duty
  3635  07E7  3484               	retlw	low _pwm3_load_duty
  3636  07E8  3407               	retlw	high _pwm3_load_duty
  3637  07E9  3470               	retlw	low _pwm4_load_duty
  3638  07EA  3407               	retlw	high _pwm4_load_duty
  3639  07EB  34C0               	retlw	low _pwm5_load_duty
  3640  07EC  3407               	retlw	high _pwm5_load_duty
  3641  000B                     _INTCONbits	set	11
  3642  001E                     _PR2	set	30
  3643  001D                     _TMR2	set	29
  3644  001F                     _T2CONbits	set	31
  3645  0011                     _PIR1bits	set	17
  3646  0019                     _TMR1L	set	25
  3647  001A                     _TMR1H	set	26
  3648  001C                     _T1GCONbits	set	28
  3649  001B                     _T1CONbits	set	27
  3650  0091                     _PIE1bits	set	145
  3651  008C                     _TRISA	set	140
  3652  010C                     _LATA	set	268
  3653  018C                     _ANSELA	set	396
  3654  020C                     _WPUA	set	524
  3655  0297                     _CCP2CON	set	663
  3656  0293                     _CCP1CON	set	659
  3657  0295                     _CCPR2L	set	661
  3658  0296                     _CCPR2H	set	662
  3659  0297                     _CCP2CONbits	set	663
  3660  0291                     _CCPR1L	set	657
  3661  0292                     _CCPR1H	set	658
  3662  029F                     _CCPTMRSbits	set	671
  3663  0293                     _CCP1CONbits	set	659
  3664  0317                     _CCP4CON	set	791
  3665  0313                     _CCP3CON	set	787
  3666  0315                     _CCPR4L	set	789
  3667  0316                     _CCPR4H	set	790
  3668  0317                     _CCP4CONbits	set	791
  3669  0311                     _CCPR3L	set	785
  3670  0312                     _CCPR3H	set	786
  3671  0313                     _CCP3CONbits	set	787
  3672  0619                     _PWM5CON	set	1561
  3673  0617                     _PWM5DCL	set	1559
  3674  0618                     _PWM5DCH	set	1560
  3675  061F                     _PWMTMRSbits	set	1567
  3676  0619                     _PWM5CONbits	set	1561
  3677  0896                     _NVMCON2	set	2198
  3678  0895                     _NVMCON1bits	set	2197
  3679  0893                     _NVMDATL	set	2195
  3680  0891                     _NVMADRL	set	2193
  3681  0892                     _NVMADRH	set	2194
  3682  091E                     _OSCTUNEbits	set	2334
  3683  091F                     _OSCFRQbits	set	2335
  3684  091D                     _OSCENbits	set	2333
  3685  091B                     _OSCCON3	set	2331
  3686  0919                     _OSCCON1bits	set	2329
  3687  0E13                     _T1GPPS	set	3603
  3688  0E0F                     _PPSLOCKbits	set	3599
  3689  0E0F                     _PPSLOCK	set	3599
  3690  0EA0                     _RC0PPS	set	3744
  3691  0E9C                     _RB4PPS	set	3740
  3692  0E90                     _RA0PPS	set	3728
  3693                           
  3694                           ; #config settings
  3695  0000                     
  3696                           	psect	cinit
  3697  001C                     start_initialization:	
  3698  001C                     __initialization:	
  3699                           
  3700                           ; Initialize objects allocated to BANK0
  3701  001C  3057               	movlw	low __pidataBANK0
  3702  001D  0084               	movwf	4
  3703  001E  3087               	movlw	(high __pidataBANK0)| (0+128)
  3704  001F  0085               	movwf	5
  3705  0020  3045               	movlw	low __pdataBANK0
  3706  0021  0086               	movwf	6
  3707  0022  3000               	movlw	high __pdataBANK0
  3708  0023  0087               	movwf	7
  3709  0024  3019               	movlw	25
  3710  0025  3187  27F7  3180   	fcall	init_ram
  3711                           
  3712                           ; Initialize objects allocated to BANK1
  3713  0028  30E3               	movlw	low __pidataBANK1
  3714  0029  0084               	movwf	4
  3715  002A  3087               	movlw	(high __pidataBANK1)| (0+128)
  3716  002B  0085               	movwf	5
  3717  002C  30D3               	movlw	low __pdataBANK1
  3718  002D  0086               	movwf	6
  3719  002E  3000               	movlw	high __pdataBANK1
  3720  002F  0087               	movwf	7
  3721  0030  300A               	movlw	10
  3722  0031  3187  27F7  3180   	fcall	init_ram
  3723                           
  3724                           ; Clear objects allocated to BANK0
  3725  0034  3020               	movlw	low __pbssBANK0
  3726  0035  0084               	movwf	4
  3727  0036  3000               	movlw	high __pbssBANK0
  3728  0037  0085               	movwf	5
  3729  0038  3025               	movlw	37
  3730  0039  318D  25C3  3180   	fcall	clear_ram0
  3731                           
  3732                           ; Clear objects allocated to BANK1
  3733  003C  30A0               	movlw	low __pbssBANK1
  3734  003D  0084               	movwf	4
  3735  003E  3000               	movlw	high __pbssBANK1
  3736  003F  0085               	movwf	5
  3737  0040  3033               	movlw	51
  3738  0041  318D  25C3  3180   	fcall	clear_ram0
  3739  0044                     end_of_initialization:	
  3740                           ;End of C runtime variable initialization code
  3741                           
  3742  0044                     __end_of__initialization:	
  3743  0044  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  3744  0045  0020               	movlb	0
  3745  0046  2847               	ljmp	_main	;jump to C main() function
  3746  0047                     __pmaintext:	
  3747                           ; 1 bytes @ 0x11
  3748 ;;
  3749 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3750 ;;
  3751 ;; *************** function _main *****************
  3752 ;; Defined at:
  3753 ;;		line 42 in file "src/app_main.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3762 ;; Tracked objects:
  3763 ;;		On entry : B1F/0
  3764 ;;		On exit  : 1F/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3771 ;;Total ram usage:        0 bytes
  3772 ;; Hardware stack levels required when called:   10
  3773 ;; This function calls:
  3774 ;;		_app_init
  3775 ;;		_ir_action
  3776 ;;		_ir_tmr1_overflow_rest
  3777 ;;		_led_init
  3778 ;;		_led_para_init
  3779 ;; This function is called by:
  3780 ;;		Startup code after reset
  3781 ;; This function uses a non-reentrant model
  3782 ;;
  3783                           
  3784                           
  3785                           ;psect for function _main
  3786  0047                     _main:	
  3787                           
  3788                           ;app_main.c: 44: app_init();
  3789                           
  3790                           ;incstack = 0
  3791                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3792  0047  2055  3180         	fcall	_app_init
  3793                           
  3794                           ;app_main.c: 46: (INTCONbits.GIE = 1);
  3795  0049  178B               	bsf	11,7	;volatile
  3796                           
  3797                           ;app_main.c: 47: (INTCONbits.PEIE = 1);
  3798  004A  170B               	bsf	11,6	;volatile
  3799                           
  3800                           ;app_main.c: 49: led_para_init();
  3801  004B  24DF  3180         	fcall	_led_para_init
  3802                           
  3803                           ;app_main.c: 50: led_init();
  3804  004D  222A  3180         	fcall	_led_init
  3805  004F                     l260:	
  3806                           ;app_main.c: 52: while(1) {
  3807                           
  3808  004F  0064               	clrwdt	;# 
  3809                           
  3810                           ;app_main.c: 55: ir_tmr1_overflow_rest();
  3811  0050  22A3  3180         	fcall	_ir_tmr1_overflow_rest
  3812                           
  3813                           ;app_main.c: 56: ir_action();
  3814  0052  229A  3180         	fcall	_ir_action
  3815  0054  284F               	goto	l260
  3816  0055                     __end_of_main:	
  3817  0055                     __ptext27:	
  3818 ;; *************** function _app_init *****************
  3819 ;; Defined at:
  3820 ;;		line 67 in file "src/app_main.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;		None
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;		None
  3825 ;; Return value:  Size  Location     Type
  3826 ;;                  1    wreg      void 
  3827 ;; Registers used:
  3828 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3829 ;; Tracked objects:
  3830 ;;		On entry : B1F/0
  3831 ;;		On exit  : 1F/1C
  3832 ;;		Unchanged: 0/0
  3833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3838 ;;Total ram usage:        0 bytes
  3839 ;; Hardware stack levels used:    1
  3840 ;; Hardware stack levels required when called:    8
  3841 ;; This function calls:
  3842 ;;		_gpio_set
  3843 ;;		_gpio_set_intputpps
  3844 ;;		_osc_init
  3845 ;;		_pwm1_init
  3846 ;;		_pwm2_init
  3847 ;;		_pwm3_init
  3848 ;;		_pwm4_init
  3849 ;;		_pwm5_init
  3850 ;;		_tmr1_gate_enabled_isr
  3851 ;;		_tmr1_init
  3852 ;;		_tmr1_starttimer
  3853 ;;		_tmr1_writetimer
  3854 ;;		_tmr2_enabled_isr
  3855 ;;		_tmr2_init
  3856 ;;		_tmr2_reload
  3857 ;;		_tmr2_starttimer
  3858 ;; This function is called by:
  3859 ;;		_main
  3860 ;; This function uses a non-reentrant model
  3861 ;;
  3862                           
  3863                           
  3864                           ;psect for function _app_init
  3865  0055                     _app_init:	
  3866                           
  3867                           ;app_main.c: 69: osc_init();
  3868                           
  3869                           ;incstack = 0
  3870                           ; Regs used in _app_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3871  0055  20C4  3180         	fcall	_osc_init
  3872                           
  3873                           ;app_main.c: 71: PPSLOCK = 0x55;
  3874  0057  3055               	movlw	85
  3875  0058  003C               	movlb	28	; select bank28
  3876  0059  008F               	movwf	15	;volsfr
  3877                           
  3878                           ;app_main.c: 72: PPSLOCK = 0xAA;
  3879  005A  30AA               	movlw	170
  3880  005B  008F               	movwf	15	;volsfr
  3881                           
  3882                           ;app_main.c: 73: PPSLOCKbits.PPSLOCKED = 0;
  3883  005C  100F               	bcf	15,0	;volsfr
  3884                           
  3885                           ;app_main.c: 75: pwm1_init(GPIO_PORTC,GPIO_PIN5,PWM_CS_TMR2);
  3886  005D  3005               	movlw	5
  3887  005E  0020               	movlb	0	; select bank0
  3888  005F  00E7               	movwf	pwm1_init@pin
  3889  0060  3002               	movlw	2
  3890  0061  01E8               	clrf	pwm1_init@src
  3891  0062  0AE8               	incf	pwm1_init@src,f
  3892  0063  2118  3180         	fcall	_pwm1_init
  3893                           
  3894                           ;app_main.c: 76: pwm2_init(GPIO_PORTC,GPIO_PIN3,PWM_CS_TMR2);
  3895  0065  3003               	movlw	3
  3896  0066  0020               	movlb	0	; select bank0
  3897  0067  00E7               	movwf	pwm2_init@pin
  3898  0068  3002               	movlw	2
  3899  0069  01E8               	clrf	pwm2_init@src
  3900  006A  0AE8               	incf	pwm2_init@src,f
  3901  006B  2135  3180         	fcall	_pwm2_init
  3902                           
  3903                           ;app_main.c: 77: pwm3_init(GPIO_PORTA,GPIO_PIN2,PWM_CS_TMR2);
  3904  006D  3002               	movlw	2
  3905  006E  0020               	movlb	0	; select bank0
  3906  006F  00E7               	movwf	pwm3_init@pin
  3907  0070  3000               	movlw	0
  3908  0071  01E8               	clrf	pwm3_init@src
  3909  0072  0AE8               	incf	pwm3_init@src,f
  3910  0073  217B  3180         	fcall	_pwm3_init
  3911                           
  3912                           ;app_main.c: 78: pwm4_init(GPIO_PORTC,GPIO_PIN1,PWM_CS_TMR2);
  3913  0075  0020               	movlb	0	; select bank0
  3914  0076  3002               	movlw	2
  3915  0077  01E7               	clrf	pwm4_init@pin
  3916  0078  0AE7               	incf	pwm4_init@pin,f
  3917  0079  01E8               	clrf	pwm4_init@src
  3918  007A  0AE8               	incf	pwm4_init@src,f
  3919  007B  219E  3180         	fcall	_pwm4_init
  3920                           
  3921                           ;app_main.c: 79: pwm5_init(GPIO_PORTC,GPIO_PIN7,PWM_CS_TMR2);
  3922  007D  3007               	movlw	7
  3923  007E  0020               	movlb	0	; select bank0
  3924  007F  00E7               	movwf	pwm5_init@pin
  3925  0080  3002               	movlw	2
  3926  0081  01E8               	clrf	pwm5_init@src
  3927  0082  0AE8               	incf	pwm5_init@src,f
  3928  0083  21C0  3180         	fcall	_pwm5_init
  3929                           
  3930                           ;app_main.c: 80: gpio_set(GPIO_PORTB,GPIO_PIN7,GPIO_INPUT_FLOATING);
  3931  0085  3007               	movlw	7
  3932  0086  0020               	movlb	0	; select bank0
  3933  0087  00DE               	movwf	gpio_set@pin
  3934  0088  3001               	movlw	1
  3935  0089  01DF               	clrf	gpio_set@state
  3936  008A  0ADF               	incf	gpio_set@state,f
  3937  008B  20D8  3180         	fcall	_gpio_set
  3938                           
  3939                           ;app_main.c: 81: T1GPPS = gpio_set_intputpps(GPIO_PORTB,GPIO_PIN7);
  3940  008D  3007               	movlw	7
  3941  008E  00DE               	movwf	gpio_set_intputpps@pin
  3942  008F  3001               	movlw	1
  3943  0090  20BE  3180         	fcall	_gpio_set_intputpps
  3944  0092  003C               	movlb	28	; select bank28
  3945  0093  0093               	movwf	19	;volatile
  3946                           
  3947                           ;app_main.c: 82: tmr1_init(TMR1XX_CS_FOSC_4,TMR1XX_CKPS_8,TMR1XX_GATE_SRC_T1G,ir_decode)
      +                          ;
  3948  0094  3003               	movlw	3
  3949  0095  0020               	movlb	0	; select bank0
  3950  0096  00DE               	movwf	tmr1_init@ckps
  3951  0097  3046               	movlw	low _ir_decode
  3952  0098  01DF               	clrf	tmr1_init@src
  3953  0099  00E0               	movwf	tmr1_init@cb
  3954  009A  3006               	movlw	high _ir_decode
  3955  009B  00E1               	movwf	tmr1_init@cb+1
  3956  009C  3000               	movlw	0
  3957  009D  21DD  3180         	fcall	_tmr1_init
  3958                           
  3959                           ;app_main.c: 83: tmr1_writetimer(0);
  3960  009F  01DE               	clrf	tmr1_writetimer@value
  3961  00A0  01DF               	clrf	tmr1_writetimer@value+1
  3962  00A1  2201  3180         	fcall	_tmr1_writetimer
  3963                           
  3964                           ;app_main.c: 84: tmr1_starttimer();
  3965  00A3  21FE  3180         	fcall	_tmr1_starttimer
  3966                           
  3967                           ;app_main.c: 85: tmr1_gate_enabled_isr();
  3968  00A5  21DA  3180         	fcall	_tmr1_gate_enabled_isr
  3969                           
  3970                           ;app_main.c: 87: tmr2_init(TMR2XX_CKPS_1,TMR2XX_OUTPS_16,led_run);
  3971  00A7  300F               	movlw	15
  3972  00A8  0020               	movlb	0	; select bank0
  3973  00A9  00DE               	movwf	tmr2_init@outps
  3974  00AA  30C9               	movlw	low _led_run
  3975  00AB  00DF               	movwf	tmr2_init@cb
  3976  00AC  300D               	movlw	high _led_run
  3977  00AD  00E0               	movwf	tmr2_init@cb+1
  3978  00AE  3000               	movlw	0
  3979  00AF  220F  3180         	fcall	_tmr2_init
  3980                           
  3981                           ;app_main.c: 88: tmr2_reload(249);
  3982  00B1  30F9               	movlw	249
  3983  00B2  2225  3180         	fcall	_tmr2_reload
  3984                           
  3985                           ;app_main.c: 89: tmr2_starttimer();
  3986  00B4  2228  3180         	fcall	_tmr2_starttimer
  3987                           
  3988                           ;app_main.c: 90: tmr2_enabled_isr();
  3989  00B6  231B               	fcall	_tmr2_enabled_isr
  3990                           
  3991                           ;app_main.c: 92: PPSLOCK = 0x55;
  3992  00B7  3055               	movlw	85
  3993  00B8  003C               	movlb	28	; select bank28
  3994  00B9  008F               	movwf	15	;volsfr
  3995                           
  3996                           ;app_main.c: 93: PPSLOCK = 0xAA;
  3997  00BA  30AA               	movlw	170
  3998  00BB  008F               	movwf	15	;volsfr
  3999                           
  4000                           ;app_main.c: 94: PPSLOCKbits.PPSLOCKED = 1;
  4001  00BC  140F               	bsf	15,0	;volsfr
  4002  00BD  0008               	return
  4003  00BE                     __end_of_app_init:	
  4004  00BE                     __ptext44:	
  4005 ;; *************** function _gpio_set_intputpps *****************
  4006 ;; Defined at:
  4007 ;;		line 53 in file "src/drv_gpio.c"
  4008 ;; Parameters:    Size  Location     Type
  4009 ;;  port            1    wreg     enum E7835
  4010 ;;  pin             1    0[BANK0 ] enum E7840
  4011 ;; Auto vars:     Size  Location     Type
  4012 ;;  port            1    1[BANK0 ] enum E7835
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  1    wreg      unsigned char 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 1F/0
  4019 ;;		On exit  : 1F/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4022 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4023 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4025 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4026 ;;Total ram usage:        2 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; Hardware stack levels required when called:    6
  4029 ;; This function calls:
  4030 ;;		Nothing
  4031 ;; This function is called by:
  4032 ;;		_app_init
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           
  4037                           ;psect for function _gpio_set_intputpps
  4038  00BE                     _gpio_set_intputpps:	
  4039                           
  4040                           ;incstack = 0
  4041                           ; Regs used in _gpio_set_intputpps: [wreg+status,2+status,0]
  4042                           ;gpio_set_intputpps@port stored from wreg
  4043  00BE  00DF               	movwf	gpio_set_intputpps@port
  4044                           
  4045                           ;drv_gpio.c: 55: return (port << 3 | pin);
  4046  00BF  0709               	addwf	9,w
  4047  00C0  0709               	addwf	9,w
  4048  00C1  0709               	addwf	9,w
  4049  00C2  045E               	iorwf	gpio_set_intputpps@pin,w
  4050  00C3  0008               	return
  4051  00C4                     __end_of_gpio_set_intputpps:	
  4052  00C4                     __ptext43:	
  4053 ;; *************** function _osc_init *****************
  4054 ;; Defined at:
  4055 ;;		line 3 in file "src/drv_osc.c"
  4056 ;; Parameters:    Size  Location     Type
  4057 ;;		None
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;		None
  4060 ;; Return value:  Size  Location     Type
  4061 ;;                  1    wreg      void 
  4062 ;; Registers used:
  4063 ;;		wreg, status,2, status,0
  4064 ;; Tracked objects:
  4065 ;;		On entry : B1F/0
  4066 ;;		On exit  : B1F/12
  4067 ;;		Unchanged: B00/0
  4068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4069 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4070 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4072 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4073 ;;Total ram usage:        0 bytes
  4074 ;; Hardware stack levels used:    1
  4075 ;; Hardware stack levels required when called:    6
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_app_init
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           
  4084                           ;psect for function _osc_init
  4085  00C4                     _osc_init:	
  4086                           
  4087                           ;drv_osc.c: 6: OSCCON1bits.NOSC = OSC_NOSC_COSC_HFINTOSC;
  4088                           
  4089                           ;incstack = 0
  4090                           ; Regs used in _osc_init: [wreg+status,2+status,0]
  4091  00C4  0032               	movlb	18	; select bank18
  4092  00C5  0819               	movf	25,w	;volatile
  4093  00C6  398F               	andlw	-113
  4094  00C7  3860               	iorlw	96
  4095  00C8  0099               	movwf	25	;volatile
  4096                           
  4097                           ;drv_osc.c: 7: OSCCON1bits.NDIV = OSC_NDIV_CDIV_1;
  4098  00C9  30F0               	movlw	-16
  4099  00CA  0599               	andwf	25,f	;volatile
  4100                           
  4101                           ;drv_osc.c: 9: OSCCON3 = 0x00;
  4102  00CB  019B               	clrf	27	;volatile
  4103                           
  4104                           ;drv_osc.c: 11: OSCENbits.EXTOEN = 0;
  4105  00CC  139D               	bcf	29,7	;volatile
  4106                           
  4107                           ;drv_osc.c: 12: OSCENbits.HFOEN = 1;
  4108  00CD  171D               	bsf	29,6	;volatile
  4109                           
  4110                           ;drv_osc.c: 13: OSCENbits.LFOEN = 0;
  4111  00CE  121D               	bcf	29,4	;volatile
  4112                           
  4113                           ;drv_osc.c: 14: OSCENbits.SOSCEN = 1;
  4114  00CF  159D               	bsf	29,3	;volatile
  4115                           
  4116                           ;drv_osc.c: 15: OSCENbits.ADOEN = 0;
  4117  00D0  111D               	bcf	29,2	;volatile
  4118                           
  4119                           ;drv_osc.c: 17: OSCFRQbits.HFFRQ = 0x06;
  4120  00D1  081F               	movf	31,w	;volatile
  4121  00D2  39F0               	andlw	-16
  4122  00D3  3806               	iorlw	6
  4123  00D4  009F               	movwf	31	;volatile
  4124                           
  4125                           ;drv_osc.c: 19: OSCTUNEbits.HFTUN = 0x00;
  4126  00D5  30C0               	movlw	-64
  4127  00D6  059E               	andwf	30,f	;volatile
  4128  00D7  0008               	return
  4129  00D8                     __end_of_osc_init:	
  4130  00D8                     __ptext42:	
  4131 ;; *************** function _gpio_set *****************
  4132 ;; Defined at:
  4133 ;;		line 3 in file "src/drv_gpio.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  port            1    wreg     enum E7835
  4136 ;;  pin             1    0[BANK0 ] enum E7840
  4137 ;;  state           1    1[BANK0 ] enum E7850
  4138 ;; Auto vars:     Size  Location     Type
  4139 ;;  port            1    3[BANK0 ] enum E7835
  4140 ;;  mask            1    5[BANK0 ] unsigned char 
  4141 ;;  offset          1    4[BANK0 ] unsigned char 
  4142 ;; Return value:  Size  Location     Type
  4143 ;;                  1    wreg      void 
  4144 ;; Registers used:
  4145 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4146 ;; Tracked objects:
  4147 ;;		On entry : 1F/0
  4148 ;;		On exit  : 1F/0
  4149 ;;		Unchanged: 0/0
  4150 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4151 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4152 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4153 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4154 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4155 ;;Total ram usage:        6 bytes
  4156 ;; Hardware stack levels used:    1
  4157 ;; Hardware stack levels required when called:    6
  4158 ;; This function calls:
  4159 ;;		Nothing
  4160 ;; This function is called by:
  4161 ;;		_pwm1_init
  4162 ;;		_pwm2_init
  4163 ;;		_pwm3_init
  4164 ;;		_pwm4_init
  4165 ;;		_pwm5_init
  4166 ;;		_app_init
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           
  4171                           ;psect for function _gpio_set
  4172  00D8                     _gpio_set:	
  4173                           
  4174                           ;incstack = 0
  4175                           ; Regs used in _gpio_set: [wreg-fsr1h+status,2+status,0]
  4176                           ;gpio_set@port stored from wreg
  4177  00D8  00E1               	movwf	gpio_set@port
  4178                           
  4179                           ;drv_gpio.c: 5: uint8_t offset = port - GPIO_PORTA;
  4180  00D9  00E2               	movwf	gpio_set@offset
  4181                           
  4182                           ;drv_gpio.c: 6: uint8_t mask = 1 << (pin - GPIO_PIN0);
  4183  00DA  3001               	movlw	1
  4184  00DB  00E0               	movwf	??_gpio_set
  4185  00DC  0A5E               	incf	gpio_set@pin,w
  4186  00DD  28DF               	goto	u1174
  4187  00DE                     u1175:	
  4188  00DE  35E0               	lslf	??_gpio_set,f
  4189  00DF                     u1174:	
  4190  00DF  0B89               	decfsz	9,f
  4191  00E0  28DE               	goto	u1175
  4192  00E1  0860               	movf	??_gpio_set,w
  4193  00E2  00E3               	movwf	gpio_set@mask
  4194                           
  4195                           ;drv_gpio.c: 8: switch(state) {
  4196  00E3  290D               	goto	l2296
  4197  00E4                     l2284:	
  4198                           
  4199                           ;drv_gpio.c: 10: *( ( &ANSELA + offset ) ) |= mask;
  4200  00E4  0862               	movf	gpio_set@offset,w
  4201  00E5  3E8C               	addlw	140
  4202  00E6  0086               	movwf	6
  4203  00E7  3001               	movlw	1
  4204  00E8  0187               	clrf	7
  4205  00E9  3D87               	addwfc	7,f
  4206  00EA  0863               	movf	gpio_set@mask,w
  4207  00EB  0481               	iorwf	1,f
  4208                           
  4209                           ;drv_gpio.c: 11: *( ( &TRISA + offset ) ) |= mask;
  4210  00EC  0862               	movf	gpio_set@offset,w
  4211  00ED  3E8C               	addlw	140
  4212  00EE  0086               	movwf	6
  4213  00EF  3000               	movlw	0
  4214  00F0  0187               	clrf	7
  4215  00F1  3D87               	addwfc	7,f
  4216  00F2  0863               	movf	gpio_set@mask,w
  4217  00F3  0481               	iorwf	1,f
  4218                           
  4219                           ;drv_gpio.c: 12: break;
  4220  00F4  0008               	return
  4221  00F5                     l2286:	
  4222                           
  4223                           ;drv_gpio.c: 14: *( ( &ANSELA + offset ) ) &= ~mask;
  4224                           
  4225                           ;drv_gpio.c: 15: *( ( &TRISA + offset ) ) |= mask;
  4226  00F5  25F7  3180         	fcall	PL2	;call to abstracted procedure
  4227                           
  4228                           ;drv_gpio.c: 16: *( ( &WPUA + offset) ) &= ~mask;
  4229  00F7  2622               	fcall	PL12	;call to abstracted procedure
  4230  00F8  0963               	comf	gpio_set@mask,w
  4231  00F9  0581               	andwf	1,f
  4232                           
  4233                           ;drv_gpio.c: 17: break;
  4234  00FA  0008               	return
  4235  00FB                     l2288:	
  4236                           
  4237                           ;drv_gpio.c: 19: *( ( &ANSELA + offset ) ) &= ~mask;
  4238                           
  4239                           ;drv_gpio.c: 20: *( ( &TRISA + offset ) ) |= mask;
  4240  00FB  25F7  3180         	fcall	PL2	;call to abstracted procedure
  4241                           
  4242                           ;drv_gpio.c: 21: *( ( &WPUA + offset) ) |= mask;
  4243  00FD  2622               	fcall	PL12	;call to abstracted procedure
  4244  00FE  0863               	movf	gpio_set@mask,w
  4245  00FF  0481               	iorwf	1,f
  4246                           
  4247                           ;drv_gpio.c: 22: break;
  4248  0100  0008               	return
  4249  0101                     l2290:	
  4250                           
  4251                           ;drv_gpio.c: 24: *( ( &ANSELA + offset ) ) &= ~mask;
  4252                           
  4253                           ;drv_gpio.c: 25: *( ( &TRISA + offset ) ) &= ~mask;
  4254  0101  25F7  3180         	fcall	PL2	;call to abstracted procedure
  4255                           
  4256                           ;drv_gpio.c: 26: *( ( &LATA + offset) ) |= mask;
  4257  0103  262B               	fcall	PL14	;call to abstracted procedure
  4258  0104  0863               	movf	gpio_set@mask,w
  4259  0105  0481               	iorwf	1,f
  4260                           
  4261                           ;drv_gpio.c: 27: break;
  4262  0106  0008               	return
  4263  0107                     l2292:	
  4264                           
  4265                           ;drv_gpio.c: 29: *( ( &ANSELA + offset ) ) &= ~mask;
  4266                           
  4267                           ;drv_gpio.c: 30: *( ( &TRISA + offset ) ) &= ~mask;
  4268  0107  25F7  3180         	fcall	PL2	;call to abstracted procedure
  4269                           
  4270                           ;drv_gpio.c: 31: *( ( &LATA + offset) ) &= ~mask;
  4271  0109  262B               	fcall	PL14	;call to abstracted procedure
  4272  010A  0963               	comf	gpio_set@mask,w
  4273  010B  0581               	andwf	1,f
  4274                           
  4275                           ;drv_gpio.c: 32: break;
  4276  010C  0008               	return
  4277  010D                     l2296:	
  4278  010D  085F               	movf	gpio_set@state,w
  4279                           
  4280                           ; Switch size 1, requested type "space"
  4281                           ; Number of cases is 5, Range of values is 0 to 4
  4282                           ; switch strategies available:
  4283                           ; Name         Instructions Cycles
  4284                           ; direct_byte           16     6 (fixed)
  4285                           ; simple_byte           16     9 (average)
  4286                           ; jumptable            260     6 (fixed)
  4287                           ;	Chosen strategy is direct_byte
  4288  010E  0084               	movwf	4
  4289  010F  3005               	movlw	5
  4290  0110  0204               	subwf	4,w
  4291  0111  1803               	skipnc
  4292  0112  0008               	return
  4293  0113  3187               	movlp	high S3064
  4294  0114  3504               	lslf	4,w
  4295  0115  3EED               	addlw	low S3064
  4296  0116  0082               	movwf	2
  4297  0117  0008               	return
  4298  0118                     __end_of_gpio_set:	
  4299  0118                     __ptext40:	
  4300 ;; *************** function _pwm1_init *****************
  4301 ;; Defined at:
  4302 ;;		line 4 in file "src/drv_pwm.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  port            1    wreg     enum E8106
  4305 ;;  pin             1    9[BANK0 ] enum E8111
  4306 ;;  src             1   10[BANK0 ] enum E8240
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;  port            1   11[BANK0 ] enum E8106
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4313 ;; Tracked objects:
  4314 ;;		On entry : B1F/0
  4315 ;;		On exit  : 1F/5
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4318 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4319 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4321 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4322 ;;Total ram usage:        3 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    7
  4325 ;; This function calls:
  4326 ;;		_gpio_set
  4327 ;;		_gpio_set_outputpps
  4328 ;; This function is called by:
  4329 ;;		_app_init
  4330 ;; This function uses a non-reentrant model
  4331 ;;
  4332                           
  4333                           
  4334                           ;psect for function _pwm1_init
  4335  0118                     _pwm1_init:	
  4336                           
  4337                           ;incstack = 0
  4338                           ; Regs used in _pwm1_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4339                           ;pwm1_init@port stored from wreg
  4340  0118  00E9               	movwf	pwm1_init@port
  4341                           
  4342                           ;drv_pwm.c: 6: gpio_set(port,pin,GPIO_OUTPUT_LOW);
  4343  0119  0867               	movf	pwm1_init@pin,w
  4344  011A  00DE               	movwf	gpio_set@pin
  4345  011B  3004               	movlw	4
  4346  011C  00DF               	movwf	gpio_set@state
  4347  011D  0869               	movf	pwm1_init@port,w
  4348  011E  20D8  3180         	fcall	_gpio_set
  4349                           
  4350                           ;drv_pwm.c: 7: gpio_set_outputpps(port,pin,GPIO_OUTPUTPPS_CCP1);
  4351  0120  0867               	movf	pwm1_init@pin,w
  4352  0121  00DE               	movwf	gpio_set_outputpps@pin
  4353  0122  300C               	movlw	12
  4354  0123  00DF               	movwf	gpio_set_outputpps@outputpps
  4355  0124  0869               	movf	pwm1_init@port,w
  4356  0125  2155               	fcall	_gpio_set_outputpps
  4357                           
  4358                           ;drv_pwm.c: 8: CCP1CONbits.CCP1EN = 1;
  4359  0126  0025               	movlb	5	; select bank5
  4360  0127  1793               	bsf	19,7	;volatile
  4361                           
  4362                           ;drv_pwm.c: 9: CCP1CONbits.CCP1FMT = 1;
  4363  0128  1613               	bsf	19,4	;volatile
  4364                           
  4365                           ;drv_pwm.c: 10: CCP1CONbits.CCP1MODE = 0x0F;
  4366  0129  300F               	movlw	15
  4367  012A  0493               	iorwf	19,f	;volatile
  4368                           
  4369                           ;drv_pwm.c: 11: CCPTMRSbits.C1TSEL = (uint8_t)src;
  4370  012B  081F               	movf	31,w	;volatile
  4371  012C  0020               	movlb	0	; select bank0
  4372  012D  0668               	xorwf	pwm1_init@src,w
  4373  012E  39FC               	andlw	-4
  4374  012F  0668               	xorwf	pwm1_init@src,w
  4375  0130  0025               	movlb	5	; select bank5
  4376  0131  009F               	movwf	31	;volatile
  4377                           
  4378                           ;drv_pwm.c: 12: CCPR1H = 0x00;
  4379  0132  0192               	clrf	18	;volatile
  4380                           
  4381                           ;drv_pwm.c: 13: CCPR1L = 0x00;
  4382  0133  0191               	clrf	17	;volatile
  4383  0134  0008               	return
  4384  0135                     __end_of_pwm1_init:	
  4385  0135                     __ptext39:	
  4386 ;; *************** function _pwm2_init *****************
  4387 ;; Defined at:
  4388 ;;		line 22 in file "src/drv_pwm.c"
  4389 ;; Parameters:    Size  Location     Type
  4390 ;;  port            1    wreg     enum E8106
  4391 ;;  pin             1    9[BANK0 ] enum E8111
  4392 ;;  src             1   10[BANK0 ] enum E8240
  4393 ;; Auto vars:     Size  Location     Type
  4394 ;;  port            1   12[BANK0 ] enum E8106
  4395 ;; Return value:  Size  Location     Type
  4396 ;;                  1    wreg      void 
  4397 ;; Registers used:
  4398 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4399 ;; Tracked objects:
  4400 ;;		On entry : 1F/0
  4401 ;;		On exit  : 1F/5
  4402 ;;		Unchanged: 0/0
  4403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4404 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4406 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4407 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4408 ;;Total ram usage:        4 bytes
  4409 ;; Hardware stack levels used:    1
  4410 ;; Hardware stack levels required when called:    7
  4411 ;; This function calls:
  4412 ;;		_gpio_set
  4413 ;;		_gpio_set_outputpps
  4414 ;; This function is called by:
  4415 ;;		_app_init
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           
  4420                           ;psect for function _pwm2_init
  4421  0135                     _pwm2_init:	
  4422                           
  4423                           ;incstack = 0
  4424                           ; Regs used in _pwm2_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4425                           ;pwm2_init@port stored from wreg
  4426  0135  00EA               	movwf	pwm2_init@port
  4427                           
  4428                           ;drv_pwm.c: 24: gpio_set(port,pin,GPIO_OUTPUT_LOW);
  4429  0136  0867               	movf	pwm2_init@pin,w
  4430  0137  00DE               	movwf	gpio_set@pin
  4431  0138  3004               	movlw	4
  4432  0139  00DF               	movwf	gpio_set@state
  4433  013A  086A               	movf	pwm2_init@port,w
  4434  013B  20D8  3180         	fcall	_gpio_set
  4435                           
  4436                           ;drv_pwm.c: 25: gpio_set_outputpps(port,pin,GPIO_OUTPUTPPS_CCP2);
  4437  013D  0867               	movf	pwm2_init@pin,w
  4438  013E  00DE               	movwf	gpio_set_outputpps@pin
  4439  013F  300D               	movlw	13
  4440  0140  00DF               	movwf	gpio_set_outputpps@outputpps
  4441  0141  086A               	movf	pwm2_init@port,w
  4442  0142  2155  3180         	fcall	_gpio_set_outputpps
  4443                           
  4444                           ;drv_pwm.c: 26: CCP2CONbits.CCP2EN = 1;
  4445  0144  0025               	movlb	5	; select bank5
  4446                           
  4447                           ;drv_pwm.c: 27: CCP2CONbits.CCP2FMT = 1;
  4448                           
  4449                           ;drv_pwm.c: 28: CCP2CONbits.CCP2MODE = 0x0F;
  4450                           
  4451                           ;drv_pwm.c: 29: CCPTMRSbits.C2TSEL = (uint8_t)src;
  4452  0145  263A               	fcall	PL28	;call to abstracted procedure
  4453  0146  0868               	movf	pwm2_init@src,w
  4454  0147  00E9               	movwf	??_pwm2_init
  4455  0148  0DE9               	rlf	??_pwm2_init,f
  4456  0149  0DE9               	rlf	??_pwm2_init,f
  4457  014A  0025               	movlb	5	; select bank5
  4458  014B  081F               	movf	31,w	;volatile
  4459  014C  0020               	movlb	0	; select bank0
  4460  014D  0669               	xorwf	??_pwm2_init,w
  4461  014E  39F3               	andlw	-13
  4462  014F  0669               	xorwf	??_pwm2_init,w
  4463  0150  0025               	movlb	5	; select bank5
  4464  0151  009F               	movwf	31	;volatile
  4465                           
  4466                           ;drv_pwm.c: 30: CCPR2H = 0x00;
  4467  0152  0196               	clrf	22	;volatile
  4468                           
  4469                           ;drv_pwm.c: 31: CCPR2L = 0x00;
  4470  0153  0195               	clrf	21	;volatile
  4471  0154  0008               	return
  4472  0155                     __end_of_pwm2_init:	
  4473  0155                     __ptext41:	
  4474 ;; *************** function _gpio_set_outputpps *****************
  4475 ;; Defined at:
  4476 ;;		line 37 in file "src/drv_gpio.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;  port            1    wreg     enum E7835
  4479 ;;  pin             1    0[BANK0 ] enum E7840
  4480 ;;  outputpps       1    1[BANK0 ] enum E7857
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;  port            1    8[BANK0 ] enum E7835
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  1    wreg      void 
  4485 ;; Registers used:
  4486 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  4487 ;; Tracked objects:
  4488 ;;		On entry : 1F/0
  4489 ;;		On exit  : 1F/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4492 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4493 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4494 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4495 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4496 ;;Total ram usage:        9 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    6
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_pwm1_init
  4503 ;;		_pwm2_init
  4504 ;;		_pwm3_init
  4505 ;;		_pwm4_init
  4506 ;;		_pwm5_init
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function _gpio_set_outputpps
  4512  0155                     _gpio_set_outputpps:	
  4513                           
  4514                           ;incstack = 0
  4515                           ; Regs used in _gpio_set_outputpps: [wreg-fsr1h+status,2+status,0]
  4516                           ;gpio_set_outputpps@port stored from wreg
  4517  0155  00E6               	movwf	gpio_set_outputpps@port
  4518                           
  4519                           ; Switch size 1, requested type "space"
  4520                           ; Number of cases is 3, Range of values is 0 to 2
  4521                           ; switch strategies available:
  4522                           ; Name         Instructions Cycles
  4523                           ; simple_byte           10     6 (average)
  4524                           ; direct_byte           12     6 (fixed)
  4525                           ; jumptable            260     6 (fixed)
  4526                           ;	Chosen strategy is simple_byte
  4527                           
  4528                           ;drv_gpio.c: 39: switch(port) {
  4529  0156  3A00               	xorlw	0	; case 0
  4530  0157  1903               	skipnz
  4531  0158  2960               	goto	l2304
  4532  0159  3A01               	xorlw	1	; case 1
  4533  015A  1903               	skipnz
  4534  015B  2963               	goto	l2306
  4535  015C  3A03               	xorlw	3	; case 2
  4536  015D  1903               	skipnz
  4537  015E  2977               	goto	l2308
  4538  015F  297A               	goto	l34
  4539  0160                     l2304:	
  4540                           
  4541                           ;drv_gpio.c: 41: *( ( &RA0PPS ) + pin ) = (uint8_t)outputpps;
  4542  0160  085E               	movf	gpio_set_outputpps@pin,w
  4543  0161  3E90               	addlw	144
  4544                           
  4545                           ;drv_gpio.c: 42: break;
  4546  0162  2E0D               	ljmp	PL8	;call to abstracted procedure
  4547  0163                     l2306:	
  4548                           
  4549                           ;drv_gpio.c: 44: *( ( &RB4PPS ) + pin - GPIO_PIN4) = (uint8_t)outputpps;
  4550  0163  085E               	movf	gpio_set_outputpps@pin,w
  4551  0164  00E0               	movwf	??_gpio_set_outputpps
  4552  0165  3098               	movlw	152
  4553  0166  01E1               	clrf	??_gpio_set_outputpps+1
  4554  0167  00E2               	movwf	??_gpio_set_outputpps+2
  4555  0168  300E               	movlw	14
  4556  0169  00E3               	movwf	??_gpio_set_outputpps+3
  4557  016A  0860               	movf	??_gpio_set_outputpps,w
  4558  016B  0762               	addwf	??_gpio_set_outputpps+2,w
  4559  016C  00E4               	movwf	??_gpio_set_outputpps+4
  4560  016D  0861               	movf	??_gpio_set_outputpps+1,w
  4561  016E  3D63               	addwfc	??_gpio_set_outputpps+3,w
  4562  016F  00E5               	movwf	??_gpio_set_outputpps+5
  4563  0170  0864               	movf	??_gpio_set_outputpps+4,w
  4564  0171  0086               	movwf	6
  4565  0172  0865               	movf	??_gpio_set_outputpps+5,w
  4566  0173  0087               	movwf	7
  4567  0174  085F               	movf	gpio_set_outputpps@outputpps,w
  4568  0175  0081               	movwf	1
  4569                           
  4570                           ;drv_gpio.c: 45: break;
  4571  0176  0008               	return
  4572  0177                     l2308:	
  4573                           
  4574                           ;drv_gpio.c: 47: *( ( &RC0PPS ) + pin ) = (uint8_t)outputpps;
  4575  0177  085E               	movf	gpio_set_outputpps@pin,w
  4576  0178  3EA0               	addlw	160
  4577                           
  4578                           ;drv_gpio.c: 48: break;
  4579  0179  2E0D               	ljmp	PL8	;call to abstracted procedure
  4580  017A                     l34:	
  4581  017A  0008               	return
  4582  017B                     __end_of_gpio_set_outputpps:	
  4583  017B                     __ptext38:	
  4584 ;; *************** function _pwm3_init *****************
  4585 ;; Defined at:
  4586 ;;		line 40 in file "src/drv_pwm.c"
  4587 ;; Parameters:    Size  Location     Type
  4588 ;;  port            1    wreg     enum E8106
  4589 ;;  pin             1    9[BANK0 ] enum E8111
  4590 ;;  src             1   10[BANK0 ] enum E8240
  4591 ;; Auto vars:     Size  Location     Type
  4592 ;;  port            1   12[BANK0 ] enum E8106
  4593 ;; Return value:  Size  Location     Type
  4594 ;;                  1    wreg      void 
  4595 ;; Registers used:
  4596 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4597 ;; Tracked objects:
  4598 ;;		On entry : 1F/0
  4599 ;;		On exit  : 1F/6
  4600 ;;		Unchanged: 0/0
  4601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4602 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4603 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4604 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4605 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4606 ;;Total ram usage:        4 bytes
  4607 ;; Hardware stack levels used:    1
  4608 ;; Hardware stack levels required when called:    7
  4609 ;; This function calls:
  4610 ;;		_gpio_set
  4611 ;;		_gpio_set_outputpps
  4612 ;; This function is called by:
  4613 ;;		_app_init
  4614 ;; This function uses a non-reentrant model
  4615 ;;
  4616                           
  4617                           
  4618                           ;psect for function _pwm3_init
  4619  017B                     _pwm3_init:	
  4620                           
  4621                           ;incstack = 0
  4622                           ; Regs used in _pwm3_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4623                           ;pwm3_init@port stored from wreg
  4624  017B  00EA               	movwf	pwm3_init@port
  4625                           
  4626                           ;drv_pwm.c: 42: gpio_set(port,pin,GPIO_OUTPUT_LOW);
  4627  017C  0867               	movf	pwm3_init@pin,w
  4628  017D  00DE               	movwf	gpio_set@pin
  4629  017E  3004               	movlw	4
  4630  017F  00DF               	movwf	gpio_set@state
  4631  0180  086A               	movf	pwm3_init@port,w
  4632  0181  20D8  3180         	fcall	_gpio_set
  4633                           
  4634                           ;drv_pwm.c: 43: gpio_set_outputpps(port,pin,GPIO_OUTPUTPPS_CCP3);
  4635  0183  0867               	movf	pwm3_init@pin,w
  4636  0184  00DE               	movwf	gpio_set_outputpps@pin
  4637  0185  300E               	movlw	14
  4638  0186  00DF               	movwf	gpio_set_outputpps@outputpps
  4639  0187  086A               	movf	pwm3_init@port,w
  4640  0188  2155               	fcall	_gpio_set_outputpps
  4641                           
  4642                           ;drv_pwm.c: 44: CCP3CONbits.CCP3EN = 1;
  4643  0189  0026               	movlb	6	; select bank6
  4644  018A  1793               	bsf	19,7	;volatile
  4645                           
  4646                           ;drv_pwm.c: 45: CCP3CONbits.CCP3FMT = 1;
  4647  018B  1613               	bsf	19,4	;volatile
  4648                           
  4649                           ;drv_pwm.c: 46: CCP3CONbits.CCP3MODE = 0x0F;
  4650  018C  300F               	movlw	15
  4651  018D  0493               	iorwf	19,f	;volatile
  4652                           
  4653                           ;drv_pwm.c: 47: CCPTMRSbits.C3TSEL = (uint8_t)src;
  4654  018E  0020               	movlb	0	; select bank0
  4655  018F  0868               	movf	pwm3_init@src,w
  4656  0190  00E9               	movwf	??_pwm3_init
  4657  0191  0EE9               	swapf	??_pwm3_init,f
  4658  0192  0025               	movlb	5	; select bank5
  4659  0193  081F               	movf	31,w	;volatile
  4660  0194  0020               	movlb	0	; select bank0
  4661  0195  0669               	xorwf	??_pwm3_init,w
  4662  0196  39CF               	andlw	-49
  4663  0197  0669               	xorwf	??_pwm3_init,w
  4664  0198  0025               	movlb	5	; select bank5
  4665  0199  009F               	movwf	31	;volatile
  4666                           
  4667                           ;drv_pwm.c: 48: CCPR3H = 0x00;
  4668  019A  0026               	movlb	6	; select bank6
  4669  019B  0192               	clrf	18	;volatile
  4670                           
  4671                           ;drv_pwm.c: 49: CCPR3L = 0x00;
  4672  019C  0191               	clrf	17	;volatile
  4673  019D  0008               	return
  4674  019E                     __end_of_pwm3_init:	
  4675  019E                     __ptext37:	
  4676 ;; *************** function _pwm4_init *****************
  4677 ;; Defined at:
  4678 ;;		line 58 in file "src/drv_pwm.c"
  4679 ;; Parameters:    Size  Location     Type
  4680 ;;  port            1    wreg     enum E8106
  4681 ;;  pin             1    9[BANK0 ] enum E8111
  4682 ;;  src             1   10[BANK0 ] enum E8240
  4683 ;; Auto vars:     Size  Location     Type
  4684 ;;  port            1   12[BANK0 ] enum E8106
  4685 ;; Return value:  Size  Location     Type
  4686 ;;                  1    wreg      void 
  4687 ;; Registers used:
  4688 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4689 ;; Tracked objects:
  4690 ;;		On entry : 1F/0
  4691 ;;		On exit  : 1F/6
  4692 ;;		Unchanged: 0/0
  4693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4694 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4696 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4697 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4698 ;;Total ram usage:        4 bytes
  4699 ;; Hardware stack levels used:    1
  4700 ;; Hardware stack levels required when called:    7
  4701 ;; This function calls:
  4702 ;;		_gpio_set
  4703 ;;		_gpio_set_outputpps
  4704 ;; This function is called by:
  4705 ;;		_app_init
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           
  4710                           ;psect for function _pwm4_init
  4711  019E                     _pwm4_init:	
  4712                           
  4713                           ;incstack = 0
  4714                           ; Regs used in _pwm4_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4715                           ;pwm4_init@port stored from wreg
  4716  019E  00EA               	movwf	pwm4_init@port
  4717                           
  4718                           ;drv_pwm.c: 60: gpio_set(port,pin,GPIO_OUTPUT_LOW);
  4719  019F  0867               	movf	pwm4_init@pin,w
  4720  01A0  00DE               	movwf	gpio_set@pin
  4721  01A1  3004               	movlw	4
  4722  01A2  00DF               	movwf	gpio_set@state
  4723  01A3  086A               	movf	pwm4_init@port,w
  4724  01A4  20D8  3180         	fcall	_gpio_set
  4725                           
  4726                           ;drv_pwm.c: 61: gpio_set_outputpps(port,pin,GPIO_OUTPUTPPS_CCP4);
  4727  01A6  0867               	movf	pwm4_init@pin,w
  4728  01A7  00DE               	movwf	gpio_set_outputpps@pin
  4729  01A8  300F               	movlw	15
  4730  01A9  00DF               	movwf	gpio_set_outputpps@outputpps
  4731  01AA  086A               	movf	pwm4_init@port,w
  4732  01AB  2155  3180         	fcall	_gpio_set_outputpps
  4733                           
  4734                           ;drv_pwm.c: 62: CCP4CONbits.CCP4EN = 1;
  4735  01AD  0026               	movlb	6	; select bank6
  4736                           
  4737                           ;drv_pwm.c: 63: CCP4CONbits.CCP4FMT = 1;
  4738                           
  4739                           ;drv_pwm.c: 64: CCP4CONbits.CCP4MODE = 0x0F;
  4740                           
  4741                           ;drv_pwm.c: 65: CCPTMRSbits.C4TSEL = (uint8_t)src;
  4742  01AE  263A               	fcall	PL28	;call to abstracted procedure
  4743  01AF  0868               	movf	pwm4_init@src,w
  4744  01B0  00E9               	movwf	??_pwm4_init
  4745  01B1  0EE9               	swapf	??_pwm4_init,f
  4746  01B2  0DE9               	rlf	??_pwm4_init,f
  4747  01B3  0DE9               	rlf	??_pwm4_init,f
  4748  01B4  0025               	movlb	5	; select bank5
  4749  01B5  081F               	movf	31,w	;volatile
  4750  01B6  0020               	movlb	0	; select bank0
  4751  01B7  0669               	xorwf	??_pwm4_init,w
  4752  01B8  393F               	andlw	-193
  4753  01B9  0669               	xorwf	??_pwm4_init,w
  4754  01BA  0025               	movlb	5	; select bank5
  4755  01BB  009F               	movwf	31	;volatile
  4756                           
  4757                           ;drv_pwm.c: 66: CCPR4H = 0x00;
  4758  01BC  0026               	movlb	6	; select bank6
  4759  01BD  0196               	clrf	22	;volatile
  4760                           
  4761                           ;drv_pwm.c: 67: CCPR4L = 0x00;
  4762  01BE  0195               	clrf	21	;volatile
  4763  01BF  0008               	return
  4764  01C0                     __end_of_pwm4_init:	
  4765  01C0                     __ptext36:	
  4766 ;; *************** function _pwm5_init *****************
  4767 ;; Defined at:
  4768 ;;		line 76 in file "src/drv_pwm.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  port            1    wreg     enum E8106
  4771 ;;  pin             1    9[BANK0 ] enum E8111
  4772 ;;  src             1   10[BANK0 ] enum E8240
  4773 ;; Auto vars:     Size  Location     Type
  4774 ;;  port            1   11[BANK0 ] enum E8106
  4775 ;; Return value:  Size  Location     Type
  4776 ;;                  1    wreg      void 
  4777 ;; Registers used:
  4778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4779 ;; Tracked objects:
  4780 ;;		On entry : 1F/0
  4781 ;;		On exit  : 1F/C
  4782 ;;		Unchanged: 0/0
  4783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4784 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4785 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4787 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4788 ;;Total ram usage:        3 bytes
  4789 ;; Hardware stack levels used:    1
  4790 ;; Hardware stack levels required when called:    7
  4791 ;; This function calls:
  4792 ;;		_gpio_set
  4793 ;;		_gpio_set_outputpps
  4794 ;; This function is called by:
  4795 ;;		_app_init
  4796 ;; This function uses a non-reentrant model
  4797 ;;
  4798                           
  4799                           
  4800                           ;psect for function _pwm5_init
  4801  01C0                     _pwm5_init:	
  4802                           
  4803                           ;incstack = 0
  4804                           ; Regs used in _pwm5_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4805                           ;pwm5_init@port stored from wreg
  4806  01C0  00E9               	movwf	pwm5_init@port
  4807                           
  4808                           ;drv_pwm.c: 78: gpio_set(port,pin,GPIO_OUTPUT_LOW);
  4809  01C1  0867               	movf	pwm5_init@pin,w
  4810  01C2  00DE               	movwf	gpio_set@pin
  4811  01C3  3004               	movlw	4
  4812  01C4  00DF               	movwf	gpio_set@state
  4813  01C5  0869               	movf	pwm5_init@port,w
  4814  01C6  20D8  3180         	fcall	_gpio_set
  4815                           
  4816                           ;drv_pwm.c: 79: gpio_set_outputpps(port,pin,GPIO_OUTPUTPPS_PWM5);
  4817  01C8  0867               	movf	pwm5_init@pin,w
  4818  01C9  00DE               	movwf	gpio_set_outputpps@pin
  4819  01CA  3002               	movlw	2
  4820  01CB  00DF               	movwf	gpio_set_outputpps@outputpps
  4821  01CC  0869               	movf	pwm5_init@port,w
  4822  01CD  2155               	fcall	_gpio_set_outputpps
  4823                           
  4824                           ;drv_pwm.c: 80: PWM5CONbits.PWM5EN = 1;
  4825  01CE  002C               	movlb	12	; select bank12
  4826  01CF  1799               	bsf	25,7	;volatile
  4827                           
  4828                           ;drv_pwm.c: 81: PWMTMRSbits.P5TSEL = (uint8_t)src;
  4829  01D0  081F               	movf	31,w	;volatile
  4830  01D1  0020               	movlb	0	; select bank0
  4831  01D2  0668               	xorwf	pwm5_init@src,w
  4832  01D3  39FC               	andlw	-4
  4833  01D4  0668               	xorwf	pwm5_init@src,w
  4834  01D5  002C               	movlb	12	; select bank12
  4835  01D6  009F               	movwf	31	;volatile
  4836                           
  4837                           ;drv_pwm.c: 82: PWM5DCH = 0x00;
  4838  01D7  0198               	clrf	24	;volatile
  4839                           
  4840                           ;drv_pwm.c: 83: PWM5DCL = 0x00;
  4841  01D8  0197               	clrf	23	;volatile
  4842  01D9  0008               	return
  4843  01DA                     __end_of_pwm5_init:	
  4844  01DA                     __ptext35:	
  4845 ;; *************** function _tmr1_gate_enabled_isr *****************
  4846 ;; Defined at:
  4847 ;;		line 110 in file "src/drv_tmr1xx.c"
  4848 ;; Parameters:    Size  Location     Type
  4849 ;;		None
  4850 ;; Auto vars:     Size  Location     Type
  4851 ;;		None
  4852 ;; Return value:  Size  Location     Type
  4853 ;;                  1    wreg      void 
  4854 ;; Registers used:
  4855 ;;		None
  4856 ;; Tracked objects:
  4857 ;;		On entry : 1F/0
  4858 ;;		On exit  : 1F/1
  4859 ;;		Unchanged: 0/0
  4860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4865 ;;Total ram usage:        0 bytes
  4866 ;; Hardware stack levels used:    1
  4867 ;; Hardware stack levels required when called:    6
  4868 ;; This function calls:
  4869 ;;		Nothing
  4870 ;; This function is called by:
  4871 ;;		_app_init
  4872 ;; This function uses a non-reentrant model
  4873 ;;
  4874                           
  4875                           
  4876                           ;psect for function _tmr1_gate_enabled_isr
  4877  01DA                     _tmr1_gate_enabled_isr:	
  4878                           
  4879                           ;drv_tmr1xx.c: 112: PIE1bits.TMR1GIE = 1;
  4880                           
  4881                           ;incstack = 0
  4882                           ; Regs used in _tmr1_gate_enabled_isr: []
  4883  01DA  0021               	movlb	1	; select bank1
  4884  01DB  1791               	bsf	17,7	;volatile
  4885  01DC  0008               	return
  4886  01DD                     __end_of_tmr1_gate_enabled_isr:	
  4887  01DD                     __ptext34:	
  4888 ;; *************** function _tmr1_init *****************
  4889 ;; Defined at:
  4890 ;;		line 63 in file "src/drv_tmr1xx.c"
  4891 ;; Parameters:    Size  Location     Type
  4892 ;;  cs              1    wreg     enum E8242
  4893 ;;  ckps            1    0[BANK0 ] enum E8248
  4894 ;;  src             1    1[BANK0 ] enum E8254
  4895 ;;  cb              2    2[BANK0 ] PTR FTN()void 
  4896 ;;		 -> ir_decode(1), 
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;  cs              1    5[BANK0 ] enum E8242
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		wreg, status,2, status,0
  4903 ;; Tracked objects:
  4904 ;;		On entry : 1F/0
  4905 ;;		On exit  : 1F/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4908 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4909 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;Total ram usage:        6 bytes
  4913 ;; Hardware stack levels used:    1
  4914 ;; Hardware stack levels required when called:    6
  4915 ;; This function calls:
  4916 ;;		Nothing
  4917 ;; This function is called by:
  4918 ;;		_app_init
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           
  4923                           ;psect for function _tmr1_init
  4924  01DD                     _tmr1_init:	
  4925                           
  4926                           ;incstack = 0
  4927                           ; Regs used in _tmr1_init: [wreg+status,2+status,0]
  4928                           ;tmr1_init@cs stored from wreg
  4929  01DD  00E3               	movwf	tmr1_init@cs
  4930                           
  4931                           ;drv_tmr1xx.c: 65: T1CONbits.TMR1CS = (uint8_t)cs;
  4932  01DE  00E2               	movwf	??_tmr1_init
  4933  01DF  0EE2               	swapf	??_tmr1_init,f
  4934  01E0  0DE2               	rlf	??_tmr1_init,f
  4935  01E1  0DE2               	rlf	??_tmr1_init,f
  4936  01E2  081B               	movf	27,w	;volatile
  4937  01E3  0662               	xorwf	??_tmr1_init,w
  4938  01E4  393F               	andlw	-193
  4939  01E5  0662               	xorwf	??_tmr1_init,w
  4940  01E6  009B               	movwf	27	;volatile
  4941                           
  4942                           ;drv_tmr1xx.c: 66: T1CONbits.T1CKPS = (uint8_t)ckps;
  4943  01E7  085E               	movf	tmr1_init@ckps,w
  4944  01E8  00E2               	movwf	??_tmr1_init
  4945  01E9  0EE2               	swapf	??_tmr1_init,f
  4946  01EA  081B               	movf	27,w	;volatile
  4947  01EB  0662               	xorwf	??_tmr1_init,w
  4948  01EC  39CF               	andlw	-49
  4949  01ED  0662               	xorwf	??_tmr1_init,w
  4950  01EE  009B               	movwf	27	;volatile
  4951                           
  4952                           ;drv_tmr1xx.c: 68: T1GCONbits.TMR1GE = 1;
  4953  01EF  179C               	bsf	28,7	;volatile
  4954                           
  4955                           ;drv_tmr1xx.c: 69: T1GCONbits.T1GPOL = 1;
  4956  01F0  171C               	bsf	28,6	;volatile
  4957                           
  4958                           ;drv_tmr1xx.c: 70: T1GCONbits.T1GTM = 0;
  4959  01F1  129C               	bcf	28,5	;volatile
  4960                           
  4961                           ;drv_tmr1xx.c: 71: T1GCONbits.T1GSPM = 0;
  4962  01F2  121C               	bcf	28,4	;volatile
  4963                           
  4964                           ;drv_tmr1xx.c: 72: T1GCONbits.T1GGO_nDONE = 0;
  4965  01F3  119C               	bcf	28,3	;volatile
  4966                           
  4967                           ;drv_tmr1xx.c: 73: T1GCONbits.T1GSS = (uint8_t)src;
  4968  01F4  081C               	movf	28,w	;volatile
  4969  01F5  065F               	xorwf	tmr1_init@src,w
  4970  01F6  39FC               	andlw	-4
  4971  01F7  065F               	xorwf	tmr1_init@src,w
  4972  01F8  009C               	movwf	28	;volatile
  4973                           
  4974                           ;drv_tmr1xx.c: 75: tmr1_gate_isr_cb = cb;
  4975  01F9  0861               	movf	tmr1_init@cb+1,w
  4976  01FA  00C0               	movwf	_tmr1_gate_isr_cb+1
  4977  01FB  0860               	movf	tmr1_init@cb,w
  4978  01FC  00BF               	movwf	_tmr1_gate_isr_cb
  4979  01FD  0008               	return
  4980  01FE                     __end_of_tmr1_init:	
  4981  01FE                     __ptext33:	
  4982 ;; *************** function _tmr1_starttimer *****************
  4983 ;; Defined at:
  4984 ;;		line 102 in file "src/drv_tmr1xx.c"
  4985 ;; Parameters:    Size  Location     Type
  4986 ;;		None
  4987 ;; Auto vars:     Size  Location     Type
  4988 ;;		None
  4989 ;; Return value:  Size  Location     Type
  4990 ;;                  1    wreg      void 
  4991 ;; Registers used:
  4992 ;;		None
  4993 ;; Tracked objects:
  4994 ;;		On entry : 1E/1
  4995 ;;		On exit  : 1F/0
  4996 ;;		Unchanged: 0/0
  4997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5002 ;;Total ram usage:        0 bytes
  5003 ;; Hardware stack levels used:    1
  5004 ;; Hardware stack levels required when called:    6
  5005 ;; This function calls:
  5006 ;;		Nothing
  5007 ;; This function is called by:
  5008 ;;		_app_init
  5009 ;;		_ir_tmr1_overflow_rest
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           
  5014                           ;psect for function _tmr1_starttimer
  5015  01FE                     _tmr1_starttimer:	
  5016  01FE                     l2670:	
  5017                           ;incstack = 0
  5018                           ; Regs used in _tmr1_starttimer: []
  5019                           
  5020                           
  5021                           ;drv_tmr1xx.c: 104: T1CONbits.TMR1ON = 1;
  5022  01FE  0020               	movlb	0	; select bank0
  5023  01FF  141B               	bsf	27,0	;volatile
  5024  0200  0008               	return
  5025  0201                     __end_of_tmr1_starttimer:	
  5026  0201                     __ptext32:	
  5027 ;; *************** function _tmr1_writetimer *****************
  5028 ;; Defined at:
  5029 ;;		line 77 in file "src/drv_tmr1xx.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  value           2    0[BANK0 ] unsigned int 
  5032 ;; Auto vars:     Size  Location     Type
  5033 ;;		None
  5034 ;; Return value:  Size  Location     Type
  5035 ;;                  1    wreg      void 
  5036 ;; Registers used:
  5037 ;;		wreg
  5038 ;; Tracked objects:
  5039 ;;		On entry : 1F/0
  5040 ;;		On exit  : 1F/0
  5041 ;;		Unchanged: 0/0
  5042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5046 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5047 ;;Total ram usage:        2 bytes
  5048 ;; Hardware stack levels used:    1
  5049 ;; Hardware stack levels required when called:    6
  5050 ;; This function calls:
  5051 ;;		Nothing
  5052 ;; This function is called by:
  5053 ;;		_app_init
  5054 ;;		_ir_tmr1_overflow_rest
  5055 ;; This function uses a non-reentrant model
  5056 ;;
  5057                           
  5058                           
  5059                           ;psect for function _tmr1_writetimer
  5060  0201                     _tmr1_writetimer:	
  5061                           
  5062                           ;drv_tmr1xx.c: 79: if(T1CONbits.T1SYNC == 1) {
  5063                           
  5064                           ;incstack = 0
  5065                           ; Regs used in _tmr1_writetimer: [wreg]
  5066  0201  1D1B               	btfss	27,2	;volatile
  5067  0202  2A0A               	goto	l2668
  5068                           
  5069                           ;drv_tmr1xx.c: 80: T1CONbits.TMR1ON = 0;
  5070  0203  101B               	bcf	27,0	;volatile
  5071                           
  5072                           ;drv_tmr1xx.c: 81: TMR1H = value >> 8;
  5073  0204  085F               	movf	tmr1_writetimer@value+1,w
  5074  0205  009A               	movwf	26	;volatile
  5075                           
  5076                           ;drv_tmr1xx.c: 82: TMR1L = value & 0xFF;
  5077  0206  085E               	movf	tmr1_writetimer@value,w
  5078  0207  0099               	movwf	25	;volatile
  5079                           
  5080                           ;drv_tmr1xx.c: 83: T1CONbits.TMR1ON = 1;
  5081  0208  141B               	bsf	27,0	;volatile
  5082                           
  5083                           ;drv_tmr1xx.c: 84: } else {
  5084  0209  0008               	return
  5085  020A                     l2668:	
  5086                           
  5087                           ;drv_tmr1xx.c: 85: TMR1H = value >> 8;
  5088  020A  085F               	movf	tmr1_writetimer@value+1,w
  5089  020B  009A               	movwf	26	;volatile
  5090                           
  5091                           ;drv_tmr1xx.c: 86: TMR1L = value & 0xFF;
  5092  020C  085E               	movf	tmr1_writetimer@value,w
  5093  020D  0099               	movwf	25	;volatile
  5094  020E  0008               	return
  5095  020F                     __end_of_tmr1_writetimer:	
  5096  020F                     __ptext30:	
  5097 ;; *************** function _tmr2_init *****************
  5098 ;; Defined at:
  5099 ;;		line 5 in file "src/drv_tmr2xx.c"
  5100 ;; Parameters:    Size  Location     Type
  5101 ;;  ckps            1    wreg     enum E8237
  5102 ;;  outps           1    0[BANK0 ] enum E8243
  5103 ;;  cb              2    1[BANK0 ] PTR FTN()void 
  5104 ;;		 -> led_run(1), 
  5105 ;; Auto vars:     Size  Location     Type
  5106 ;;  ckps            1    4[BANK0 ] enum E8237
  5107 ;; Return value:  Size  Location     Type
  5108 ;;                  1    wreg      void 
  5109 ;; Registers used:
  5110 ;;		wreg, status,2, status,0
  5111 ;; Tracked objects:
  5112 ;;		On entry : 1F/0
  5113 ;;		On exit  : 1F/0
  5114 ;;		Unchanged: 0/0
  5115 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5116 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5117 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5118 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5119 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5120 ;;Total ram usage:        5 bytes
  5121 ;; Hardware stack levels used:    1
  5122 ;; Hardware stack levels required when called:    6
  5123 ;; This function calls:
  5124 ;;		Nothing
  5125 ;; This function is called by:
  5126 ;;		_app_init
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           
  5130                           
  5131                           ;psect for function _tmr2_init
  5132  020F                     _tmr2_init:	
  5133                           
  5134                           ;incstack = 0
  5135                           ; Regs used in _tmr2_init: [wreg+status,2+status,0]
  5136                           ;tmr2_init@ckps stored from wreg
  5137  020F  00E2               	movwf	tmr2_init@ckps
  5138                           
  5139                           ;drv_tmr2xx.c: 7: T2CONbits.T2CKPS = (uint8_t)ckps;
  5140  0210  081F               	movf	31,w	;volatile
  5141  0211  0662               	xorwf	tmr2_init@ckps,w
  5142  0212  39FC               	andlw	-4
  5143  0213  0662               	xorwf	tmr2_init@ckps,w
  5144  0214  009F               	movwf	31	;volatile
  5145                           
  5146                           ;drv_tmr2xx.c: 8: T2CONbits.T2OUTPS = (uint8_t)outps;
  5147  0215  085E               	movf	tmr2_init@outps,w
  5148  0216  00E1               	movwf	??_tmr2_init
  5149  0217  0DE1               	rlf	??_tmr2_init,f
  5150  0218  0DE1               	rlf	??_tmr2_init,f
  5151  0219  0DE1               	rlf	??_tmr2_init,f
  5152  021A  081F               	movf	31,w	;volatile
  5153  021B  0661               	xorwf	??_tmr2_init,w
  5154  021C  3987               	andlw	-121
  5155  021D  0661               	xorwf	??_tmr2_init,w
  5156  021E  009F               	movwf	31	;volatile
  5157                           
  5158                           ;drv_tmr2xx.c: 9: TMR2 = 0x00;
  5159  021F  019D               	clrf	29	;volatile
  5160                           
  5161                           ;drv_tmr2xx.c: 11: tmr2_isr_cb = cb;
  5162  0220  0860               	movf	tmr2_init@cb+1,w
  5163  0221  00BE               	movwf	_tmr2_isr_cb+1
  5164  0222  085F               	movf	tmr2_init@cb,w
  5165  0223  00BD               	movwf	_tmr2_isr_cb
  5166  0224  0008               	return
  5167  0225                     __end_of_tmr2_init:	
  5168  0225                     __ptext29:	
  5169 ;; *************** function _tmr2_reload *****************
  5170 ;; Defined at:
  5171 ;;		line 13 in file "src/drv_tmr2xx.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  value           1    wreg     unsigned char 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  value           1    0[BANK0 ] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg
  5180 ;; Tracked objects:
  5181 ;;		On entry : 1F/0
  5182 ;;		On exit  : 1F/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5186 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5188 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5189 ;;Total ram usage:        1 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:    6
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_app_init
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           
  5200                           ;psect for function _tmr2_reload
  5201  0225                     _tmr2_reload:	
  5202                           
  5203                           ;incstack = 0
  5204                           ; Regs used in _tmr2_reload: [wreg]
  5205                           ;tmr2_reload@value stored from wreg
  5206  0225  00DE               	movwf	tmr2_reload@value
  5207                           
  5208                           ;drv_tmr2xx.c: 15: PR2 = value;
  5209  0226  009E               	movwf	30	;volatile
  5210  0227  0008               	return
  5211  0228                     __end_of_tmr2_reload:	
  5212  0228                     __ptext28:	
  5213 ;; *************** function _tmr2_starttimer *****************
  5214 ;; Defined at:
  5215 ;;		line 17 in file "src/drv_tmr2xx.c"
  5216 ;; Parameters:    Size  Location     Type
  5217 ;;		None
  5218 ;; Auto vars:     Size  Location     Type
  5219 ;;		None
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  1    wreg      void 
  5222 ;; Registers used:
  5223 ;;		None
  5224 ;; Tracked objects:
  5225 ;;		On entry : 1F/0
  5226 ;;		On exit  : 1F/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5233 ;;Total ram usage:        0 bytes
  5234 ;; Hardware stack levels used:    1
  5235 ;; Hardware stack levels required when called:    6
  5236 ;; This function calls:
  5237 ;;		Nothing
  5238 ;; This function is called by:
  5239 ;;		_app_init
  5240 ;; This function uses a non-reentrant model
  5241 ;;
  5242                           
  5243                           
  5244                           ;psect for function _tmr2_starttimer
  5245  0228                     _tmr2_starttimer:	
  5246                           
  5247                           ;drv_tmr2xx.c: 19: T2CONbits.TMR2ON = 1;
  5248                           
  5249                           ;incstack = 0
  5250                           ; Regs used in _tmr2_starttimer: []
  5251  0228  151F               	bsf	31,2	;volatile
  5252  0229  0008               	return
  5253  022A                     __end_of_tmr2_starttimer:	
  5254  022A                     __ptext21:	
  5255 ;; *************** function _led_init *****************
  5256 ;; Defined at:
  5257 ;;		line 67 in file "src/app_led.c"
  5258 ;; Parameters:    Size  Location     Type
  5259 ;;		None
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;		None
  5262 ;; Return value:  Size  Location     Type
  5263 ;;                  1    wreg      void 
  5264 ;; Registers used:
  5265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5266 ;; Tracked objects:
  5267 ;;		On entry : 1E/0
  5268 ;;		On exit  : 1E/0
  5269 ;;		Unchanged: 0/0
  5270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5275 ;;Total ram usage:        0 bytes
  5276 ;; Hardware stack levels used:    1
  5277 ;; Hardware stack levels required when called:    7
  5278 ;; This function calls:
  5279 ;;		_led_turnoff_ramp
  5280 ;;		_led_turnon_ramp
  5281 ;; This function is called by:
  5282 ;;		_main
  5283 ;;		_ir_short_action
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           
  5288                           ;psect for function _led_init
  5289  022A                     _led_init:	
  5290  022A                     l2330:	
  5291                           ;incstack = 0
  5292                           ; Regs used in _led_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5293                           
  5294                           
  5295                           ;app_led.c: 69: if(m_led_para.mOn) {
  5296  022A  0021               	movlb	1	; select bank1
  5297  022B  1C20               	btfss	_m_led_para^(0+128),0
  5298  022C  2A88               	goto	l2358
  5299                           
  5300                           ;app_led.c: 70: led_turnon_ramp();
  5301  022D  228A  3180         	fcall	_led_turnon_ramp
  5302                           
  5303                           ;app_led.c: 71: switch(m_led_para.mState) {
  5304  022F  2A78               	goto	l2356
  5305  0230                     l2334:	
  5306                           
  5307                           ;app_led.c: 73: m_led_run_para.mTargetBright[0] = 1000;
  5308  0230  30E8               	movlw	232
  5309  0231  0020               	movlb	0	; select bank0
  5310  0232  00AB               	movwf	_m_led_run_para+11
  5311  0233  3003               	movlw	3
  5312  0234  00AC               	movwf	_m_led_run_para+12
  5313                           
  5314                           ;app_led.c: 74: m_led_run_para.mTargetBright[1] = 1000;
  5315  0235  30E8               	movlw	232
  5316  0236  00AD               	movwf	_m_led_run_para+13
  5317  0237  3003               	movlw	3
  5318  0238  00AE               	movwf	_m_led_run_para+14
  5319                           
  5320                           ;app_led.c: 75: m_led_run_para.mTargetBright[2] = 200;
  5321  0239  30C8               	movlw	200
  5322  023A  00AF               	movwf	_m_led_run_para+15
  5323  023B  302C               	movlw	44
  5324  023C  01B0               	clrf	_m_led_run_para+16
  5325                           
  5326                           ;app_led.c: 76: m_led_run_para.mTargetBright[3] = 300;
  5327  023D  00B1               	movwf	_m_led_run_para+17
  5328  023E  3001               	movlw	1
  5329  023F  00B2               	movwf	_m_led_run_para+18
  5330                           
  5331                           ;app_led.c: 77: m_led_run_para.mTargetBright[4] = 200;
  5332  0240  30C8               	movlw	200
  5333  0241  00B3               	movwf	_m_led_run_para+19
  5334  0242  01B4               	clrf	_m_led_run_para+20
  5335                           
  5336                           ;app_led.c: 78: break;
  5337  0243  0008               	return
  5338  0244                     l2336:	
  5339                           
  5340                           ;app_led.c: 80: m_led_run_para.mTargetBright[0] = 700;
  5341  0244  30BC               	movlw	188
  5342  0245  0020               	movlb	0	; select bank0
  5343  0246  00AB               	movwf	_m_led_run_para+11
  5344  0247  3002               	movlw	2
  5345  0248  00AC               	movwf	_m_led_run_para+12
  5346                           
  5347                           ;app_led.c: 81: m_led_run_para.mTargetBright[1] = 500;
  5348  0249  30F4               	movlw	244
  5349  024A  00AD               	movwf	_m_led_run_para+13
  5350  024B  3001               	movlw	1
  5351  024C  00AE               	movwf	_m_led_run_para+14
  5352                           
  5353                           ;app_led.c: 82: m_led_run_para.mTargetBright[2] = 1000;
  5354  024D  30E8               	movlw	232
  5355  024E  00AF               	movwf	_m_led_run_para+15
  5356  024F  3003               	movlw	3
  5357  0250  00B0               	movwf	_m_led_run_para+16
  5358                           
  5359                           ;app_led.c: 83: m_led_run_para.mTargetBright[3] = 0;
  5360  0251  01B1               	clrf	_m_led_run_para+17
  5361  0252  01B2               	clrf	_m_led_run_para+18
  5362                           
  5363                           ;app_led.c: 84: m_led_run_para.mTargetBright[4] = 0;
  5364  0253  01B3               	clrf	_m_led_run_para+19
  5365  0254  01B4               	clrf	_m_led_run_para+20
  5366                           
  5367                           ;app_led.c: 85: break;
  5368  0255  0008               	return
  5369  0256                     l2342:	
  5370                           
  5371                           ;app_led.c: 87: m_led_run_para.mTargetBright[0] = 0;
  5372  0256  0020               	movlb	0	; select bank0
  5373  0257  30F4               	movlw	244
  5374  0258  01AB               	clrf	_m_led_run_para+11
  5375  0259  01AC               	clrf	_m_led_run_para+12
  5376                           
  5377                           ;app_led.c: 88: m_led_run_para.mTargetBright[1] = 500;
  5378  025A  00AD               	movwf	_m_led_run_para+13
  5379  025B  3001               	movlw	1
  5380  025C  00AE               	movwf	_m_led_run_para+14
  5381  025D  30F4               	movlw	244
  5382                           
  5383                           ;app_led.c: 89: m_led_run_para.mTargetBright[2] = 0;
  5384  025E  01AF               	clrf	_m_led_run_para+15
  5385  025F  01B0               	clrf	_m_led_run_para+16
  5386                           
  5387                           ;app_led.c: 90: m_led_run_para.mTargetBright[3] = 500;
  5388  0260  00B1               	movwf	_m_led_run_para+17
  5389  0261  3001               	movlw	1
  5390  0262  00B2               	movwf	_m_led_run_para+18
  5391                           
  5392                           ;app_led.c: 91: m_led_run_para.mTargetBright[4] = 500;
  5393  0263  30F4               	movlw	244
  5394  0264  00B3               	movwf	_m_led_run_para+19
  5395  0265  3001               	movlw	1
  5396  0266  00B4               	movwf	_m_led_run_para+20
  5397                           
  5398                           ;app_led.c: 92: break;
  5399  0267  0008               	return
  5400  0268                     l2348:	
  5401                           
  5402                           ;app_led.c: 94: m_led_run_para.mTargetBright[0] = 0;
  5403  0268  0020               	movlb	0	; select bank0
  5404  0269  30E8               	movlw	232
  5405  026A  01AB               	clrf	_m_led_run_para+11
  5406  026B  01AC               	clrf	_m_led_run_para+12
  5407                           
  5408                           ;app_led.c: 95: m_led_run_para.mTargetBright[1] = 0;
  5409  026C  01AD               	clrf	_m_led_run_para+13
  5410  026D  01AE               	clrf	_m_led_run_para+14
  5411                           
  5412                           ;app_led.c: 96: m_led_run_para.mTargetBright[2] = 1000;
  5413  026E  00AF               	movwf	_m_led_run_para+15
  5414  026F  3003               	movlw	3
  5415  0270  00B0               	movwf	_m_led_run_para+16
  5416                           
  5417                           ;app_led.c: 97: m_led_run_para.mTargetBright[3] = 500;
  5418  0271  30F4               	movlw	244
  5419  0272  00B1               	movwf	_m_led_run_para+17
  5420  0273  3001               	movlw	1
  5421  0274  00B2               	movwf	_m_led_run_para+18
  5422                           
  5423                           ;app_led.c: 98: m_led_run_para.mTargetBright[4] = 0;
  5424  0275  01B3               	clrf	_m_led_run_para+19
  5425  0276  01B4               	clrf	_m_led_run_para+20
  5426                           
  5427                           ;app_led.c: 99: break;
  5428  0277  0008               	return
  5429  0278                     l2356:	
  5430  0278  0021               	movlb	1	; select bank1
  5431  0279  0C20               	rrf	_m_led_para^(0+128),w
  5432  027A  397F               	andlw	127
  5433                           
  5434                           ; Switch size 1, requested type "space"
  5435                           ; Number of cases is 4, Range of values is 1 to 8
  5436                           ; switch strategies available:
  5437                           ; Name         Instructions Cycles
  5438                           ; simple_byte           13     7 (average)
  5439                           ; direct_byte           25     9 (fixed)
  5440                           ; jumptable            263     9 (fixed)
  5441                           ;	Chosen strategy is simple_byte
  5442  027B  3A01               	xorlw	1	; case 1
  5443  027C  1903               	skipnz
  5444  027D  2A30               	goto	l2334
  5445  027E  3A03               	xorlw	3	; case 2
  5446  027F  1903               	skipnz
  5447  0280  2A44               	goto	l2336
  5448  0281  3A06               	xorlw	6	; case 4
  5449  0282  1903               	skipnz
  5450  0283  2A56               	goto	l2342
  5451  0284  3A0C               	xorlw	12	; case 8
  5452  0285  1903               	skipnz
  5453  0286  2A68               	goto	l2348
  5454  0287  2A89               	goto	l575
  5455  0288                     l2358:	
  5456                           
  5457                           ;app_led.c: 104: led_turnoff_ramp();
  5458  0288  233F               	fcall	_led_turnoff_ramp
  5459  0289                     l575:	
  5460  0289  0008               	return
  5461  028A                     __end_of_led_init:	
  5462  028A                     __ptext22:	
  5463 ;; *************** function _led_turnon_ramp *****************
  5464 ;; Defined at:
  5465 ;;		line 33 in file "src/app_led.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  i               1    0[BANK0 ] unsigned char 
  5470 ;; Return value:  Size  Location     Type
  5471 ;;                  1    wreg      void 
  5472 ;; Registers used:
  5473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  5474 ;; Tracked objects:
  5475 ;;		On entry : 1F/1
  5476 ;;		On exit  : 1F/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5480 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5482 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5483 ;;Total ram usage:        1 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    6
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_led_init
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           
  5494                           ;psect for function _led_turnon_ramp
  5495  028A                     _led_turnon_ramp:	
  5496                           
  5497                           ;app_led.c: 35: for(uint8_t i = 0; i < 5; i++) {
  5498                           
  5499                           ;incstack = 0
  5500                           ; Regs used in _led_turnon_ramp: [wreg-fsr1h+status,2+status,0]
  5501  028A  0020               	movlb	0	; select bank0
  5502  028B  01DE               	clrf	led_turnon_ramp@i
  5503  028C                     l2172:	
  5504                           
  5505                           ;app_led.c: 36: m_led_run_para.mTargetBright[i] = m_led_para.mBright[i];
  5506  028C  355E               	lslf	led_turnon_ramp@i,w
  5507  028D  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
  5508  028E  0086               	movwf	6
  5509  028F  0187               	clrf	7
  5510  0290  355E               	lslf	led_turnon_ramp@i,w
  5511  0291  3E2B               	addlw	(low ((_m_led_run_para| 0+11)))& (0+255)
  5512  0292  2606  3180         	fcall	PL4	;call to abstracted procedure
  5513  0294  3005               	movlw	5
  5514  0295  0ADE               	incf	led_turnon_ramp@i,f
  5515  0296  025E               	subwf	led_turnon_ramp@i,w
  5516  0297  1803               	btfsc	3,0
  5517  0298  0008               	return
  5518  0299  2A8C               	goto	l2172
  5519  029A                     __end_of_led_turnon_ramp:	
  5520  029A                     __ptext7:	
  5521 ;; *************** function _ir_action *****************
  5522 ;; Defined at:
  5523 ;;		line 336 in file "src/app_ir.c"
  5524 ;; Parameters:    Size  Location     Type
  5525 ;;		None
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;		None
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  1    wreg      void 
  5530 ;; Registers used:
  5531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5532 ;; Tracked objects:
  5533 ;;		On entry : 1F/0
  5534 ;;		On exit  : 1F/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5541 ;;Total ram usage:        0 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    9
  5544 ;; This function calls:
  5545 ;;		_ir_short_action
  5546 ;;		_led_save_para
  5547 ;; This function is called by:
  5548 ;;		_main
  5549 ;; This function uses a non-reentrant model
  5550 ;;
  5551                           
  5552                           
  5553                           ;psect for function _ir_action
  5554  029A                     _ir_action:	
  5555                           
  5556                           ;app_ir.c: 338: if(m_ir_state.mRcvKey) {
  5557                           
  5558                           ;incstack = 0
  5559                           ; Regs used in _ir_action: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5560  029A  1C3B               	btfss	_m_ir_state,0
  5561  029B  0008               	return
  5562                           
  5563                           ;app_ir.c: 339: m_ir_state.mRcvKey = 0;
  5564  029C  103B               	bcf	_m_ir_state,0
  5565                           
  5566                           ;app_ir.c: 340: ir_short_action();
  5567  029D  2382  3180         	fcall	_ir_short_action
  5568                           
  5569                           ;app_ir.c: 341: led_save_para();
  5570  029F  231E               	fcall	_led_save_para
  5571                           
  5572                           ;app_ir.c: 342: KeyValue = 0xFF;
  5573  02A0  30FF               	movlw	255
  5574  02A1  00C4               	movwf	_KeyValue
  5575  02A2  0008               	return
  5576  02A3                     __end_of_ir_action:	
  5577  02A3                     __ptext4:	
  5578 ;; *************** function _ir_tmr1_overflow_rest *****************
  5579 ;; Defined at:
  5580 ;;		line 82 in file "src/app_ir.c"
  5581 ;; Parameters:    Size  Location     Type
  5582 ;;		None
  5583 ;; Auto vars:     Size  Location     Type
  5584 ;;		None
  5585 ;; Return value:  Size  Location     Type
  5586 ;;                  1    wreg      void 
  5587 ;; Registers used:
  5588 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5589 ;; Tracked objects:
  5590 ;;		On entry : 0/0
  5591 ;;		On exit  : 1F/0
  5592 ;;		Unchanged: 0/0
  5593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5598 ;;Total ram usage:        0 bytes
  5599 ;; Hardware stack levels used:    1
  5600 ;; Hardware stack levels required when called:    9
  5601 ;; This function calls:
  5602 ;;		_led_get_state
  5603 ;;		_led_save_para
  5604 ;;		_tmr1_starttimer
  5605 ;;		_tmr1_stoptimer
  5606 ;;		_tmr1_writetimer
  5607 ;;		_tmr2_enabled_isr
  5608 ;; This function is called by:
  5609 ;;		_main
  5610 ;; This function uses a non-reentrant model
  5611 ;;
  5612                           
  5613                           
  5614                           ;psect for function _ir_tmr1_overflow_rest
  5615  02A3                     _ir_tmr1_overflow_rest:	
  5616                           
  5617                           ;app_ir.c: 84: if(PIR1bits.TMR1IF) {
  5618                           
  5619                           ;incstack = 0
  5620                           ; Regs used in _ir_tmr1_overflow_rest: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5621  02A3  0020               	movlb	0	; select bank0
  5622  02A4  1C11               	btfss	17,0	;volatile
  5623  02A5  0008               	return
  5624                           
  5625                           ;app_ir.c: 85: PIR1bits.TMR1IF = 0;
  5626  02A6  1011               	bcf	17,0	;volatile
  5627                           
  5628                           ;app_ir.c: 86: tmr1_stoptimer();
  5629  02A7  233D  3180         	fcall	_tmr1_stoptimer
  5630                           
  5631                           ;app_ir.c: 87: tmr1_writetimer(0);
  5632  02A9  01DE               	clrf	tmr1_writetimer@value
  5633  02AA  01DF               	clrf	tmr1_writetimer@value+1
  5634  02AB  2201  3180         	fcall	_tmr1_writetimer
  5635                           
  5636                           ;app_ir.c: 88: m_ir_state.mState = 0;
  5637  02AD  01BC               	clrf	_m_ir_state+1
  5638                           
  5639                           ;app_ir.c: 90: if(m_ir_state.mRptKey) {
  5640  02AE  1CBB               	btfss	_m_ir_state,1
  5641  02AF  2AEC               	goto	l3014
  5642                           
  5643                           ;app_ir.c: 91: m_ir_state.mRptKey = 0;
  5644  02B0  10BB               	bcf	_m_ir_state,1
  5645                           
  5646                           ;app_ir.c: 92: switch(KeyValue) {
  5647  02B1  2AB5               	goto	l3004
  5648  02B2                     l360:	
  5649  02B2                     l3000:	
  5650                           
  5651                           ;app_ir.c: 94: case 0x11:
  5652                           ;app_ir.c: 95: case 0x12:
  5653                           ;app_ir.c: 96: case 0x16:
  5654                           ;app_ir.c: 97: case 0x4C:
  5655                           ;app_ir.c: 98: case 0x04:
  5656                           ;app_ir.c: 99: case 0x1E:
  5657                           ;app_ir.c: 100: case 0x0E:
  5658                           ;app_ir.c: 101: case 0x14:
  5659                           ;app_ir.c: 102: case 0x0F:
  5660                           ;app_ir.c: 103: case 0x1D:
  5661                           ;app_ir.c: 104: case 0x1F:
  5662                           ;app_ir.c: 105: case 0x0D:
  5663                           ;app_ir.c: 106: case 0x15:
  5664                           ;app_ir.c: 107: led_save_para();
  5665  02B2  231E  3180         	fcall	_led_save_para
  5666                           
  5667                           ;app_ir.c: 108: break;
  5668  02B4  2AE1               	goto	l3006
  5669  02B5                     l3004:	
  5670  02B5  0844               	movf	_KeyValue,w
  5671                           
  5672                           ; Switch size 1, requested type "space"
  5673                           ; Number of cases is 14, Range of values is 4 to 76
  5674                           ; switch strategies available:
  5675                           ; Name         Instructions Cycles
  5676                           ; simple_byte           43    22 (average)
  5677                           ; direct_byte          155     9 (fixed)
  5678                           ; jumptable            263     9 (fixed)
  5679                           ;	Chosen strategy is simple_byte
  5680  02B6  3A04               	xorlw	4	; case 4
  5681  02B7  1903               	skipnz
  5682  02B8  2AB2               	goto	l3000
  5683  02B9  3A09               	xorlw	9	; case 13
  5684  02BA  1903               	skipnz
  5685  02BB  2AB2               	goto	l3000
  5686  02BC  3A03               	xorlw	3	; case 14
  5687  02BD  1903               	skipnz
  5688  02BE  2AB2               	goto	l3000
  5689  02BF  3A01               	xorlw	1	; case 15
  5690  02C0  1903               	skipnz
  5691  02C1  2AB2               	goto	l3000
  5692  02C2  3A1E               	xorlw	30	; case 17
  5693  02C3  1903               	skipnz
  5694  02C4  2AB2               	goto	l360
  5695  02C5  3A03               	xorlw	3	; case 18
  5696  02C6  1903               	skipnz
  5697  02C7  2AB2               	goto	l360
  5698  02C8  3A06               	xorlw	6	; case 20
  5699  02C9  1903               	skipnz
  5700  02CA  2AB2               	goto	l3000
  5701  02CB  3A01               	xorlw	1	; case 21
  5702  02CC  1903               	skipnz
  5703  02CD  2AB2               	goto	l3000
  5704  02CE  3A03               	xorlw	3	; case 22
  5705  02CF  1903               	skipnz
  5706  02D0  2AB2               	goto	l3000
  5707  02D1  3A0D               	xorlw	13	; case 27
  5708  02D2  1903               	skipnz
  5709  02D3  2AB2               	goto	l360
  5710  02D4  3A06               	xorlw	6	; case 29
  5711  02D5  1903               	skipnz
  5712  02D6  2AB2               	goto	l3000
  5713  02D7  3A03               	xorlw	3	; case 30
  5714  02D8  1903               	skipnz
  5715  02D9  2AB2               	goto	l3000
  5716  02DA  3A01               	xorlw	1	; case 31
  5717  02DB  1903               	skipnz
  5718  02DC  2AB2               	goto	l3000
  5719  02DD  3A53               	xorlw	83	; case 76
  5720  02DE  1903               	skipnz
  5721  02DF  2AB2               	goto	l3000
  5722  02E0  2AE1               	goto	l3006
  5723  02E1                     l3006:	
  5724                           
  5725                           ;app_ir.c: 112: KeyValue = 0xFF;
  5726  02E1  30FF               	movlw	255
  5727  02E2  00C4               	movwf	_KeyValue
  5728                           
  5729                           ;app_ir.c: 113: } else {
  5730  02E3  2B18               	goto	l3016
  5731  02E4                     l378:	
  5732  02E4                     l3008:	
  5733                           
  5734                           ;app_ir.c: 116: case 0x11:
  5735                           ;app_ir.c: 117: case 0x12:
  5736                           ;app_ir.c: 118: case 0x16:
  5737                           ;app_ir.c: 119: case 0x4C:
  5738                           ;app_ir.c: 120: case 0x04:
  5739                           ;app_ir.c: 121: case 0x1E:
  5740                           ;app_ir.c: 122: case 0x0E:
  5741                           ;app_ir.c: 123: case 0x14:
  5742                           ;app_ir.c: 124: case 0x0F:
  5743                           ;app_ir.c: 125: if(!led_get_state()) {
  5744  02E4  2328  3180         	fcall	_led_get_state
  5745  02E6  3A00               	xorlw	0
  5746  02E7  1D03               	skipz
  5747  02E8  2B18               	goto	l3016
  5748  02E9                     l3010:	
  5749                           
  5750                           ;app_ir.c: 126: m_ir_state.mRcvKey = 1;
  5751  02E9  0020               	movlb	0	; select bank0
  5752  02EA  143B               	bsf	_m_ir_state,0
  5753  02EB  2B18               	goto	l3016
  5754  02EC                     l3014:	
  5755  02EC  0844               	movf	_KeyValue,w
  5756                           
  5757                           ; Switch size 1, requested type "space"
  5758                           ; Number of cases is 14, Range of values is 4 to 76
  5759                           ; switch strategies available:
  5760                           ; Name         Instructions Cycles
  5761                           ; simple_byte           43    22 (average)
  5762                           ; direct_byte          155     9 (fixed)
  5763                           ; jumptable            263     9 (fixed)
  5764                           ;	Chosen strategy is simple_byte
  5765  02ED  3A04               	xorlw	4	; case 4
  5766  02EE  1903               	skipnz
  5767  02EF  2AE4               	goto	l3008
  5768  02F0  3A09               	xorlw	9	; case 13
  5769  02F1  1903               	skipnz
  5770  02F2  2AE9               	goto	l3010
  5771  02F3  3A03               	xorlw	3	; case 14
  5772  02F4  1903               	skipnz
  5773  02F5  2AE4               	goto	l3008
  5774  02F6  3A01               	xorlw	1	; case 15
  5775  02F7  1903               	skipnz
  5776  02F8  2AE4               	goto	l3008
  5777  02F9  3A1E               	xorlw	30	; case 17
  5778  02FA  1903               	skipnz
  5779  02FB  2AE4               	goto	l378
  5780  02FC  3A03               	xorlw	3	; case 18
  5781  02FD  1903               	skipnz
  5782  02FE  2AE4               	goto	l3008
  5783  02FF  3A06               	xorlw	6	; case 20
  5784  0300  1903               	skipnz
  5785  0301  2AE4               	goto	l3008
  5786  0302  3A01               	xorlw	1	; case 21
  5787  0303  1903               	skipnz
  5788  0304  2AE9               	goto	l3010
  5789  0305  3A03               	xorlw	3	; case 22
  5790  0306  1903               	skipnz
  5791  0307  2AE4               	goto	l3008
  5792  0308  3A0D               	xorlw	13	; case 27
  5793  0309  1903               	skipnz
  5794  030A  2AE4               	goto	l378
  5795  030B  3A06               	xorlw	6	; case 29
  5796  030C  1903               	skipnz
  5797  030D  2AE9               	goto	l3010
  5798  030E  3A03               	xorlw	3	; case 30
  5799  030F  1903               	skipnz
  5800  0310  2AE4               	goto	l3008
  5801  0311  3A01               	xorlw	1	; case 31
  5802  0312  1903               	skipnz
  5803  0313  2AE9               	goto	l3010
  5804  0314  3A53               	xorlw	83	; case 76
  5805  0315  1903               	skipnz
  5806  0316  2AE4               	goto	l3008
  5807  0317  2B18               	goto	l3016
  5808  0318                     l3016:	
  5809                           
  5810                           ;app_ir.c: 138: }
  5811                           ;app_ir.c: 139: tmr2_enabled_isr();
  5812  0318  231B  3180         	fcall	_tmr2_enabled_isr
  5813                           
  5814                           ;app_ir.c: 140: tmr1_starttimer();
  5815  031A  29FE               	ljmp	l2670
  5816  031B                     __end_of_ir_tmr1_overflow_rest:	
  5817  031B                     __ptext31:	
  5818 ;; *************** function _tmr2_enabled_isr *****************
  5819 ;; Defined at:
  5820 ;;		line 25 in file "src/drv_tmr2xx.c"
  5821 ;; Parameters:    Size  Location     Type
  5822 ;;		None
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  1    wreg      void 
  5827 ;; Registers used:
  5828 ;;		None
  5829 ;; Tracked objects:
  5830 ;;		On entry : 1E/0
  5831 ;;		On exit  : 1F/1
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5838 ;;Total ram usage:        0 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:    6
  5841 ;; This function calls:
  5842 ;;		Nothing
  5843 ;; This function is called by:
  5844 ;;		_app_init
  5845 ;;		_ir_tmr1_overflow_rest
  5846 ;; This function uses a non-reentrant model
  5847 ;;
  5848                           
  5849                           
  5850                           ;psect for function _tmr2_enabled_isr
  5851  031B                     _tmr2_enabled_isr:	
  5852                           
  5853                           ;drv_tmr2xx.c: 27: PIE1bits.TMR2IE = 1;
  5854                           
  5855                           ;incstack = 0
  5856                           ; Regs used in _tmr2_enabled_isr: []
  5857  031B  0021               	movlb	1	; select bank1
  5858  031C  1491               	bsf	17,1	;volatile
  5859  031D  0008               	return
  5860  031E                     __end_of_tmr2_enabled_isr:	
  5861  031E                     __ptext8:	
  5862 ;; *************** function _led_save_para *****************
  5863 ;; Defined at:
  5864 ;;		line 107 in file "src/app_led.c"
  5865 ;; Parameters:    Size  Location     Type
  5866 ;;		None
  5867 ;; Auto vars:     Size  Location     Type
  5868 ;;		None
  5869 ;; Return value:  Size  Location     Type
  5870 ;;                  1    wreg      void 
  5871 ;; Registers used:
  5872 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5873 ;; Tracked objects:
  5874 ;;		On entry : 0/0
  5875 ;;		On exit  : 1F/0
  5876 ;;		Unchanged: 0/0
  5877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5882 ;;Total ram usage:        0 bytes
  5883 ;; Hardware stack levels used:    1
  5884 ;; Hardware stack levels required when called:    8
  5885 ;; This function calls:
  5886 ;;		_eeprom_write_buffer
  5887 ;; This function is called by:
  5888 ;;		_ir_tmr1_overflow_rest
  5889 ;;		_ir_action
  5890 ;; This function uses a non-reentrant model
  5891 ;;
  5892                           
  5893                           
  5894                           ;psect for function _led_save_para
  5895  031E                     _led_save_para:	
  5896                           
  5897                           ;app_led.c: 109: eeprom_write_buffer(0x7010,(uint8_t *)&m_led_para,sizeof(m_led_para));
  5898                           
  5899                           ;incstack = 0
  5900                           ; Regs used in _led_save_para: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5901  031E  3010               	movlw	16
  5902  031F  0020               	movlb	0	; select bank0
  5903  0320  00E2               	movwf	eeprom_write_buffer@addr
  5904  0321  3070               	movlw	112
  5905  0322  00E3               	movwf	eeprom_write_buffer@addr+1
  5906  0323  30A0               	movlw	(low (_m_led_para| 0))& (0+255)
  5907  0324  00E4               	movwf	eeprom_write_buffer@pbuf
  5908  0325  3033               	movlw	51
  5909  0326  00E5               	movwf	eeprom_write_buffer@len
  5910  0327  2B4B               	ljmp	l2472
  5911  0328                     __end_of_led_save_para:	
  5912  0328                     __ptext6:	
  5913 ;; *************** function _led_get_state *****************
  5914 ;; Defined at:
  5915 ;;		line 119 in file "src/app_led.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;		None
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;                  1    wreg      unsigned char 
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 1F/1
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;Total ram usage:        0 bytes
  5934 ;; Hardware stack levels used:    1
  5935 ;; Hardware stack levels required when called:    6
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_ir_tmr1_overflow_rest
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           
  5944                           ;psect for function _led_get_state
  5945  0328                     _led_get_state:	
  5946                           
  5947                           ;app_led.c: 121: if(m_led_para.mState == 0x01 || m_led_para.mState == 0x02 || m_led_para
      +                          .mState == 0x04 ||
  5948                           ;app_led.c: 122: m_led_para.mState == 0x08) {
  5949                           
  5950                           ;incstack = 0
  5951                           ; Regs used in _led_get_state: [wreg+status,2+status,0]
  5952  0328  318F  27FB  3180   	fcall	PL34	;call to abstracted procedure
  5953  032B  1903               	skipnz
  5954  032C  3401               	retlw	1
  5955  032D  0C20               	rrf	_m_led_para^(0+128),w
  5956  032E  397F               	andlw	127
  5957  032F  3A02               	xorlw	2
  5958  0330  1903               	skipnz
  5959  0331  3401               	retlw	1
  5960  0332  0C20               	rrf	_m_led_para^(0+128),w
  5961  0333  397F               	andlw	127
  5962  0334  3A04               	xorlw	4
  5963  0335  1903               	skipnz
  5964  0336  3401               	retlw	1
  5965  0337  0C20               	rrf	_m_led_para^(0+128),w
  5966  0338  397F               	andlw	127
  5967  0339  3A08               	xorlw	8
  5968  033A  1903               	btfsc	3,2
  5969                           
  5970                           ;app_led.c: 123: return 1;
  5971  033B  3401               	retlw	1
  5972                           
  5973                           ;app_led.c: 124: }
  5974                           ;app_led.c: 125: return 0;
  5975  033C  3400               	retlw	0
  5976  033D                     __end_of_led_get_state:	
  5977  033D                     __ptext5:	
  5978 ;; *************** function _tmr1_stoptimer *****************
  5979 ;; Defined at:
  5980 ;;		line 106 in file "src/drv_tmr1xx.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;		None
  5983 ;; Auto vars:     Size  Location     Type
  5984 ;;		None
  5985 ;; Return value:  Size  Location     Type
  5986 ;;                  1    wreg      void 
  5987 ;; Registers used:
  5988 ;;		None
  5989 ;; Tracked objects:
  5990 ;;		On entry : 1F/0
  5991 ;;		On exit  : 1F/0
  5992 ;;		Unchanged: 0/0
  5993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5998 ;;Total ram usage:        0 bytes
  5999 ;; Hardware stack levels used:    1
  6000 ;; Hardware stack levels required when called:    6
  6001 ;; This function calls:
  6002 ;;		Nothing
  6003 ;; This function is called by:
  6004 ;;		_ir_tmr1_overflow_rest
  6005 ;; This function uses a non-reentrant model
  6006 ;;
  6007                           
  6008                           
  6009                           ;psect for function _tmr1_stoptimer
  6010  033D                     _tmr1_stoptimer:	
  6011                           
  6012                           ;drv_tmr1xx.c: 108: T1CONbits.TMR1ON = 0;
  6013                           
  6014                           ;incstack = 0
  6015                           ; Regs used in _tmr1_stoptimer: []
  6016  033D  101B               	bcf	27,0	;volatile
  6017  033E  0008               	return
  6018  033F                     __end_of_tmr1_stoptimer:	
  6019  033F                     __ptext23:	
  6020 ;; *************** function _led_turnoff_ramp *****************
  6021 ;; Defined at:
  6022 ;;		line 39 in file "src/app_led.c"
  6023 ;; Parameters:    Size  Location     Type
  6024 ;;		None
  6025 ;; Auto vars:     Size  Location     Type
  6026 ;;  i               1    0[BANK0 ] unsigned char 
  6027 ;; Return value:  Size  Location     Type
  6028 ;;                  1    wreg      void 
  6029 ;; Registers used:
  6030 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  6031 ;; Tracked objects:
  6032 ;;		On entry : 1F/1
  6033 ;;		On exit  : 1F/0
  6034 ;;		Unchanged: 0/0
  6035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6037 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6039 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6040 ;;Total ram usage:        1 bytes
  6041 ;; Hardware stack levels used:    1
  6042 ;; Hardware stack levels required when called:    6
  6043 ;; This function calls:
  6044 ;;		Nothing
  6045 ;; This function is called by:
  6046 ;;		_led_init
  6047 ;; This function uses a non-reentrant model
  6048 ;;
  6049                           
  6050                           
  6051                           ;psect for function _led_turnoff_ramp
  6052  033F                     _led_turnoff_ramp:	
  6053                           
  6054                           ;app_led.c: 41: for(uint8_t i = 0; i < 5; i++) {
  6055                           
  6056                           ;incstack = 0
  6057                           ; Regs used in _led_turnoff_ramp: [wreg+fsr1l+fsr1h+status,2+status,0]
  6058  033F  0020               	movlb	0	; select bank0
  6059  0340  01DE               	clrf	led_turnoff_ramp@i
  6060  0341                     l2184:	
  6061                           
  6062                           ;app_led.c: 42: m_led_run_para.mTargetBright[i] = 0;
  6063  0341  355E               	lslf	led_turnoff_ramp@i,w
  6064  0342  3E2B               	addlw	(low ((_m_led_run_para| 0+11)))& (0+255)
  6065  0343  2640  3180         	fcall	PL30	;call to abstracted procedure
  6066  0345  3005               	movlw	5
  6067  0346  0ADE               	incf	led_turnoff_ramp@i,f
  6068  0347  025E               	subwf	led_turnoff_ramp@i,w
  6069  0348  1803               	btfsc	3,0
  6070  0349  0008               	return
  6071  034A  2B41               	goto	l2184
  6072  034B                     __end_of_led_turnoff_ramp:	
  6073  034B                     __ptext9:	
  6074 ;; *************** function _eeprom_write_buffer *****************
  6075 ;; Defined at:
  6076 ;;		line 33 in file "src/drv_eeprom.c"
  6077 ;; Parameters:    Size  Location     Type
  6078 ;;  addr            2    4[BANK0 ] unsigned int 
  6079 ;;  pbuf            1    6[BANK0 ] PTR unsigned char 
  6080 ;;		 -> m_led_para(51), 
  6081 ;;  len             1    7[BANK0 ] unsigned char 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;  i               1    8[BANK0 ] unsigned char 
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  1    wreg      void 
  6086 ;; Registers used:
  6087 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6088 ;; Tracked objects:
  6089 ;;		On entry : 1F/0
  6090 ;;		On exit  : 1F/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6093 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6096 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6097 ;;Total ram usage:        5 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; Hardware stack levels required when called:    7
  6100 ;; This function calls:
  6101 ;;		_eeprom_write_byte
  6102 ;; This function is called by:
  6103 ;;		_led_save_para
  6104 ;; This function uses a non-reentrant model
  6105 ;;
  6106                           
  6107                           
  6108                           ;psect for function _eeprom_write_buffer
  6109  034B                     _eeprom_write_buffer:	
  6110  034B                     l2472:	
  6111                           ;incstack = 0
  6112                           ; Regs used in _eeprom_write_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6113                           
  6114                           
  6115                           ;drv_eeprom.c: 35: for ( uint8_t i = len; i != 0; i-- ) {
  6116  034B  0865               	movf	eeprom_write_buffer@len,w
  6117  034C  00E6               	movwf	eeprom_write_buffer@i
  6118  034D                     l2474:	
  6119  034D  0866               	movf	eeprom_write_buffer@i,w
  6120  034E  1903               	btfsc	3,2
  6121  034F  0008               	return
  6122                           
  6123                           ;drv_eeprom.c: 36: eeprom_write_byte(addr++,*pbuf++ );
  6124  0350  0863               	movf	eeprom_write_buffer@addr+1,w
  6125  0351  00DF               	movwf	eeprom_write_byte@addr+1
  6126  0352  0862               	movf	eeprom_write_buffer@addr,w
  6127  0353  00DE               	movwf	eeprom_write_byte@addr
  6128  0354  0864               	movf	eeprom_write_buffer@pbuf,w
  6129  0355  0086               	movwf	6
  6130  0356  0187               	clrf	7
  6131  0357  0801               	movf	1,w
  6132  0358  00E0               	movwf	eeprom_write_byte@byte
  6133  0359  2361  3180         	fcall	_eeprom_write_byte
  6134  035B  0AE4               	incf	eeprom_write_buffer@pbuf,f
  6135  035C  0AE2               	incf	eeprom_write_buffer@addr,f
  6136  035D  1903               	skipnz
  6137  035E  0AE3               	incf	eeprom_write_buffer@addr+1,f
  6138  035F  03E6               	decf	eeprom_write_buffer@i,f
  6139  0360  2B4D               	goto	l2474
  6140  0361                     __end_of_eeprom_write_buffer:	
  6141  0361                     __ptext10:	
  6142 ;; *************** function _eeprom_write_byte *****************
  6143 ;; Defined at:
  6144 ;;		line 3 in file "src/drv_eeprom.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  addr            2    0[BANK0 ] unsigned int 
  6147 ;;  byte            1    2[BANK0 ] unsigned char 
  6148 ;; Auto vars:     Size  Location     Type
  6149 ;;  state           1    3[BANK0 ] unsigned char 
  6150 ;; Return value:  Size  Location     Type
  6151 ;;                  1    wreg      void 
  6152 ;; Registers used:
  6153 ;;		wreg, status,2, status,0
  6154 ;; Tracked objects:
  6155 ;;		On entry : 1F/0
  6156 ;;		On exit  : 1F/0
  6157 ;;		Unchanged: 0/0
  6158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6159 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6160 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6162 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6163 ;;Total ram usage:        4 bytes
  6164 ;; Hardware stack levels used:    1
  6165 ;; Hardware stack levels required when called:    6
  6166 ;; This function calls:
  6167 ;;		Nothing
  6168 ;; This function is called by:
  6169 ;;		_eeprom_write_buffer
  6170 ;; This function uses a non-reentrant model
  6171 ;;
  6172                           
  6173                           
  6174                           ;psect for function _eeprom_write_byte
  6175  0361                     _eeprom_write_byte:	
  6176                           
  6177                           ;drv_eeprom.c: 5: uint8_t state = INTCONbits.GIE;
  6178                           
  6179                           ;incstack = 0
  6180                           ; Regs used in _eeprom_write_byte: [wreg+status,2+status,0]
  6181  0361  3000               	movlw	0
  6182  0362  1B8B               	btfsc	11,7	;volatile
  6183  0363  3001               	movlw	1
  6184  0364  00E1               	movwf	eeprom_write_byte@state
  6185                           
  6186                           ;drv_eeprom.c: 7: NVMADRH = addr >> 8;
  6187  0365  085F               	movf	eeprom_write_byte@addr+1,w
  6188  0366  0031               	movlb	17	; select bank17
  6189  0367  0092               	movwf	18	;volatile
  6190                           
  6191                           ;drv_eeprom.c: 8: NVMADRL = addr & 0xFF;
  6192  0368  0020               	movlb	0	; select bank0
  6193  0369  085E               	movf	eeprom_write_byte@addr,w
  6194  036A  0031               	movlb	17	; select bank17
  6195  036B  0091               	movwf	17	;volatile
  6196                           
  6197                           ;drv_eeprom.c: 9: NVMDATL = byte;
  6198  036C  0020               	movlb	0	; select bank0
  6199  036D  0860               	movf	eeprom_write_byte@byte,w
  6200  036E  0031               	movlb	17	; select bank17
  6201  036F  0093               	movwf	19	;volatile
  6202                           
  6203                           ;drv_eeprom.c: 10: NVMCON1bits.NVMREGS = 1;
  6204  0370  1715               	bsf	21,6	;volsfr
  6205                           
  6206                           ;drv_eeprom.c: 11: NVMCON1bits.WREN = 1;
  6207  0371  1515               	bsf	21,2	;volsfr
  6208                           
  6209                           ;drv_eeprom.c: 12: INTCONbits.GIE = 0;
  6210  0372  138B               	bcf	11,7	;volatile
  6211                           
  6212                           ;drv_eeprom.c: 13: NVMCON2 = 0x55;
  6213  0373  3055               	movlw	85
  6214  0374  0096               	movwf	22	;volsfr
  6215                           
  6216                           ;drv_eeprom.c: 14: NVMCON2 = 0xAA;
  6217  0375  30AA               	movlw	170
  6218  0376  0096               	movwf	22	;volsfr
  6219                           
  6220                           ;drv_eeprom.c: 15: NVMCON1bits.WR = 1;
  6221  0377  1495               	bsf	21,1	;volsfr
  6222  0378                     l674:	
  6223                           ;drv_eeprom.c: 16: while(NVMCON1bits.WR);
  6224                           
  6225  0378  1895               	btfsc	21,1	;volsfr
  6226  0379  2B78               	goto	l674
  6227                           
  6228                           ;drv_eeprom.c: 18: NVMCON1bits.WREN = 0;
  6229  037A  1115               	bcf	21,2	;volsfr
  6230                           
  6231                           ;drv_eeprom.c: 19: INTCONbits.GIE = state;
  6232  037B  0020               	movlb	0	; select bank0
  6233  037C  0C61               	rrf	eeprom_write_byte@state,w
  6234  037D  1C03               	skipc
  6235  037E  138B               	bcf	11,7	;volatile
  6236  037F  1803               	skipnc
  6237  0380  178B               	bsf	11,7	;volatile
  6238  0381  0008               	return
  6239  0382                     __end_of_eeprom_write_byte:	
  6240  0382                     __ptext11:	
  6241 ;; *************** function _ir_short_action *****************
  6242 ;; Defined at:
  6243 ;;		line 273 in file "src/app_ir.c"
  6244 ;; Parameters:    Size  Location     Type
  6245 ;;		None
  6246 ;; Auto vars:     Size  Location     Type
  6247 ;;  idx             1   13[BANK0 ] unsigned char 
  6248 ;; Return value:  Size  Location     Type
  6249 ;;                  1    wreg      void 
  6250 ;; Registers used:
  6251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6252 ;; Tracked objects:
  6253 ;;		On entry : 1F/0
  6254 ;;		On exit  : 1E/0
  6255 ;;		Unchanged: 0/0
  6256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6258 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6259 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6260 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6261 ;;Total ram usage:        2 bytes
  6262 ;; Hardware stack levels used:    1
  6263 ;; Hardware stack levels required when called:    8
  6264 ;; This function calls:
  6265 ;;		_ir_get_index
  6266 ;;		_led_clear_state
  6267 ;;		_led_get_power_state
  6268 ;;		_led_init
  6269 ;;		_led_set_custom_bright
  6270 ;;		_led_set_decrease_bright
  6271 ;;		_led_set_increase_bright
  6272 ;;		_led_set_state
  6273 ;;		_led_setcolour
  6274 ;;		_led_toggle
  6275 ;; This function is called by:
  6276 ;;		_ir_action
  6277 ;; This function uses a non-reentrant model
  6278 ;;
  6279                           
  6280                           
  6281                           ;psect for function _ir_short_action
  6282  0382                     _ir_short_action:	
  6283                           
  6284                           ;app_ir.c: 277: switch(KeyValue) {
  6285                           
  6286                           ;incstack = 0
  6287                           ; Regs used in _ir_short_action: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6288  0382  2BDE               	goto	l2858
  6289  0383                     l2816:	
  6290                           
  6291                           ;app_ir.c: 279: led_toggle();
  6292  0383  24D3  3180         	fcall	_led_toggle
  6293  0385                     l2818:	
  6294                           
  6295                           ;app_ir.c: 280: led_init();
  6296  0385  2A2A               	ljmp	l2330
  6297  0386                     l468:	
  6298                           ;app_ir.c: 281: break;
  6299                           
  6300  0386                     l2820:	
  6301                           
  6302                           ;app_ir.c: 283: case 0x17:
  6303                           ;app_ir.c: 284: case 0x40:
  6304                           ;app_ir.c: 285: case 0x0A:
  6305                           ;app_ir.c: 286: case 0x1C:
  6306                           ;app_ir.c: 287: if(led_get_power_state()) {
  6307  0386  2482  3180         	fcall	_led_get_power_state
  6308  0388  3A00               	xorlw	0
  6309  0389  1903               	skipnz
  6310  038A  0008               	return
  6311                           
  6312                           ;app_ir.c: 288: idx = ir_get_index(KeyValue);
  6313  038B  0020               	movlb	0	; select bank0
  6314  038C  0844               	movf	_KeyValue,w
  6315  038D  2429  3180         	fcall	_ir_get_index
  6316  038F  00EB               	movwf	ir_short_action@idx
  6317                           
  6318                           ;app_ir.c: 289: led_setcolour(idx,max_bright[idx]);
  6319  0390  356B               	lslf	ir_short_action@idx,w
  6320  0391  3E4F               	addlw	(low (_max_bright| 0))& (0+255)
  6321  0392  0086               	movwf	6
  6322  0393  0187               	clrf	7
  6323  0394  3F40               	moviw [0]fsr1
  6324  0395  00DE               	movwf	led_setcolour@max
  6325  0396  3F41               	moviw [1]fsr1
  6326  0397  00DF               	movwf	led_setcolour@max+1
  6327  0398  086B               	movf	ir_short_action@idx,w
  6328  0399  24B4  3180         	fcall	_led_setcolour
  6329  039B                     l2826:	
  6330                           
  6331                           ;app_ir.c: 290: led_clear_state();
  6332  039B  2D8B               	ljmp	l2454
  6333  039C                     l474:	
  6334  039C                     l2828:	
  6335                           
  6336                           ;app_ir.c: 294: case 0x12:
  6337                           ;app_ir.c: 295: case 0x4C:
  6338                           ;app_ir.c: 296: case 0x1E:
  6339                           ;app_ir.c: 297: case 0x14:
  6340                           ;app_ir.c: 298: if(led_get_power_state()) {
  6341  039C  2482  3180         	fcall	_led_get_power_state
  6342  039E  3A00               	xorlw	0
  6343  039F  1903               	skipnz
  6344  03A0  0008               	return
  6345                           
  6346                           ;app_ir.c: 299: idx = ir_get_index(KeyValue);
  6347  03A1  0020               	movlb	0	; select bank0
  6348  03A2  0844               	movf	_KeyValue,w
  6349  03A3  2429  3180         	fcall	_ir_get_index
  6350                           
  6351                           ;app_ir.c: 300: led_set_increase_bright(idx,step_bright[idx],max_bright[idx]);
  6352  03A5  2634  3180         	fcall	PL20	;call to abstracted procedure
  6353  03A7  00E6               	movwf	led_set_increase_bright@step
  6354  03A8  356B               	lslf	ir_short_action@idx,w
  6355  03A9  3E4F               	addlw	(low (_max_bright| 0))& (0+255)
  6356  03AA  0086               	movwf	6
  6357  03AB  3F40               	moviw [0]fsr1
  6358  03AC  00E7               	movwf	led_set_increase_bright@max
  6359  03AD  3F41               	moviw [1]fsr1
  6360  03AE  00E8               	movwf	led_set_increase_bright@max+1
  6361  03AF  086B               	movf	ir_short_action@idx,w
  6362  03B0  2DC3               	ljmp	_led_set_increase_bright
  6363  03B1                     l480:	
  6364  03B1                     l2834:	
  6365                           
  6366                           ;app_ir.c: 304: case 0x16:
  6367                           ;app_ir.c: 305: case 0x04:
  6368                           ;app_ir.c: 306: case 0x0E:
  6369                           ;app_ir.c: 307: case 0x0F:
  6370                           ;app_ir.c: 308: if(led_get_power_state()) {
  6371  03B1  2482  3180         	fcall	_led_get_power_state
  6372  03B3  3A00               	xorlw	0
  6373  03B4  1903               	skipnz
  6374  03B5  0008               	return
  6375                           
  6376                           ;app_ir.c: 309: idx = ir_get_index(KeyValue);
  6377  03B6  0020               	movlb	0	; select bank0
  6378  03B7  0844               	movf	_KeyValue,w
  6379  03B8  2429  3180         	fcall	_ir_get_index
  6380                           
  6381                           ;app_ir.c: 310: led_set_decrease_bright(idx,step_bright[idx],0);
  6382  03BA  2634  3180         	fcall	PL20	;call to abstracted procedure
  6383  03BC  00E6               	movwf	led_set_decrease_bright@step
  6384  03BD  01E7               	clrf	led_set_decrease_bright@min
  6385  03BE  01E8               	clrf	led_set_decrease_bright@min+1
  6386  03BF  086B               	movf	ir_short_action@idx,w
  6387  03C0  2D8F               	ljmp	_led_set_decrease_bright
  6388  03C1                     l485:	
  6389  03C1                     l2840:	
  6390                           
  6391                           ;app_ir.c: 314: case 0x00:
  6392                           ;app_ir.c: 315: case 0x1A:
  6393                           ;app_ir.c: 316: case 0x0C:
  6394                           ;app_ir.c: 317: idx = ir_get_index(KeyValue);
  6395  03C1  0844               	movf	_KeyValue,w
  6396  03C2  2429  3180         	fcall	_ir_get_index
  6397  03C4  00EB               	movwf	ir_short_action@idx
  6398                           
  6399                           ;app_ir.c: 318: idx = 1 << idx;
  6400  03C5  3001               	movlw	1
  6401  03C6  00EA               	movwf	??_ir_short_action
  6402  03C7  0A6B               	incf	ir_short_action@idx,w
  6403  03C8  2BCA               	goto	u1774
  6404  03C9                     u1775:	
  6405  03C9  35EA               	lslf	??_ir_short_action,f
  6406  03CA                     u1774:	
  6407  03CA  0B89               	decfsz	9,f
  6408  03CB  2BC9               	goto	u1775
  6409  03CC  086A               	movf	??_ir_short_action,w
  6410  03CD  00EB               	movwf	ir_short_action@idx
  6411                           
  6412                           ;app_ir.c: 319: led_set_state(idx);
  6413  03CE  24A8  3180         	fcall	_led_set_state
  6414  03D0  2B85               	goto	l2818
  6415  03D1                     l489:	
  6416  03D1                     l2848:	
  6417                           
  6418                           ;app_ir.c: 323: case 0x1F:
  6419                           ;app_ir.c: 324: case 0x0D:
  6420                           ;app_ir.c: 325: case 0x15:
  6421                           ;app_ir.c: 326: if(led_get_power_state()) {
  6422  03D1  2482  3180         	fcall	_led_get_power_state
  6423  03D3  3A00               	xorlw	0
  6424  03D4  1903               	skipnz
  6425  03D5  0008               	return
  6426                           
  6427                           ;app_ir.c: 327: idx = ir_get_index(KeyValue);
  6428  03D6  0020               	movlb	0	; select bank0
  6429  03D7  0844               	movf	_KeyValue,w
  6430  03D8  2429  3180         	fcall	_ir_get_index
  6431  03DA  00EB               	movwf	ir_short_action@idx
  6432                           
  6433                           ;app_ir.c: 328: led_set_custom_bright(idx);
  6434  03DB  2483  3180         	fcall	_led_set_custom_bright
  6435  03DD  2B9B               	goto	l2826
  6436  03DE                     l2858:	
  6437  03DE  0844               	movf	_KeyValue,w
  6438                           
  6439                           ; Switch size 1, requested type "space"
  6440                           ; Number of cases is 24, Range of values is 0 to 77
  6441                           ; switch strategies available:
  6442                           ; Name         Instructions Cycles
  6443                           ; simple_byte           73    37 (average)
  6444                           ; direct_byte          162     6 (fixed)
  6445                           ; jumptable            260     6 (fixed)
  6446                           ;	Chosen strategy is simple_byte
  6447  03DF  3A00               	xorlw	0	; case 0
  6448  03E0  1903               	skipnz
  6449  03E1  2BC1               	goto	l2840
  6450  03E2  3A04               	xorlw	4	; case 4
  6451  03E3  1903               	skipnz
  6452  03E4  2BB1               	goto	l2834
  6453  03E5  3A0D               	xorlw	13	; case 9
  6454  03E6  1903               	skipnz
  6455  03E7  2B83               	goto	l2816
  6456  03E8  3A03               	xorlw	3	; case 10
  6457  03E9  1903               	skipnz
  6458  03EA  2B86               	goto	l2820
  6459  03EB  3A06               	xorlw	6	; case 12
  6460  03EC  1903               	skipnz
  6461  03ED  2BC1               	goto	l2840
  6462  03EE  3A01               	xorlw	1	; case 13
  6463  03EF  1903               	skipnz
  6464  03F0  2BD1               	goto	l2848
  6465  03F1  3A03               	xorlw	3	; case 14
  6466  03F2  1903               	skipnz
  6467  03F3  2BB1               	goto	l2834
  6468  03F4  3A01               	xorlw	1	; case 15
  6469  03F5  1903               	skipnz
  6470  03F6  2BB1               	goto	l2834
  6471  03F7  3A1E               	xorlw	30	; case 17
  6472  03F8  1903               	skipnz
  6473  03F9  2BB1               	goto	l480
  6474  03FA  3A03               	xorlw	3	; case 18
  6475  03FB  1903               	skipnz
  6476  03FC  2B9C               	goto	l2828
  6477  03FD  3A06               	xorlw	6	; case 20
  6478  03FE  1903               	skipnz
  6479  03FF  2B9C               	goto	l2828
  6480  0400  3A01               	xorlw	1	; case 21
  6481  0401  1903               	skipnz
  6482  0402  2BD1               	goto	l2848
  6483  0403  3A03               	xorlw	3	; case 22
  6484  0404  1903               	skipnz
  6485  0405  2BB1               	goto	l2834
  6486  0406  3A01               	xorlw	1	; case 23
  6487  0407  1903               	skipnz
  6488  0408  2B86               	goto	l2820
  6489  0409  3A0E               	xorlw	14	; case 25
  6490  040A  1903               	skipnz
  6491  040B  2B86               	goto	l468
  6492  040C  3A03               	xorlw	3	; case 26
  6493  040D  1903               	skipnz
  6494  040E  2BC1               	goto	l2840
  6495  040F  3A01               	xorlw	1	; case 27
  6496  0410  1903               	skipnz
  6497  0411  2B9C               	goto	l474
  6498  0412  3A07               	xorlw	7	; case 28
  6499  0413  1903               	skipnz
  6500  0414  2B86               	goto	l2820
  6501  0415  3A01               	xorlw	1	; case 29
  6502  0416  1903               	skipnz
  6503  0417  2BD1               	goto	l489
  6504  0418  3A03               	xorlw	3	; case 30
  6505  0419  1903               	skipnz
  6506  041A  2B9C               	goto	l2828
  6507  041B  3A01               	xorlw	1	; case 31
  6508  041C  1903               	skipnz
  6509  041D  2BD1               	goto	l2848
  6510  041E  3A5F               	xorlw	95	; case 64
  6511  041F  1903               	skipnz
  6512  0420  2B86               	goto	l2820
  6513  0421  3A0C               	xorlw	12	; case 76
  6514  0422  1903               	skipnz
  6515  0423  2B9C               	goto	l2828
  6516  0424  3A01               	xorlw	1	; case 77
  6517  0425  1903               	skipnz
  6518  0426  2BC1               	goto	l485
  6519  0427  2C28               	goto	l493
  6520  0428                     l493:	
  6521  0428  0008               	return
  6522  0429                     __end_of_ir_short_action:	
  6523  0429                     __ptext26:	
  6524 ;; *************** function _ir_get_index *****************
  6525 ;; Defined at:
  6526 ;;		line 39 in file "src/app_ir.c"
  6527 ;; Parameters:    Size  Location     Type
  6528 ;;  keynum          1    wreg     unsigned char 
  6529 ;; Auto vars:     Size  Location     Type
  6530 ;;  keynum          1    0[BANK0 ] unsigned char 
  6531 ;;  index           1    1[BANK0 ] unsigned char 
  6532 ;; Return value:  Size  Location     Type
  6533 ;;                  1    wreg      unsigned char 
  6534 ;; Registers used:
  6535 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  6536 ;; Tracked objects:
  6537 ;;		On entry : 1F/0
  6538 ;;		On exit  : 1F/0
  6539 ;;		Unchanged: 0/0
  6540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6542 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6544 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6545 ;;Total ram usage:        2 bytes
  6546 ;; Hardware stack levels used:    1
  6547 ;; Hardware stack levels required when called:    6
  6548 ;; This function calls:
  6549 ;;		Nothing
  6550 ;; This function is called by:
  6551 ;;		_ir_short_action
  6552 ;; This function uses a non-reentrant model
  6553 ;;
  6554                           
  6555                           
  6556                           ;psect for function _ir_get_index
  6557  0429                     _ir_get_index:	
  6558                           
  6559                           ;incstack = 0
  6560                           ; Regs used in _ir_get_index: [wreg-fsr0h+status,2+status,0]
  6561                           ;ir_get_index@keynum stored from wreg
  6562  0429  00DE               	movwf	ir_get_index@keynum
  6563                           
  6564                           ;app_ir.c: 41: uint8_t index = 0xFF;
  6565  042A  30FF               	movlw	255
  6566  042B  00DF               	movwf	ir_get_index@index
  6567                           
  6568                           ;app_ir.c: 43: switch(keynum) {
  6569  042C  2C39               	goto	l2372
  6570  042D                     l329:	
  6571  042D                     l2362:	
  6572                           
  6573                           ;app_ir.c: 45: case 0x1D:
  6574                           ;app_ir.c: 46: case 0x1B:
  6575                           ;app_ir.c: 47: case 0x11:
  6576                           ;app_ir.c: 48: case 0x4D:
  6577                           ;app_ir.c: 49: index = 0;
  6578  042D  01DF               	clrf	ir_get_index@index
  6579                           
  6580                           ;app_ir.c: 50: break;
  6581  042E  2C80               	goto	l2374
  6582  042F                     l334:	
  6583  042F                     l336:	
  6584                           
  6585                           ;app_ir.c: 52: case 0x1F:
  6586                           ;app_ir.c: 53: case 0x12:
  6587                           ;app_ir.c: 54: case 0x16:
  6588                           ;app_ir.c: 55: case 0x00:
  6589                           ;app_ir.c: 56: index = 1;
  6590  042F  01DF               	clrf	ir_get_index@index
  6591  0430  0ADF               	incf	ir_get_index@index,f
  6592                           
  6593                           ;app_ir.c: 57: break;
  6594  0431  2C80               	goto	l2374
  6595  0432                     l340:	
  6596  0432                     l2364:	
  6597                           
  6598                           ;app_ir.c: 59: case 0x0D:
  6599                           ;app_ir.c: 60: case 0x4C:
  6600                           ;app_ir.c: 61: case 0x04:
  6601                           ;app_ir.c: 62: case 0x1A:
  6602                           ;app_ir.c: 63: index = 2;
  6603  0432  3002               	movlw	2
  6604  0433  2C37               	goto	L4
  6605  0434                     l345:	
  6606                           ;app_ir.c: 64: break;
  6607                           
  6608  0434                     l2366:	
  6609                           
  6610                           ;app_ir.c: 66: case 0x15:
  6611                           ;app_ir.c: 67: case 0x1E:
  6612                           ;app_ir.c: 68: case 0x0E:
  6613                           ;app_ir.c: 69: case 0x0C:
  6614                           ;app_ir.c: 70: index = 3;
  6615  0434  3003               	movlw	3
  6616  0435  2C37               	goto	L4
  6617  0436                     l2368:	
  6618                           ;app_ir.c: 71: break;
  6619                           
  6620                           
  6621                           ;app_ir.c: 73: case 0x14:
  6622                           ;app_ir.c: 74: case 0x0F:
  6623                           ;app_ir.c: 75: index = 4;
  6624  0436  3004               	movlw	4
  6625  0437                     L4:	
  6626  0437  00DF               	movwf	ir_get_index@index
  6627                           
  6628                           ;app_ir.c: 76: break;
  6629  0438  2C80               	goto	l2374
  6630  0439                     l2372:	
  6631  0439  085E               	movf	ir_get_index@keynum,w
  6632                           
  6633                           ; Switch size 1, requested type "space"
  6634                           ; Number of cases is 23, Range of values is 0 to 77
  6635                           ; switch strategies available:
  6636                           ; Name         Instructions Cycles
  6637                           ; simple_byte           70    36 (average)
  6638                           ; direct_byte          162     6 (fixed)
  6639                           ; jumptable            260     6 (fixed)
  6640                           ;	Chosen strategy is simple_byte
  6641  043A  3A00               	xorlw	0	; case 0
  6642  043B  1903               	skipnz
  6643  043C  2C2F               	goto	l336
  6644  043D  3A04               	xorlw	4	; case 4
  6645  043E  1903               	skipnz
  6646  043F  2C32               	goto	l2364
  6647  0440  3A0E               	xorlw	14	; case 10
  6648  0441  1903               	skipnz
  6649  0442  2C34               	goto	l345
  6650  0443  3A06               	xorlw	6	; case 12
  6651  0444  1903               	skipnz
  6652  0445  2C34               	goto	l2366
  6653  0446  3A01               	xorlw	1	; case 13
  6654  0447  1903               	skipnz
  6655  0448  2C32               	goto	l2364
  6656  0449  3A03               	xorlw	3	; case 14
  6657  044A  1903               	skipnz
  6658  044B  2C34               	goto	l2366
  6659  044C  3A01               	xorlw	1	; case 15
  6660  044D  1903               	skipnz
  6661  044E  2C36               	goto	l2368
  6662  044F  3A1E               	xorlw	30	; case 17
  6663  0450  1903               	skipnz
  6664  0451  2C2D               	goto	l2362
  6665  0452  3A03               	xorlw	3	; case 18
  6666  0453  1903               	skipnz
  6667  0454  2C2F               	goto	l336
  6668  0455  3A06               	xorlw	6	; case 20
  6669  0456  1903               	skipnz
  6670  0457  2C36               	goto	l2368
  6671  0458  3A01               	xorlw	1	; case 21
  6672  0459  1903               	skipnz
  6673  045A  2C34               	goto	l2366
  6674  045B  3A03               	xorlw	3	; case 22
  6675  045C  1903               	skipnz
  6676  045D  2C2F               	goto	l336
  6677  045E  3A01               	xorlw	1	; case 23
  6678  045F  1903               	skipnz
  6679  0460  2C2F               	goto	l334
  6680  0461  3A0E               	xorlw	14	; case 25
  6681  0462  1903               	skipnz
  6682  0463  2C2D               	goto	l329
  6683  0464  3A03               	xorlw	3	; case 26
  6684  0465  1903               	skipnz
  6685  0466  2C32               	goto	l2364
  6686  0467  3A01               	xorlw	1	; case 27
  6687  0468  1903               	skipnz
  6688  0469  2C2D               	goto	l2362
  6689  046A  3A07               	xorlw	7	; case 28
  6690  046B  1903               	skipnz
  6691  046C  2C36               	goto	l2368
  6692  046D  3A01               	xorlw	1	; case 29
  6693  046E  1903               	skipnz
  6694  046F  2C2D               	goto	l2362
  6695  0470  3A03               	xorlw	3	; case 30
  6696  0471  1903               	skipnz
  6697  0472  2C34               	goto	l2366
  6698  0473  3A01               	xorlw	1	; case 31
  6699  0474  1903               	skipnz
  6700  0475  2C2F               	goto	l336
  6701  0476  3A5F               	xorlw	95	; case 64
  6702  0477  1903               	skipnz
  6703  0478  2C32               	goto	l340
  6704  0479  3A0C               	xorlw	12	; case 76
  6705  047A  1903               	skipnz
  6706  047B  2C32               	goto	l2364
  6707  047C  3A01               	xorlw	1	; case 77
  6708  047D  1903               	skipnz
  6709  047E  2C2D               	goto	l2362
  6710  047F  2C80               	goto	l2374
  6711  0480                     l2374:	
  6712                           
  6713                           ;app_ir.c: 80: return index;
  6714  0480  085F               	movf	ir_get_index@index,w
  6715  0481  0008               	return
  6716  0482                     __end_of_ir_get_index:	
  6717  0482                     __ptext24:	
  6718 ;; *************** function _led_get_power_state *****************
  6719 ;; Defined at:
  6720 ;;		line 127 in file "src/app_led.c"
  6721 ;; Parameters:    Size  Location     Type
  6722 ;;		None
  6723 ;; Auto vars:     Size  Location     Type
  6724 ;;		None
  6725 ;; Return value:  Size  Location     Type
  6726 ;;                  1    wreg      unsigned char 
  6727 ;; Registers used:
  6728 ;;		wreg, status,2, status,0
  6729 ;; Tracked objects:
  6730 ;;		On entry : 1F/0
  6731 ;;		On exit  : 1F/1
  6732 ;;		Unchanged: 0/0
  6733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6738 ;;Total ram usage:        0 bytes
  6739 ;; Hardware stack levels used:    1
  6740 ;; Hardware stack levels required when called:    6
  6741 ;; This function calls:
  6742 ;;		Nothing
  6743 ;; This function is called by:
  6744 ;;		_ir_short_action
  6745 ;; This function uses a non-reentrant model
  6746 ;;
  6747                           
  6748                           
  6749                           ;psect for function _led_get_power_state
  6750  0482                     _led_get_power_state:	
  6751                           
  6752                           ;app_led.c: 129: return m_led_para.mOn;
  6753                           
  6754                           ;incstack = 0
  6755                           ; Regs used in _led_get_power_state: [wreg+status,2+status,0]
  6756  0482  2F53               	ljmp	PL32	;call to abstracted procedure
  6757  0483                     __end_of_led_get_power_state:	
  6758  0483                     __ptext19:	
  6759 ;; *************** function _led_set_custom_bright *****************
  6760 ;; Defined at:
  6761 ;;		line 154 in file "src/app_led.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  chn             1    wreg     unsigned char 
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;  chn             1    6[BANK0 ] unsigned char 
  6766 ;;  i               1    7[BANK0 ] unsigned char 
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  1    wreg      void 
  6769 ;; Registers used:
  6770 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6771 ;; Tracked objects:
  6772 ;;		On entry : 1F/0
  6773 ;;		On exit  : 1F/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6777 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6778 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6779 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6780 ;;Total ram usage:        5 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; Hardware stack levels required when called:    7
  6783 ;; This function calls:
  6784 ;;		___bmul
  6785 ;; This function is called by:
  6786 ;;		_ir_short_action
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           
  6791                           ;psect for function _led_set_custom_bright
  6792  0483                     _led_set_custom_bright:	
  6793                           
  6794                           ;incstack = 0
  6795                           ; Regs used in _led_set_custom_bright: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6796                           ;led_set_custom_bright@chn stored from wreg
  6797  0483  00E4               	movwf	led_set_custom_bright@chn
  6798                           
  6799                           ;app_led.c: 156: for(uint8_t i = 0; i < 5; i++) {
  6800  0484  01E5               	clrf	led_set_custom_bright@i
  6801  0485                     l2464:	
  6802                           
  6803                           ;app_led.c: 157: m_led_para.mBright[i] = m_led_para.mCustomBirght[chn][i];
  6804  0485  0865               	movf	led_set_custom_bright@i,w
  6805  0486  00E1               	movwf	??_led_set_custom_bright
  6806  0487  30AB               	movlw	(low ((_m_led_para| 0+11)))& (0+255)
  6807  0488  35E1               	lslf	??_led_set_custom_bright,f
  6808  0489  0761               	addwf	??_led_set_custom_bright,w
  6809  048A  00E2               	movwf	??_led_set_custom_bright+1
  6810  048B  300A               	movlw	10
  6811  048C  00DE               	movwf	___bmul@multiplicand
  6812  048D  0864               	movf	led_set_custom_bright@chn,w
  6813  048E  255B  3180         	fcall	___bmul
  6814  0490  0762               	addwf	??_led_set_custom_bright+1,w
  6815  0491  00E3               	movwf	??_led_set_custom_bright+2
  6816  0492  0086               	movwf	6
  6817  0493  0187               	clrf	7
  6818  0494  3565               	lslf	led_set_custom_bright@i,w
  6819  0495  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
  6820  0496  2606  3180         	fcall	PL4	;call to abstracted procedure
  6821                           
  6822                           ;app_led.c: 158: m_led_run_para.mTargetBright[i] = m_led_para.mBright[i];
  6823  0498  3565               	lslf	led_set_custom_bright@i,w
  6824  0499  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
  6825  049A  0086               	movwf	6
  6826  049B  3565               	lslf	led_set_custom_bright@i,w
  6827  049C  3E2B               	addlw	(low ((_m_led_run_para| 0+11)))& (0+255)
  6828  049D  0084               	movwf	4
  6829  049E  3F40               	moviw [0]fsr1
  6830  049F  3F80               	movwi [0]fsr0
  6831  04A0  3F41               	moviw [1]fsr1
  6832  04A1  3F81               	movwi [1]fsr0
  6833  04A2  3005               	movlw	5
  6834  04A3  0AE5               	incf	led_set_custom_bright@i,f
  6835  04A4  0265               	subwf	led_set_custom_bright@i,w
  6836  04A5  1803               	btfsc	3,0
  6837  04A6  0008               	return
  6838  04A7  2C85               	goto	l2464
  6839  04A8                     __end_of_led_set_custom_bright:	
  6840  04A8                     __ptext14:	
  6841 ;; *************** function _led_set_state *****************
  6842 ;; Defined at:
  6843 ;;		line 111 in file "src/app_led.c"
  6844 ;; Parameters:    Size  Location     Type
  6845 ;;  idx             1    wreg     unsigned char 
  6846 ;; Auto vars:     Size  Location     Type
  6847 ;;  idx             1    1[BANK0 ] unsigned char 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  1    wreg      void 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0
  6852 ;; Tracked objects:
  6853 ;;		On entry : 1F/0
  6854 ;;		On exit  : 1F/1
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6858 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6859 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6861 ;;Total ram usage:        2 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; Hardware stack levels required when called:    6
  6864 ;; This function calls:
  6865 ;;		Nothing
  6866 ;; This function is called by:
  6867 ;;		_ir_short_action
  6868 ;; This function uses a non-reentrant model
  6869 ;;
  6870                           
  6871                           
  6872                           ;psect for function _led_set_state
  6873  04A8                     _led_set_state:	
  6874                           
  6875                           ;incstack = 0
  6876                           ; Regs used in _led_set_state: [wreg+status,2+status,0]
  6877                           ;led_set_state@idx stored from wreg
  6878  04A8  00DF               	movwf	led_set_state@idx
  6879                           
  6880                           ;app_led.c: 113: m_led_para.mState = idx;
  6881  04A9  00DE               	movwf	??_led_set_state
  6882  04AA  0DDE               	rlf	??_led_set_state,f
  6883  04AB  0021               	movlb	1	; select bank1
  6884  04AC  0820               	movf	_m_led_para^(0+128),w
  6885  04AD  0020               	movlb	0	; select bank0
  6886  04AE  065E               	xorwf	??_led_set_state,w
  6887  04AF  3901               	andlw	-255
  6888  04B0  065E               	xorwf	??_led_set_state,w
  6889  04B1  0021               	movlb	1	; select bank1
  6890  04B2  00A0               	movwf	_m_led_para^(0+128)
  6891  04B3  0008               	return
  6892  04B4                     __end_of_led_set_state:	
  6893  04B4                     __ptext13:	
  6894 ;; *************** function _led_setcolour *****************
  6895 ;; Defined at:
  6896 ;;		line 135 in file "src/app_led.c"
  6897 ;; Parameters:    Size  Location     Type
  6898 ;;  chn             1    wreg     unsigned char 
  6899 ;;  max             2    0[BANK0 ] unsigned int 
  6900 ;; Auto vars:     Size  Location     Type
  6901 ;;  chn             1    2[BANK0 ] unsigned char 
  6902 ;;  i               1    3[BANK0 ] unsigned char 
  6903 ;; Return value:  Size  Location     Type
  6904 ;;                  1    wreg      void 
  6905 ;; Registers used:
  6906 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0
  6907 ;; Tracked objects:
  6908 ;;		On entry : 1F/0
  6909 ;;		On exit  : 1F/0
  6910 ;;		Unchanged: 0/0
  6911 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6912 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6913 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6915 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6916 ;;Total ram usage:        4 bytes
  6917 ;; Hardware stack levels used:    1
  6918 ;; Hardware stack levels required when called:    6
  6919 ;; This function calls:
  6920 ;;		Nothing
  6921 ;; This function is called by:
  6922 ;;		_ir_short_action
  6923 ;; This function uses a non-reentrant model
  6924 ;;
  6925                           
  6926                           
  6927                           ;psect for function _led_setcolour
  6928  04B4                     _led_setcolour:	
  6929                           
  6930                           ;incstack = 0
  6931                           ; Regs used in _led_setcolour: [wreg-fsr1h+status,2+status,0]
  6932                           ;led_setcolour@chn stored from wreg
  6933  04B4  00E0               	movwf	led_setcolour@chn
  6934                           
  6935                           ;app_led.c: 137: for(uint8_t i = 0; i < 5; i++) {
  6936  04B5  01E1               	clrf	led_setcolour@i
  6937  04B6                     l2444:	
  6938                           
  6939                           ;app_led.c: 138: m_led_para.mBright[i] = 0;
  6940  04B6  3561               	lslf	led_setcolour@i,w
  6941  04B7  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
  6942  04B8  2640  3180         	fcall	PL30	;call to abstracted procedure
  6943                           
  6944                           ;app_led.c: 139: m_led_run_para.mTargetBright[i] = 0;
  6945  04BA  3561               	lslf	led_setcolour@i,w
  6946  04BB  3E2B               	addlw	(low ((_m_led_run_para| 0+11)))& (0+255)
  6947  04BC  0086               	movwf	6
  6948  04BD  3000               	movlw	0
  6949  04BE  3FC0               	movwi [0]fsr1
  6950  04BF  3FC1               	movwi [1]fsr1
  6951  04C0  3005               	movlw	5
  6952  04C1  0AE1               	incf	led_setcolour@i,f
  6953  04C2  0261               	subwf	led_setcolour@i,w
  6954  04C3  1C03               	skipc
  6955  04C4  2CB6               	goto	l2444
  6956                           
  6957                           ;app_led.c: 140: }
  6958                           ;app_led.c: 141: m_led_para.mBright[chn] = max;
  6959  04C5  3560               	lslf	led_setcolour@chn,w
  6960  04C6  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
  6961  04C7  0086               	movwf	6
  6962  04C8  085E               	movf	led_setcolour@max,w
  6963  04C9  3FC0               	movwi [0]fsr1
  6964  04CA  085F               	movf	led_setcolour@max+1,w
  6965  04CB  3FC1               	movwi [1]fsr1
  6966                           
  6967                           ;app_led.c: 142: m_led_run_para.mTargetBright[chn] = m_led_para.mBright[chn];
  6968  04CC  3560               	lslf	led_setcolour@chn,w
  6969  04CD  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
  6970  04CE  0086               	movwf	6
  6971  04CF  3560               	lslf	led_setcolour@chn,w
  6972  04D0  3E2B               	addlw	(low ((_m_led_run_para| 0+11)))& (0+255)
  6973  04D1  2606               	fcall	PL4	;call to abstracted procedure
  6974  04D2  0008               	return
  6975  04D3                     __end_of_led_setcolour:	
  6976  04D3                     __ptext12:	
  6977 ;; *************** function _led_toggle *****************
  6978 ;; Defined at:
  6979 ;;		line 131 in file "src/app_led.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;		None
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;		None
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		status,0
  6988 ;; Tracked objects:
  6989 ;;		On entry : 1F/0
  6990 ;;		On exit  : 1F/1
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6997 ;;Total ram usage:        0 bytes
  6998 ;; Hardware stack levels used:    1
  6999 ;; Hardware stack levels required when called:    6
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_ir_short_action
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           
  7008                           ;psect for function _led_toggle
  7009  04D3                     _led_toggle:	
  7010                           
  7011                           ;app_led.c: 133: m_led_para.mOn = !m_led_para.mOn;
  7012                           
  7013                           ;incstack = 0
  7014                           ; Regs used in _led_toggle: [status,0]
  7015  04D3  1003               	clrc
  7016  04D4  0021               	movlb	1	; select bank1
  7017  04D5  1C20               	btfss	_m_led_para^(0+128),0
  7018  04D6  1403               	setc
  7019  04D7  1C03               	btfss	3,0
  7020  04D8  2CDC               	goto	u1240
  7021  04D9  0021               	movlb	1	; select bank1
  7022  04DA  1420               	bsf	_m_led_para^(0+128),0
  7023  04DB  0008               	return
  7024  04DC                     u1240:	
  7025  04DC  0021               	movlb	1	; select bank1
  7026  04DD  1020               	bcf	_m_led_para^(0+128),0
  7027  04DE  0008               	return
  7028  04DF                     __end_of_led_toggle:	
  7029  04DF                     __ptext1:	
  7030 ;; *************** function _led_para_init *****************
  7031 ;; Defined at:
  7032 ;;		line 45 in file "src/app_led.c"
  7033 ;; Parameters:    Size  Location     Type
  7034 ;;		None
  7035 ;; Auto vars:     Size  Location     Type
  7036 ;;  j               1   16[BANK0 ] unsigned char 
  7037 ;;  i               1   14[BANK0 ] unsigned char 
  7038 ;;  i               1   15[BANK0 ] unsigned char 
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      void 
  7041 ;; Registers used:
  7042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7043 ;; Tracked objects:
  7044 ;;		On entry : 1F/1C
  7045 ;;		On exit  : 1F/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7049 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7050 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7051 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7052 ;;Total ram usage:       10 bytes
  7053 ;; Hardware stack levels used:    1
  7054 ;; Hardware stack levels required when called:    8
  7055 ;; This function calls:
  7056 ;;		___bmul
  7057 ;;		_eeprom_read_buffer
  7058 ;; This function is called by:
  7059 ;;		_main
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           
  7064                           ;psect for function _led_para_init
  7065  04DF                     _led_para_init:	
  7066                           
  7067                           ;app_led.c: 47: eeprom_read_buffer(0x7010,(uint8_t *)&m_led_para,sizeof(m_led_para));
  7068                           
  7069                           ;incstack = 0
  7070                           ; Regs used in _led_para_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7071  04DF  3010               	movlw	16
  7072  04E0  0020               	movlb	0	; select bank0
  7073  04E1  00E0               	movwf	eeprom_read_buffer@addr
  7074  04E2  3070               	movlw	112
  7075  04E3  00E1               	movwf	eeprom_read_buffer@addr+1
  7076  04E4  30A0               	movlw	(low (_m_led_para| 0))& (0+255)
  7077  04E5  00E2               	movwf	eeprom_read_buffer@pbuf
  7078  04E6  3033               	movlw	51
  7079  04E7  00E3               	movwf	eeprom_read_buffer@len
  7080  04E8  2567  3180         	fcall	_eeprom_read_buffer
  7081                           
  7082                           ;app_led.c: 49: if((m_led_para.mState != 0x01) && (m_led_para.mState != 0x02) && (m_led_
      +                          para.mState != 0x04) && (m_led_para.mState != 0x08)) {
  7083  04EA  0021               	movlb	1	; select bank1
  7084  04EB  0C20               	rrf	_m_led_para^(0+128),w
  7085  04EC  397F               	andlw	127
  7086  04ED  3A01               	xorlw	1
  7087  04EE  1903               	skipnz
  7088  04EF  2D01               	goto	l2948
  7089  04F0  0C20               	rrf	_m_led_para^(0+128),w
  7090  04F1  397F               	andlw	127
  7091  04F2  3A02               	xorlw	2
  7092  04F3  1903               	skipnz
  7093  04F4  2D01               	goto	l2948
  7094  04F5  0C20               	rrf	_m_led_para^(0+128),w
  7095  04F6  397F               	andlw	127
  7096  04F7  3A04               	xorlw	4
  7097  04F8  1903               	skipnz
  7098  04F9  2D01               	goto	l2948
  7099  04FA  0C20               	rrf	_m_led_para^(0+128),w
  7100  04FB  397F               	andlw	127
  7101  04FC  3A08               	xorlw	8
  7102  04FD  1903               	skipnz
  7103  04FE  2D01               	goto	l2948
  7104                           
  7105                           ;app_led.c: 50: m_led_para.mState = 0;
  7106  04FF  3001               	movlw	-255
  7107  0500  05A0               	andwf	_m_led_para^(0+128),f
  7108  0501                     l2948:	
  7109                           
  7110                           ;app_led.c: 51: }
  7111                           ;app_led.c: 53: for(uint8_t i = 0; i < 5; i++) {
  7112  0501  0020               	movlb	0	; select bank0
  7113  0502  01ED               	clrf	led_para_init@i
  7114  0503                     l2954:	
  7115                           
  7116                           ;app_led.c: 54: if(m_led_para.mBright[i] > max_bright[i]) {
  7117  0503  356D               	lslf	led_para_init@i,w
  7118  0504  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
  7119  0505  0086               	movwf	6
  7120  0506  0187               	clrf	7
  7121  0507  3F40               	moviw [0]fsr1
  7122  0508  00E5               	movwf	??_led_para_init
  7123  0509  3F41               	moviw [1]fsr1
  7124  050A  00E6               	movwf	??_led_para_init+1
  7125  050B  356D               	lslf	led_para_init@i,w
  7126  050C  3E45               	addlw	(low (app_led@max_bright| 0))& (0+255)
  7127  050D  0086               	movwf	6
  7128  050E  3F40               	moviw [0]fsr1
  7129  050F  00E7               	movwf	??_led_para_init+2
  7130  0510  3F41               	moviw [1]fsr1
  7131  0511  00E8               	movwf	??_led_para_init+3
  7132  0512  0866               	movf	??_led_para_init+1,w
  7133  0513  0268               	subwf	??_led_para_init+3,w
  7134  0514  1D03               	skipz
  7135  0515  2D18               	goto	u1885
  7136  0516  0865               	movf	??_led_para_init,w
  7137  0517  0267               	subwf	??_led_para_init+2,w
  7138  0518                     u1885:	
  7139  0518  1803               	skipnc
  7140  0519  2D22               	goto	l2958
  7141                           
  7142                           ;app_led.c: 55: m_led_para.mBright[i] = max_bright[i];
  7143  051A  356D               	lslf	led_para_init@i,w
  7144  051B  3E45               	addlw	(low (app_led@max_bright| 0))& (0+255)
  7145  051C  0086               	movwf	6
  7146  051D  0187               	clrf	7
  7147  051E  356D               	lslf	led_para_init@i,w
  7148  051F  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
  7149  0520  2606  3180         	fcall	PL4	;call to abstracted procedure
  7150  0522                     l2958:	
  7151  0522  3005               	movlw	5
  7152  0523  0AED               	incf	led_para_init@i,f
  7153  0524  026D               	subwf	led_para_init@i,w
  7154  0525  1C03               	skipc
  7155  0526  2D03               	goto	l2954
  7156                           
  7157                           ;app_led.c: 56: }
  7158                           ;app_led.c: 57: }
  7159                           ;app_led.c: 59: for(uint8_t i = 0; i < 4; i++) {
  7160  0527  01EC               	clrf	led_para_init@i_1144
  7161  0528                     l2968:	
  7162                           
  7163                           ;app_led.c: 60: for(uint8_t j = 0; j < 5; j++) {
  7164  0528  01EE               	clrf	led_para_init@j
  7165  0529                     l2974:	
  7166                           
  7167                           ;app_led.c: 61: if(m_led_para.mCustomBirght[i][j] > max_bright[j]) {
  7168  0529  2618  3180         	fcall	PL10	;call to abstracted procedure
  7169  052B  255B  3180         	fcall	___bmul
  7170  052D  0766               	addwf	??_led_para_init+1,w
  7171  052E  00E7               	movwf	??_led_para_init+2
  7172  052F  0086               	movwf	6
  7173  0530  0187               	clrf	7
  7174  0531  3F40               	moviw [0]fsr1
  7175  0532  00E8               	movwf	??_led_para_init+3
  7176  0533  3F41               	moviw [1]fsr1
  7177  0534  00E9               	movwf	??_led_para_init+4
  7178  0535  356E               	lslf	led_para_init@j,w
  7179  0536  3E45               	addlw	(low (app_led@max_bright| 0))& (0+255)
  7180  0537  0086               	movwf	6
  7181  0538  3F40               	moviw [0]fsr1
  7182  0539  00EA               	movwf	??_led_para_init+5
  7183  053A  3F41               	moviw [1]fsr1
  7184  053B  00EB               	movwf	??_led_para_init+6
  7185  053C  0869               	movf	??_led_para_init+4,w
  7186  053D  026B               	subwf	??_led_para_init+6,w
  7187  053E  1D03               	skipz
  7188  053F  2D42               	goto	u1905
  7189  0540  0868               	movf	??_led_para_init+3,w
  7190  0541  026A               	subwf	??_led_para_init+5,w
  7191  0542                     u1905:	
  7192  0542  1803               	skipnc
  7193  0543  2D50               	goto	l2978
  7194                           
  7195                           ;app_led.c: 62: m_led_para.mCustomBirght[i][j] = max_bright[j];
  7196  0544  356E               	lslf	led_para_init@j,w
  7197  0545  3E45               	addlw	(low (app_led@max_bright| 0))& (0+255)
  7198  0546  0086               	movwf	6
  7199  0547  0187               	clrf	7
  7200  0548  2618  3180         	fcall	PL10	;call to abstracted procedure
  7201  054A  255B  3180         	fcall	___bmul
  7202  054C  0766               	addwf	??_led_para_init+1,w
  7203  054D  00E7               	movwf	??_led_para_init+2
  7204  054E  2606  3180         	fcall	PL4	;call to abstracted procedure
  7205  0550                     l2978:	
  7206  0550  3005               	movlw	5
  7207  0551  0AEE               	incf	led_para_init@j,f
  7208  0552  026E               	subwf	led_para_init@j,w
  7209  0553  1C03               	skipc
  7210  0554  2D29               	goto	l2974
  7211  0555  3004               	movlw	4
  7212  0556  0AEC               	incf	led_para_init@i_1144,f
  7213  0557  026C               	subwf	led_para_init@i_1144,w
  7214  0558  1803               	btfsc	3,0
  7215  0559  0008               	return
  7216  055A  2D28               	goto	l2968
  7217  055B                     __end_of_led_para_init:	
  7218  055B                     __ptext20:	
  7219 ;; *************** function ___bmul *****************
  7220 ;; Defined at:
  7221 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v1.44\sources\common\Umul8.c"
  7222 ;; Parameters:    Size  Location     Type
  7223 ;;  multiplier      1    wreg     unsigned char 
  7224 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  7225 ;; Auto vars:     Size  Location     Type
  7226 ;;  multiplier      1    2[BANK0 ] unsigned char 
  7227 ;;  product         1    1[BANK0 ] unsigned char 
  7228 ;; Return value:  Size  Location     Type
  7229 ;;                  1    wreg      unsigned char 
  7230 ;; Registers used:
  7231 ;;		wreg, status,2, status,0
  7232 ;; Tracked objects:
  7233 ;;		On entry : 1F/0
  7234 ;;		On exit  : 1F/0
  7235 ;;		Unchanged: 0/0
  7236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7237 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7238 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7240 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7241 ;;Total ram usage:        3 bytes
  7242 ;; Hardware stack levels used:    1
  7243 ;; Hardware stack levels required when called:    6
  7244 ;; This function calls:
  7245 ;;		Nothing
  7246 ;; This function is called by:
  7247 ;;		_led_para_init
  7248 ;;		_led_set_custom_bright
  7249 ;;		_led_set_custom
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           
  7254                           ;psect for function ___bmul
  7255  055B                     ___bmul:	
  7256                           
  7257                           ;incstack = 0
  7258                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  7259                           ;___bmul@multiplier stored from wreg
  7260  055B  00E0               	movwf	___bmul@multiplier
  7261  055C  01DF               	clrf	___bmul@product
  7262  055D                     l2226:	
  7263  055D  085E               	movf	___bmul@multiplicand,w
  7264  055E  1860               	btfsc	___bmul@multiplier,0
  7265  055F  07DF               	addwf	___bmul@product,f
  7266  0560  35DE               	lslf	___bmul@multiplicand,f
  7267  0561  36E0               	lsrf	___bmul@multiplier,f
  7268  0562  0860               	movf	___bmul@multiplier,w
  7269  0563  1D03               	btfss	3,2
  7270  0564  2D5D               	goto	l2226
  7271  0565  085F               	movf	___bmul@product,w
  7272  0566  0008               	return
  7273  0567                     __end_of___bmul:	
  7274  0567                     __ptext2:	
  7275 ;; *************** function _eeprom_read_buffer *****************
  7276 ;; Defined at:
  7277 ;;		line 39 in file "src/drv_eeprom.c"
  7278 ;; Parameters:    Size  Location     Type
  7279 ;;  addr            2    2[BANK0 ] unsigned int 
  7280 ;;  pbuf            1    4[BANK0 ] PTR unsigned char 
  7281 ;;		 -> m_led_para(51), 
  7282 ;;  len             1    5[BANK0 ] unsigned char 
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  i               1    6[BANK0 ] unsigned char 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      void 
  7287 ;; Registers used:
  7288 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 1F/0
  7291 ;;		On exit  : 1F/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7294 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7295 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7297 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7298 ;;Total ram usage:        5 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    7
  7301 ;; This function calls:
  7302 ;;		_eeprom_read_byte
  7303 ;; This function is called by:
  7304 ;;		_led_para_init
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           
  7309                           ;psect for function _eeprom_read_buffer
  7310  0567                     _eeprom_read_buffer:	
  7311                           
  7312                           ;drv_eeprom.c: 41: for ( uint8_t i = len; i != 0; i-- ) {
  7313                           
  7314                           ;incstack = 0
  7315                           ; Regs used in _eeprom_read_buffer: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7316  0567  0863               	movf	eeprom_read_buffer@len,w
  7317  0568  00E4               	movwf	eeprom_read_buffer@i
  7318  0569                     l2862:	
  7319  0569  0864               	movf	eeprom_read_buffer@i,w
  7320  056A  1903               	btfsc	3,2
  7321  056B  0008               	return
  7322                           
  7323                           ;drv_eeprom.c: 42: *pbuf++ = eeprom_read_byte(addr++);
  7324  056C  0862               	movf	eeprom_read_buffer@pbuf,w
  7325  056D  0086               	movwf	6
  7326  056E  0187               	clrf	7
  7327  056F  0861               	movf	eeprom_read_buffer@addr+1,w
  7328  0570  00DF               	movwf	eeprom_read_byte@addr+1
  7329  0571  0860               	movf	eeprom_read_buffer@addr,w
  7330  0572  00DE               	movwf	eeprom_read_byte@addr
  7331  0573  257D  3180         	fcall	_eeprom_read_byte
  7332  0575  0081               	movwf	1
  7333  0576  0020               	movlb	0	; select bank0
  7334  0577  0AE0               	incf	eeprom_read_buffer@addr,f
  7335  0578  1903               	skipnz
  7336  0579  0AE1               	incf	eeprom_read_buffer@addr+1,f
  7337  057A  0AE2               	incf	eeprom_read_buffer@pbuf,f
  7338  057B  03E4               	decf	eeprom_read_buffer@i,f
  7339  057C  2D69               	goto	l2862
  7340  057D                     __end_of_eeprom_read_buffer:	
  7341  057D                     __ptext3:	
  7342 ;; *************** function _eeprom_read_byte *****************
  7343 ;; Defined at:
  7344 ;;		line 22 in file "src/drv_eeprom.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  addr            2    0[BANK0 ] unsigned int 
  7347 ;; Auto vars:     Size  Location     Type
  7348 ;;		None
  7349 ;; Return value:  Size  Location     Type
  7350 ;;                  1    wreg      unsigned char 
  7351 ;; Registers used:
  7352 ;;		wreg
  7353 ;; Tracked objects:
  7354 ;;		On entry : 1F/0
  7355 ;;		On exit  : 1F/11
  7356 ;;		Unchanged: 0/0
  7357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7358 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7361 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7362 ;;Total ram usage:        2 bytes
  7363 ;; Hardware stack levels used:    1
  7364 ;; Hardware stack levels required when called:    6
  7365 ;; This function calls:
  7366 ;;		Nothing
  7367 ;; This function is called by:
  7368 ;;		_eeprom_read_buffer
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           
  7373                           ;psect for function _eeprom_read_byte
  7374  057D                     _eeprom_read_byte:	
  7375                           
  7376                           ;drv_eeprom.c: 24: NVMADRH = addr >> 8;
  7377                           
  7378                           ;incstack = 0
  7379                           ; Regs used in _eeprom_read_byte: [wreg]
  7380  057D  085F               	movf	eeprom_read_byte@addr+1,w
  7381  057E  0031               	movlb	17	; select bank17
  7382  057F  0092               	movwf	18	;volatile
  7383                           
  7384                           ;drv_eeprom.c: 25: NVMADRL = addr & 0xFF;
  7385  0580  0020               	movlb	0	; select bank0
  7386  0581  085E               	movf	eeprom_read_byte@addr,w
  7387  0582  0031               	movlb	17	; select bank17
  7388  0583  0091               	movwf	17	;volatile
  7389                           
  7390                           ;drv_eeprom.c: 26: NVMCON1bits.NVMREGS = 1;
  7391  0584  1715               	bsf	21,6	;volsfr
  7392                           
  7393                           ;drv_eeprom.c: 27: NVMCON1bits.RD = 1;
  7394  0585  1415               	bsf	21,0	;volsfr
  7395                           
  7396                           ;drv_eeprom.c: 28: __nop();
  7397  0586  0000               	nop
  7398                           
  7399                           ;drv_eeprom.c: 29: __nop();
  7400  0587  0000               	nop
  7401                           
  7402                           ;drv_eeprom.c: 31: return NVMDATL;
  7403  0588  0031               	movlb	17	; select bank17
  7404  0589  0813               	movf	19,w	;volatile
  7405  058A  0008               	return
  7406  058B                     __end_of_eeprom_read_byte:	
  7407  058B                     __ptext25:	
  7408 ;; *************** function _led_clear_state *****************
  7409 ;; Defined at:
  7410 ;;		line 115 in file "src/app_led.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;		None
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;		None
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  1    wreg      void 
  7417 ;; Registers used:
  7418 ;;		wreg, status,2, status,0
  7419 ;; Tracked objects:
  7420 ;;		On entry : 1F/0
  7421 ;;		On exit  : 1F/1
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7427 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7428 ;;Total ram usage:        0 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; Hardware stack levels required when called:    6
  7431 ;; This function calls:
  7432 ;;		Nothing
  7433 ;; This function is called by:
  7434 ;;		_ir_short_action
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           
  7439                           ;psect for function _led_clear_state
  7440  058B                     _led_clear_state:	
  7441  058B                     l2454:	
  7442                           ;incstack = 0
  7443                           ; Regs used in _led_clear_state: [wreg+status,2+status,0]
  7444                           
  7445                           
  7446                           ;app_led.c: 117: m_led_para.mState = 0;
  7447  058B  3001               	movlw	-255
  7448  058C  0021               	movlb	1	; select bank1
  7449  058D  05A0               	andwf	_m_led_para^(0+128),f
  7450  058E  0008               	return
  7451  058F                     __end_of_led_clear_state:	
  7452  058F                     __ptext17:	
  7453 ;; *************** function _led_set_decrease_bright *****************
  7454 ;; Defined at:
  7455 ;;		line 149 in file "src/app_led.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  chn             1    wreg     unsigned char 
  7458 ;;  step            1    8[BANK0 ] unsigned char 
  7459 ;;  min             2    9[BANK0 ] unsigned int 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;  chn             1   11[BANK0 ] unsigned char 
  7462 ;; Return value:  Size  Location     Type
  7463 ;;                  1    wreg      void 
  7464 ;; Registers used:
  7465 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7466 ;; Tracked objects:
  7467 ;;		On entry : 1F/0
  7468 ;;		On exit  : 1F/0
  7469 ;;		Unchanged: 0/0
  7470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7471 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7472 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7474 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7475 ;;Total ram usage:        4 bytes
  7476 ;; Hardware stack levels used:    1
  7477 ;; Hardware stack levels required when called:    7
  7478 ;; This function calls:
  7479 ;;		_util_decrease
  7480 ;; This function is called by:
  7481 ;;		_ir_short_action
  7482 ;; This function uses a non-reentrant model
  7483 ;;
  7484                           
  7485                           
  7486                           ;psect for function _led_set_decrease_bright
  7487  058F                     _led_set_decrease_bright:	
  7488                           
  7489                           ;incstack = 0
  7490                           ; Regs used in _led_set_decrease_bright: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7491                           ;led_set_decrease_bright@chn stored from wreg
  7492  058F  00E9               	movwf	led_set_decrease_bright@chn
  7493                           
  7494                           ;app_led.c: 151: util_decrease(&m_led_para.mBright[chn],step,min);
  7495  0590  0866               	movf	led_set_decrease_bright@step,w
  7496  0591  00DE               	movwf	util_decrease@step
  7497  0592  0868               	movf	led_set_decrease_bright@min+1,w
  7498  0593  00E0               	movwf	util_decrease@min+1
  7499  0594  0867               	movf	led_set_decrease_bright@min,w
  7500  0595  00DF               	movwf	util_decrease@min
  7501  0596  3569               	lslf	led_set_decrease_bright@chn,w
  7502  0597  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
  7503  0598  25A2  3180         	fcall	_util_decrease
  7504                           
  7505                           ;app_led.c: 152: m_led_run_para.mTargetBright[chn] = m_led_para.mBright[chn];
  7506  059A  3569               	lslf	led_set_decrease_bright@chn,w
  7507  059B  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
  7508  059C  0086               	movwf	6
  7509  059D  0187               	clrf	7
  7510  059E  3569               	lslf	led_set_decrease_bright@chn,w
  7511  059F  3E2B               	addlw	(low ((_m_led_run_para| 0+11)))& (0+255)
  7512  05A0  2606               	fcall	PL4	;call to abstracted procedure
  7513  05A1  0008               	return
  7514  05A2                     __end_of_led_set_decrease_bright:	
  7515  05A2                     __ptext18:	
  7516 ;; *************** function _util_decrease *****************
  7517 ;; Defined at:
  7518 ;;		line 11 in file "src/app_util.c"
  7519 ;; Parameters:    Size  Location     Type
  7520 ;;  src             1    wreg     PTR unsigned int 
  7521 ;;		 -> m_led_para.mBright(10), m_led_para(51), 
  7522 ;;  step            1    0[BANK0 ] unsigned char 
  7523 ;;  min             2    1[BANK0 ] unsigned int 
  7524 ;; Auto vars:     Size  Location     Type
  7525 ;;  src             1    7[BANK0 ] PTR unsigned int 
  7526 ;;		 -> m_led_para.mBright(10), m_led_para(51), 
  7527 ;; Return value:  Size  Location     Type
  7528 ;;                  1    wreg      void 
  7529 ;; Registers used:
  7530 ;;		wreg, fsr1l, fsr1h
  7531 ;; Tracked objects:
  7532 ;;		On entry : 1F/0
  7533 ;;		On exit  : 1F/0
  7534 ;;		Unchanged: 0/0
  7535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7536 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7538 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7539 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7540 ;;Total ram usage:        8 bytes
  7541 ;; Hardware stack levels used:    1
  7542 ;; Hardware stack levels required when called:    6
  7543 ;; This function calls:
  7544 ;;		Nothing
  7545 ;; This function is called by:
  7546 ;;		_led_set_decrease_bright
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           
  7551                           ;psect for function _util_decrease
  7552  05A2                     _util_decrease:	
  7553                           
  7554                           ;incstack = 0
  7555                           ; Regs used in _util_decrease: [wregfsr1]
  7556                           ;util_decrease@src stored from wreg
  7557  05A2  00E5               	movwf	util_decrease@src
  7558                           
  7559                           ;app_util.c: 13: if((*src) > min + step) {
  7560  05A3  0086               	movwf	6
  7561  05A4  0187               	clrf	7
  7562  05A5  3F40               	moviw [0]fsr1
  7563  05A6  00E1               	movwf	??_util_decrease
  7564  05A7  3F41               	moviw [1]fsr1
  7565  05A8  00E2               	movwf	??_util_decrease+1
  7566  05A9  085E               	movf	util_decrease@step,w
  7567  05AA  075F               	addwf	util_decrease@min,w
  7568  05AB  00E3               	movwf	??_util_decrease+2
  7569  05AC  0860               	movf	util_decrease@min+1,w
  7570  05AD  1803               	skipnc
  7571  05AE  0A60               	incf	util_decrease@min+1,w
  7572  05AF  00E4               	movwf	??_util_decrease+3
  7573  05B0  0862               	movf	??_util_decrease+1,w
  7574  05B1  0264               	subwf	??_util_decrease+3,w
  7575  05B2  1D03               	skipz
  7576  05B3  2DB6               	goto	u1095
  7577  05B4  0861               	movf	??_util_decrease,w
  7578  05B5  0263               	subwf	??_util_decrease+2,w
  7579  05B6                     u1095:	
  7580                           
  7581                           ;app_util.c: 14: (*src) -= step;
  7582  05B6  0865               	movf	util_decrease@src,w
  7583  05B7  0086               	movwf	6
  7584  05B8  0187               	clrf	7
  7585  05B9  1803               	skipnc
  7586  05BA  2DBE               	goto	L2
  7587  05BB  085E               	movf	util_decrease@step,w
  7588                           
  7589                           ;app_util.c: 15: } else {
  7590  05BC  318F  2FE4         	ljmp	PL18	;call to abstracted procedure
  7591  05BE                     L2:	
  7592                           ;app_util.c: 16: (*src) = min;
  7593                           
  7594  05BE  085F               	movf	util_decrease@min,w
  7595  05BF  3FC0               	movwi [0]fsr1
  7596  05C0  0860               	movf	util_decrease@min+1,w
  7597  05C1  3FC1               	movwi [1]fsr1
  7598  05C2  0008               	return
  7599  05C3                     __end_of_util_decrease:	
  7600  05C3                     __ptext15:	
  7601 ;; *************** function _led_set_increase_bright *****************
  7602 ;; Defined at:
  7603 ;;		line 144 in file "src/app_led.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  chn             1    wreg     unsigned char 
  7606 ;;  step            1    8[BANK0 ] unsigned char 
  7607 ;;  max             2    9[BANK0 ] unsigned int 
  7608 ;; Auto vars:     Size  Location     Type
  7609 ;;  chn             1   11[BANK0 ] unsigned char 
  7610 ;; Return value:  Size  Location     Type
  7611 ;;                  1    wreg      void 
  7612 ;; Registers used:
  7613 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7614 ;; Tracked objects:
  7615 ;;		On entry : 1F/0
  7616 ;;		On exit  : 1F/0
  7617 ;;		Unchanged: 0/0
  7618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7619 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7620 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7622 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7623 ;;Total ram usage:        4 bytes
  7624 ;; Hardware stack levels used:    1
  7625 ;; Hardware stack levels required when called:    7
  7626 ;; This function calls:
  7627 ;;		_util_increase
  7628 ;; This function is called by:
  7629 ;;		_ir_short_action
  7630 ;; This function uses a non-reentrant model
  7631 ;;
  7632                           
  7633                           
  7634                           ;psect for function _led_set_increase_bright
  7635  05C3                     _led_set_increase_bright:	
  7636                           
  7637                           ;incstack = 0
  7638                           ; Regs used in _led_set_increase_bright: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7639                           ;led_set_increase_bright@chn stored from wreg
  7640  05C3  00E9               	movwf	led_set_increase_bright@chn
  7641                           
  7642                           ;app_led.c: 146: util_increase(&m_led_para.mBright[chn],step,max);
  7643  05C4  0866               	movf	led_set_increase_bright@step,w
  7644  05C5  00DE               	movwf	util_increase@step
  7645  05C6  0868               	movf	led_set_increase_bright@max+1,w
  7646  05C7  00E0               	movwf	util_increase@max+1
  7647  05C8  0867               	movf	led_set_increase_bright@max,w
  7648  05C9  00DF               	movwf	util_increase@max
  7649  05CA  3569               	lslf	led_set_increase_bright@chn,w
  7650  05CB  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
  7651  05CC  25D6  3180         	fcall	_util_increase
  7652                           
  7653                           ;app_led.c: 147: m_led_run_para.mTargetBright[chn] = m_led_para.mBright[chn];
  7654  05CE  3569               	lslf	led_set_increase_bright@chn,w
  7655  05CF  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
  7656  05D0  0086               	movwf	6
  7657  05D1  0187               	clrf	7
  7658  05D2  3569               	lslf	led_set_increase_bright@chn,w
  7659  05D3  3E2B               	addlw	(low ((_m_led_run_para| 0+11)))& (0+255)
  7660  05D4  2606               	fcall	PL4	;call to abstracted procedure
  7661  05D5  0008               	return
  7662  05D6                     __end_of_led_set_increase_bright:	
  7663  05D6                     __ptext16:	
  7664 ;; *************** function _util_increase *****************
  7665 ;; Defined at:
  7666 ;;		line 3 in file "src/app_util.c"
  7667 ;; Parameters:    Size  Location     Type
  7668 ;;  src             1    wreg     PTR unsigned int 
  7669 ;;		 -> m_led_para.mBright(10), m_led_para(51), 
  7670 ;;  step            1    0[BANK0 ] unsigned char 
  7671 ;;  max             2    1[BANK0 ] unsigned int 
  7672 ;; Auto vars:     Size  Location     Type
  7673 ;;  src             1    7[BANK0 ] PTR unsigned int 
  7674 ;;		 -> m_led_para.mBright(10), m_led_para(51), 
  7675 ;; Return value:  Size  Location     Type
  7676 ;;                  1    wreg      void 
  7677 ;; Registers used:
  7678 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7679 ;; Tracked objects:
  7680 ;;		On entry : 1F/0
  7681 ;;		On exit  : 1F/0
  7682 ;;		Unchanged: 0/0
  7683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7684 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7685 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7686 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7687 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7688 ;;Total ram usage:        8 bytes
  7689 ;; Hardware stack levels used:    1
  7690 ;; Hardware stack levels required when called:    6
  7691 ;; This function calls:
  7692 ;;		Nothing
  7693 ;; This function is called by:
  7694 ;;		_led_set_increase_bright
  7695 ;; This function uses a non-reentrant model
  7696 ;;
  7697                           
  7698                           
  7699                           ;psect for function _util_increase
  7700  05D6                     _util_increase:	
  7701                           
  7702                           ;incstack = 0
  7703                           ; Regs used in _util_increase: [wreg+fsr1l+fsr1h+status,2+status,0]
  7704                           ;util_increase@src stored from wreg
  7705  05D6  00E5               	movwf	util_increase@src
  7706                           
  7707                           ;app_util.c: 5: if((*src) + step < max) {
  7708  05D7  0086               	movwf	6
  7709  05D8  0187               	clrf	7
  7710  05D9  3F40               	moviw [0]fsr1
  7711  05DA  00E1               	movwf	??_util_increase
  7712  05DB  3F41               	moviw [1]fsr1
  7713  05DC  00E2               	movwf	??_util_increase+1
  7714  05DD  085E               	movf	util_increase@step,w
  7715  05DE  0761               	addwf	??_util_increase,w
  7716  05DF  00E3               	movwf	??_util_increase+2
  7717  05E0  0862               	movf	??_util_increase+1,w
  7718  05E1  1803               	skipnc
  7719  05E2  0A62               	incf	??_util_increase+1,w
  7720  05E3  00E4               	movwf	??_util_increase+3
  7721  05E4  0860               	movf	util_increase@max+1,w
  7722  05E5  0264               	subwf	??_util_increase+3,w
  7723  05E6  1D03               	skipz
  7724  05E7  2DEA               	goto	u1085
  7725  05E8  085F               	movf	util_increase@max,w
  7726  05E9  0263               	subwf	??_util_increase+2,w
  7727  05EA                     u1085:	
  7728                           
  7729                           ;app_util.c: 6: (*src) += step;
  7730  05EA  0865               	movf	util_increase@src,w
  7731  05EB  0086               	movwf	6
  7732  05EC  0187               	clrf	7
  7733  05ED  1803               	skipnc
  7734  05EE  2DF2               	goto	L1
  7735  05EF  085E               	movf	util_increase@step,w
  7736                           
  7737                           ;app_util.c: 7: } else {
  7738  05F0  318F  2FEA         	ljmp	PL22	;call to abstracted procedure
  7739  05F2                     L1:	
  7740                           ;app_util.c: 8: (*src) = max;
  7741                           
  7742  05F2  085F               	movf	util_increase@max,w
  7743  05F3  3FC0               	movwi [0]fsr1
  7744  05F4  0860               	movf	util_increase@max+1,w
  7745  05F5  3FC1               	movwi [1]fsr1
  7746  05F6  0008               	return
  7747  05F7                     __end_of_util_increase:	
  7748  05F7                     PL2:	
  7749  05F7  0862               	movf	gpio_set@offset,w
  7750  05F8  3E8C               	addlw	140
  7751  05F9  0086               	movwf	6
  7752  05FA  3001               	movlw	1
  7753  05FB  0187               	clrf	7
  7754  05FC  3D87               	addwfc	7,f
  7755  05FD  0963               	comf	gpio_set@mask,w
  7756  05FE  0581               	andwf	1,f
  7757  05FF  0862               	movf	gpio_set@offset,w
  7758  0600  3E8C               	addlw	140
  7759  0601  0086               	movwf	6
  7760  0602  3000               	movlw	0
  7761  0603  0187               	clrf	7
  7762  0604  3D87               	addwfc	7,f
  7763  0605  0008               	return
  7764  0606                     __end_ofPL2:	
  7765  0606                     PL4:	
  7766  0606  0084               	movwf	4
  7767  0607  0185               	clrf	5
  7768  0608  3F40               	moviw [0]fsr1
  7769  0609  3F80               	movwi [0]fsr0
  7770  060A  3F41               	moviw [1]fsr1
  7771  060B  3F81               	movwi [1]fsr0
  7772  060C  0008               	return
  7773  060D                     __end_ofPL4:	
  7774  060D                     PL8:	
  7775  060D  00E0               	movwf	??_gpio_set_outputpps
  7776  060E  300E               	movlw	14
  7777  060F  01E1               	clrf	??_gpio_set_outputpps+1
  7778  0610  3DE1               	addwfc	??_gpio_set_outputpps+1,f
  7779  0611  0860               	movf	??_gpio_set_outputpps,w
  7780  0612  0086               	movwf	6
  7781  0613  0861               	movf	??_gpio_set_outputpps+1,w
  7782  0614  0087               	movwf	7
  7783  0615  085F               	movf	gpio_set_outputpps@outputpps,w
  7784  0616  0081               	movwf	1
  7785  0617  0008               	return
  7786  0618                     __end_ofPL8:	
  7787  0618                     PL10:	
  7788  0618  086E               	movf	led_para_init@j,w
  7789  0619  00E5               	movwf	??_led_para_init
  7790  061A  30AB               	movlw	(low ((_m_led_para| 0+11)))& (0+255)
  7791  061B  35E5               	lslf	??_led_para_init,f
  7792  061C  0765               	addwf	??_led_para_init,w
  7793  061D  00E6               	movwf	??_led_para_init+1
  7794  061E  300A               	movlw	10
  7795  061F  00DE               	movwf	___bmul@multiplicand
  7796  0620  086C               	movf	led_para_init@i_1144,w
  7797  0621  0008               	return
  7798  0622                     __end_ofPL10:	
  7799  0622                     PL12:	
  7800  0622  0863               	movf	gpio_set@mask,w
  7801  0623  0481               	iorwf	1,f
  7802  0624  0862               	movf	gpio_set@offset,w
  7803  0625  3E0C               	addlw	12
  7804  0626  0086               	movwf	6
  7805  0627  3002               	movlw	2
  7806  0628  0187               	clrf	7
  7807  0629  3D87               	addwfc	7,f
  7808  062A  0008               	return
  7809  062B                     __end_ofPL12:	
  7810  062B                     PL14:	
  7811  062B  0963               	comf	gpio_set@mask,w
  7812  062C  0581               	andwf	1,f
  7813  062D  0862               	movf	gpio_set@offset,w
  7814  062E  3E0C               	addlw	12
  7815  062F  0086               	movwf	6
  7816  0630  3001               	movlw	1
  7817  0631  0187               	clrf	7
  7818  0632  3D87               	addwfc	7,f
  7819  0633  0008               	return
  7820  0634                     __end_ofPL14:	
  7821  0634                     PL20:	
  7822  0634  00EB               	movwf	ir_short_action@idx
  7823  0635  3E59               	addlw	(low (_step_bright| 0))& (0+255)
  7824  0636  0086               	movwf	6
  7825  0637  0187               	clrf	7
  7826  0638  0801               	movf	1,w
  7827  0639  0008               	return
  7828  063A                     __end_ofPL20:	
  7829  063A                     PL28:	
  7830  063A  1797               	bsf	23,7	;volatile
  7831  063B  1617               	bsf	23,4	;volatile
  7832  063C  300F               	movlw	15
  7833  063D  0497               	iorwf	23,f	;volatile
  7834  063E  0020               	movlb	0	; select bank0
  7835  063F  0008               	return
  7836  0640                     __end_ofPL28:	
  7837  0640                     PL30:	
  7838  0640  0086               	movwf	6
  7839  0641  3000               	movlw	0
  7840  0642  0187               	clrf	7
  7841  0643  3FC0               	movwi [0]fsr1
  7842  0644  3FC1               	movwi [1]fsr1
  7843  0645  0008               	return
  7844  0646                     __end_ofPL30:	
  7845  0646                     __ptext68:	
  7846 ;; *************** function _ir_decode *****************
  7847 ;; Defined at:
  7848 ;;		line 143 in file "src/app_ir.c"
  7849 ;; Parameters:    Size  Location     Type
  7850 ;;		None
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;  hVal            2   12[COMMON] unsigned int 
  7853 ;;  keyNum          1   11[COMMON] unsigned char 
  7854 ;;  reKeyNum        1   10[COMMON] unsigned char 
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      void 
  7857 ;; Registers used:
  7858 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  7859 ;; Tracked objects:
  7860 ;;		On entry : 1F/0
  7861 ;;		On exit  : 1E/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7864 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7865 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7866 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7867 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7868 ;;Total ram usage:        8 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:    1
  7871 ;; This function calls:
  7872 ;;		_tmr1_readtimer
  7873 ;;		_tmr2_disabled_isr
  7874 ;;		i1_led_get_power_state
  7875 ;;		i1_tmr1_writetimer
  7876 ;;		i1_tmr2_enabled_isr
  7877 ;; This function is called by:
  7878 ;;		_app_init
  7879 ;;		_tmr1_gate_isr
  7880 ;; This function uses a non-reentrant model
  7881 ;;
  7882                           
  7883                           
  7884                           ;psect for function _ir_decode
  7885  0646                     _ir_decode:	
  7886                           
  7887                           ;app_ir.c: 146: uint8_t reKeyNum = 0;
  7888                           
  7889                           ;incstack = 0
  7890                           ; Regs used in _ir_decode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  7891  0646  01FA               	clrf	ir_decode@reKeyNum
  7892                           
  7893                           ;app_ir.c: 147: static uint8_t nBit = 0;
  7894                           ;app_ir.c: 148: static uint8_t rptCnt = 0;
  7895                           ;app_ir.c: 149: static uint16_t codeVal = 0;
  7896                           ;app_ir.c: 150: uint16_t hVal = tmr1_readtimer();
  7897  0647  272E  3180         	fcall	_tmr1_readtimer
  7898  0649  0871               	movf	?_tmr1_readtimer+1,w
  7899  064A  00FD               	movwf	ir_decode@hVal+1
  7900  064B  0870               	movf	?_tmr1_readtimer,w
  7901  064C  00FC               	movwf	ir_decode@hVal
  7902                           
  7903                           ;app_ir.c: 151: tmr1_writetimer(0);
  7904  064D  01F0               	clrf	i1tmr1_writetimer@value
  7905  064E  01F1               	clrf	i1tmr1_writetimer@value+1
  7906  064F  273F  3180         	fcall	i1_tmr1_writetimer
  7907                           
  7908                           ;app_ir.c: 152: switch(m_ir_state.mState) {
  7909  0651  2F1F               	goto	i1l2812
  7910  0652                     i1l2712:	
  7911                           
  7912                           ;app_ir.c: 154: if(hVal > 2000 && hVal < 2500) {
  7913  0652  3007               	movlw	7
  7914  0653  027D               	subwf	ir_decode@hVal+1,w
  7915  0654  30D1               	movlw	209
  7916  0655  1903               	skipnz
  7917  0656  027C               	subwf	ir_decode@hVal,w
  7918  0657  1C03               	skipc
  7919  0658  0008               	return
  7920  0659  3009               	movlw	9
  7921  065A  027D               	subwf	ir_decode@hVal+1,w
  7922  065B  30C4               	movlw	196
  7923  065C  1903               	skipnz
  7924  065D  027C               	subwf	ir_decode@hVal,w
  7925  065E  1803               	skipnc
  7926  065F  0008               	return
  7927                           
  7928                           ;app_ir.c: 155: m_ir_state.mState = 1;
  7929  0660  01BC               	clrf	_m_ir_state+1
  7930  0661  0ABC               	incf	_m_ir_state+1,f
  7931                           
  7932                           ;app_ir.c: 156: codeVal = 0;
  7933  0662  01B9               	clrf	ir_decode@codeVal
  7934  0663  01BA               	clrf	ir_decode@codeVal+1
  7935                           
  7936                           ;app_ir.c: 157: nBit = 0;
  7937  0664  01C3               	clrf	ir_decode@nBit
  7938                           
  7939                           ;app_ir.c: 158: tmr2_disabled_isr();
  7940  0665  2F50               	ljmp	i1l2328
  7941  0666                     i1l2722:	
  7942                           
  7943                           ;app_ir.c: 162: case 2:
  7944                           ;app_ir.c: 163: if(hVal > 220 && hVal < 340) {
  7945  0666  3000               	movlw	0
  7946  0667  027D               	subwf	ir_decode@hVal+1,w
  7947  0668  30DD               	movlw	221
  7948  0669  1903               	skipnz
  7949  066A  027C               	subwf	ir_decode@hVal,w
  7950  066B  1C03               	skipc
  7951  066C  2E76               	goto	i1l2728
  7952  066D  3001               	movlw	1
  7953  066E  027D               	subwf	ir_decode@hVal+1,w
  7954  066F  3054               	movlw	84
  7955  0670  1903               	skipnz
  7956  0671  027C               	subwf	ir_decode@hVal,w
  7957  0672  1803               	skipnc
  7958  0673  2E76               	goto	i1l2728
  7959  0674                     i1l2726:	
  7960                           
  7961                           ;app_ir.c: 164: nBit ++;
  7962  0674  0AC3               	incf	ir_decode@nBit,f
  7963                           
  7964                           ;app_ir.c: 165: } else if(hVal > 720 && hVal < 960) {
  7965  0675  2E93               	goto	i1l2738
  7966  0676                     i1l2728:	
  7967  0676  3002               	movlw	2
  7968  0677  027D               	subwf	ir_decode@hVal+1,w
  7969  0678  30D1               	movlw	209
  7970  0679  1903               	skipnz
  7971  067A  027C               	subwf	ir_decode@hVal,w
  7972  067B  1C03               	skipc
  7973  067C  2E92               	goto	i1l2736
  7974  067D  3003               	movlw	3
  7975  067E  027D               	subwf	ir_decode@hVal+1,w
  7976  067F  30C0               	movlw	192
  7977  0680  1903               	skipnz
  7978  0681  027C               	subwf	ir_decode@hVal,w
  7979  0682  1803               	skipnc
  7980  0683  2E92               	goto	i1l2736
  7981                           
  7982                           ;app_ir.c: 166: codeVal |= (1 << nBit);
  7983  0684  3001               	movlw	1
  7984  0685  00F6               	movwf	??_ir_decode
  7985  0686  01F7               	clrf	??_ir_decode+1
  7986  0687  0A43               	incf	ir_decode@nBit,w
  7987  0688  2E8B               	goto	u147_24
  7988  0689                     u147_25:	
  7989  0689  35F6               	lslf	??_ir_decode,f
  7990  068A  0DF7               	rlf	??_ir_decode+1,f
  7991  068B                     u147_24:	
  7992  068B  0B89               	decfsz	9,f
  7993  068C  2E89               	goto	u147_25
  7994  068D  0876               	movf	??_ir_decode,w
  7995  068E  04B9               	iorwf	ir_decode@codeVal,f
  7996  068F  0877               	movf	??_ir_decode+1,w
  7997  0690  04BA               	iorwf	ir_decode@codeVal+1,f
  7998  0691  2E74               	goto	i1l2726
  7999  0692                     i1l2736:	
  8000                           
  8001                           ;app_ir.c: 169: m_ir_state.mState = 0;
  8002  0692  01BC               	clrf	_m_ir_state+1
  8003  0693                     i1l2738:	
  8004                           
  8005                           ;app_ir.c: 170: }
  8006                           ;app_ir.c: 171: if(nBit >= 16) {
  8007  0693  3010               	movlw	16
  8008  0694  0243               	subwf	ir_decode@nBit,w
  8009  0695  1C03               	skipc
  8010  0696  0008               	return
  8011                           
  8012                           ;app_ir.c: 172: if(m_ir_state.mState == 1) {
  8013  0697  0B3C               	decfsz	_m_ir_state+1,w
  8014  0698  2EA1               	goto	i1l2748
  8015                           
  8016                           ;app_ir.c: 173: if(codeVal == 0xFF00) {
  8017  0699  0A3A               	incf	ir_decode@codeVal+1,w
  8018  069A  0439               	iorwf	ir_decode@codeVal,w
  8019  069B  1D03               	btfss	3,2
  8020  069C  2E9F               	goto	i1l2746
  8021                           
  8022                           ;app_ir.c: 174: m_ir_state.mState = 2;
  8023  069D  3002               	movlw	2
  8024  069E  2EFC               	goto	L9
  8025  069F                     i1l2746:	
  8026                           ;app_ir.c: 175: } else {
  8027                           
  8028                           
  8029                           ;app_ir.c: 176: m_ir_state.mState = 0;
  8030  069F  01BC               	clrf	_m_ir_state+1
  8031                           
  8032                           ;app_ir.c: 177: }
  8033                           ;app_ir.c: 178: } else if(m_ir_state.mState == 2){
  8034  06A0  2F05               	goto	i1l415
  8035  06A1                     i1l2748:	
  8036  06A1  3002               	movlw	2
  8037  06A2  063C               	xorwf	_m_ir_state+1,w
  8038  06A3  1D03               	btfss	3,2
  8039  06A4  2F05               	goto	i1l415
  8040                           
  8041                           ;app_ir.c: 179: tmr2_enabled_isr();
  8042  06A5  274D  3180         	fcall	i1_tmr2_enabled_isr
  8043                           
  8044                           ;app_ir.c: 180: keyNum = codeVal & 0xFF;
  8045  06A7  0020               	movlb	0	; select bank0
  8046  06A8  0839               	movf	ir_decode@codeVal,w
  8047  06A9  00FB               	movwf	ir_decode@keyNum
  8048                           
  8049                           ;app_ir.c: 181: reKeyNum = codeVal >> 8;
  8050  06AA  083A               	movf	ir_decode@codeVal+1,w
  8051  06AB  00FA               	movwf	ir_decode@reKeyNum
  8052                           
  8053                           ;app_ir.c: 182: if(keyNum ^ reKeyNum == 0xFF) {
  8054  06AC  0F7A               	incfsz	ir_decode@reKeyNum,w
  8055  06AD  2EB0               	goto	u152_20
  8056  06AE  3001               	movlw	1
  8057  06AF  2EB1               	goto	u153_20
  8058  06B0                     u152_20:	
  8059  06B0  3000               	movlw	0
  8060  06B1                     u153_20:	
  8061  06B1  00F6               	movwf	??_ir_decode
  8062  06B2  01F7               	clrf	??_ir_decode+1
  8063  06B3  067B               	xorwf	ir_decode@keyNum,w
  8064  06B4  00F8               	movwf	??_ir_decode+2
  8065  06B5  0877               	movf	??_ir_decode+1,w
  8066  06B6  00F9               	movwf	??_ir_decode+3
  8067  06B7  0478               	iorwf	??_ir_decode+2,w
  8068  06B8  1903               	btfsc	3,2
  8069  06B9  2F05               	goto	i1l415
  8070                           
  8071                           ;app_ir.c: 183: KeyValue = keyNum;
  8072  06BA  087B               	movf	ir_decode@keyNum,w
  8073  06BB  00C4               	movwf	_KeyValue
  8074                           
  8075                           ;app_ir.c: 184: if(led_get_power_state()) {
  8076  06BC  273E  3180         	fcall	i1_led_get_power_state
  8077  06BE  3A00               	xorlw	0
  8078  06BF  1903               	skipnz
  8079  06C0  2F00               	goto	i1l2796
  8080                           
  8081                           ;app_ir.c: 185: if(KeyValue == 0x1D || KeyValue == 0x1F || KeyValue == 0x0D || KeyValue 
      +                          == 0x15 || KeyValue == 0x1B || KeyValue == 0x11 ||
  8082                           ;app_ir.c: 186: KeyValue == 0x12 || KeyValue == 0x16 || KeyValue == 0x4C || KeyValue == 
      +                          0x04 ||
  8083                           ;app_ir.c: 187: KeyValue == 0x1E || KeyValue == 0x0E || KeyValue == 0x14 || KeyValue == 
      +                          0x0F) {
  8084  06C1  301D               	movlw	29
  8085  06C2  0020               	movlb	0	; select bank0
  8086  06C3  0644               	xorwf	_KeyValue,w
  8087  06C4  1903               	btfsc	3,2
  8088  06C5  2EFA               	goto	i1l2790
  8089  06C6  301F               	movlw	31
  8090  06C7  0644               	xorwf	_KeyValue,w
  8091  06C8  1903               	btfsc	3,2
  8092  06C9  2EFA               	goto	i1l2790
  8093  06CA  300D               	movlw	13
  8094  06CB  0644               	xorwf	_KeyValue,w
  8095  06CC  1903               	btfsc	3,2
  8096  06CD  2EFA               	goto	i1l2790
  8097  06CE  3015               	movlw	21
  8098  06CF  0644               	xorwf	_KeyValue,w
  8099  06D0  1903               	btfsc	3,2
  8100  06D1  2EFA               	goto	i1l2790
  8101  06D2  301B               	movlw	27
  8102  06D3  0644               	xorwf	_KeyValue,w
  8103  06D4  1903               	btfsc	3,2
  8104  06D5  2EFA               	goto	i1l2790
  8105  06D6  3011               	movlw	17
  8106  06D7  0644               	xorwf	_KeyValue,w
  8107  06D8  1903               	btfsc	3,2
  8108  06D9  2EFA               	goto	i1l2790
  8109  06DA  3012               	movlw	18
  8110  06DB  0644               	xorwf	_KeyValue,w
  8111  06DC  1903               	btfsc	3,2
  8112  06DD  2EFA               	goto	i1l2790
  8113  06DE  3016               	movlw	22
  8114  06DF  0644               	xorwf	_KeyValue,w
  8115  06E0  1903               	btfsc	3,2
  8116  06E1  2EFA               	goto	i1l2790
  8117  06E2  304C               	movlw	76
  8118  06E3  0644               	xorwf	_KeyValue,w
  8119  06E4  1903               	btfsc	3,2
  8120  06E5  2EFA               	goto	i1l2790
  8121  06E6  3004               	movlw	4
  8122  06E7  0644               	xorwf	_KeyValue,w
  8123  06E8  1903               	btfsc	3,2
  8124  06E9  2EFA               	goto	i1l2790
  8125  06EA  301E               	movlw	30
  8126  06EB  0644               	xorwf	_KeyValue,w
  8127  06EC  1903               	btfsc	3,2
  8128  06ED  2EFA               	goto	i1l2790
  8129  06EE  300E               	movlw	14
  8130  06EF  0644               	xorwf	_KeyValue,w
  8131  06F0  1903               	btfsc	3,2
  8132  06F1  2EFA               	goto	i1l2790
  8133  06F2  3014               	movlw	20
  8134  06F3  0644               	xorwf	_KeyValue,w
  8135  06F4  1903               	btfsc	3,2
  8136  06F5  2EFA               	goto	i1l2790
  8137  06F6  300F               	movlw	15
  8138  06F7  0644               	xorwf	_KeyValue,w
  8139  06F8  1D03               	btfss	3,2
  8140  06F9  2EFE               	goto	i1l419
  8141  06FA                     i1l2790:	
  8142  06FA  3003               	movlw	3
  8143                           
  8144                           ;app_ir.c: 188: rptCnt = 0;
  8145  06FB  01C2               	clrf	ir_decode@rptCnt
  8146  06FC                     L9:	
  8147                           ;app_ir.c: 189: m_ir_state.mState = 3;
  8148                           
  8149  06FC  00BC               	movwf	_m_ir_state+1
  8150                           
  8151                           ;app_ir.c: 190: } else {
  8152  06FD  2F05               	goto	i1l415
  8153  06FE                     i1l419:	
  8154                           
  8155                           ;app_ir.c: 191: m_ir_state.mRcvKey = 1;
  8156  06FE  143B               	bsf	_m_ir_state,0
  8157  06FF  2E9F               	goto	i1l2746
  8158  0700                     i1l2796:	
  8159                           
  8160                           ;app_ir.c: 195: if(KeyValue == 0x09) {
  8161  0700  3009               	movlw	9
  8162  0701  0020               	movlb	0	; select bank0
  8163  0702  0644               	xorwf	_KeyValue,w
  8164  0703  1903               	btfsc	3,2
  8165  0704  2EFE               	goto	i1l419
  8166  0705                     i1l415:	
  8167                           
  8168                           ;app_ir.c: 198: }
  8169                           ;app_ir.c: 199: }
  8170                           ;app_ir.c: 200: }
  8171                           ;app_ir.c: 201: }
  8172                           ;app_ir.c: 202: codeVal = 0;
  8173  0705  01B9               	clrf	ir_decode@codeVal
  8174  0706  01BA               	clrf	ir_decode@codeVal+1
  8175                           
  8176                           ;app_ir.c: 203: nBit = 0;
  8177  0707  01C3               	clrf	ir_decode@nBit
  8178  0708  0008               	return
  8179  0709                     i1l2802:	
  8180                           
  8181                           ;app_ir.c: 207: if(hVal > 1000 && hVal < 1250) {
  8182  0709  3003               	movlw	3
  8183  070A  027D               	subwf	ir_decode@hVal+1,w
  8184  070B  30E9               	movlw	233
  8185  070C  1903               	skipnz
  8186  070D  027C               	subwf	ir_decode@hVal,w
  8187  070E  1C03               	skipc
  8188  070F  0008               	return
  8189  0710  3004               	movlw	4
  8190  0711  027D               	subwf	ir_decode@hVal+1,w
  8191  0712  30E2               	movlw	226
  8192  0713  1903               	skipnz
  8193  0714  027C               	subwf	ir_decode@hVal,w
  8194  0715  1803               	skipnc
  8195  0716  0008               	return
  8196                           
  8197                           ;app_ir.c: 208: if(rptCnt < 4) {
  8198  0717  3004               	movlw	4
  8199  0718  0242               	subwf	ir_decode@rptCnt,w
  8200  0719  1803               	skipnc
  8201  071A  2F1D               	goto	i1l427
  8202                           
  8203                           ;app_ir.c: 209: rptCnt ++;
  8204  071B  0AC2               	incf	ir_decode@rptCnt,f
  8205                           
  8206                           ;app_ir.c: 210: } else {
  8207  071C  0008               	return
  8208  071D                     i1l427:	
  8209                           
  8210                           ;app_ir.c: 211: m_ir_state.mRptKey = 1;
  8211  071D  14BB               	bsf	_m_ir_state,1
  8212  071E  0008               	return
  8213  071F                     i1l2812:	
  8214  071F  083C               	movf	_m_ir_state+1,w
  8215                           
  8216                           ; Switch size 1, requested type "space"
  8217                           ; Number of cases is 4, Range of values is 0 to 3
  8218                           ; switch strategies available:
  8219                           ; Name         Instructions Cycles
  8220                           ; simple_byte           13     7 (average)
  8221                           ; direct_byte           14     6 (fixed)
  8222                           ; jumptable            260     6 (fixed)
  8223                           ;	Chosen strategy is simple_byte
  8224  0720  3A00               	xorlw	0	; case 0
  8225  0721  1903               	skipnz
  8226  0722  2E52               	goto	i1l2712
  8227  0723  3A01               	xorlw	1	; case 1
  8228  0724  1903               	skipnz
  8229  0725  2E66               	goto	i1l2722
  8230  0726  3A03               	xorlw	3	; case 2
  8231  0727  1903               	skipnz
  8232  0728  2E66               	goto	i1l2722
  8233  0729  3A01               	xorlw	1	; case 3
  8234  072A  1903               	skipnz
  8235  072B  2F09               	goto	i1l2802
  8236  072C  2F2D               	goto	i1l430
  8237  072D                     i1l430:	
  8238  072D  0008               	return
  8239  072E                     __end_of_ir_decode:	
  8240  072E                     __ptext73:	
  8241 ;; *************** function _tmr1_readtimer *****************
  8242 ;; Defined at:
  8243 ;;		line 89 in file "src/drv_tmr1xx.c"
  8244 ;; Parameters:    Size  Location     Type
  8245 ;;		None
  8246 ;; Auto vars:     Size  Location     Type
  8247 ;;  readVal         2    2[COMMON] unsigned int 
  8248 ;;  readValLow      1    5[COMMON] unsigned char 
  8249 ;;  readValHigh     1    4[COMMON] unsigned char 
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  2    0[COMMON] unsigned int 
  8252 ;; Registers used:
  8253 ;;		wreg, status,2
  8254 ;; Tracked objects:
  8255 ;;		On entry : 1F/0
  8256 ;;		On exit  : 1F/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8259 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8260 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8262 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8263 ;;Total ram usage:        6 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_ir_decode
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           
  8273                           ;psect for function _tmr1_readtimer
  8274  072E                     _tmr1_readtimer:	
  8275                           
  8276                           ;drv_tmr1xx.c: 92: uint8_t readValHigh = 0;
  8277                           
  8278                           ;incstack = 0
  8279                           ; Regs used in _tmr1_readtimer: [wreg+status,2]
  8280  072E  01F4               	clrf	tmr1_readtimer@readValHigh
  8281                           
  8282                           ;drv_tmr1xx.c: 93: uint8_t readValLow = 0;
  8283  072F  01F5               	clrf	tmr1_readtimer@readValLow
  8284                           
  8285                           ;drv_tmr1xx.c: 95: readValHigh = TMR1H;
  8286  0730  081A               	movf	26,w	;volatile
  8287  0731  00F4               	movwf	tmr1_readtimer@readValHigh
  8288                           
  8289                           ;drv_tmr1xx.c: 96: readValLow = TMR1L;
  8290  0732  0819               	movf	25,w	;volatile
  8291  0733  00F5               	movwf	tmr1_readtimer@readValLow
  8292                           
  8293                           ;drv_tmr1xx.c: 98: readVal = ((uint16_t)readValHigh << 8) | readValLow;
  8294  0734  0874               	movf	tmr1_readtimer@readValHigh,w
  8295  0735  00F3               	movwf	tmr1_readtimer@readVal+1
  8296  0736  01F2               	clrf	tmr1_readtimer@readVal
  8297  0737  0875               	movf	tmr1_readtimer@readValLow,w
  8298  0738  04F2               	iorwf	tmr1_readtimer@readVal,f
  8299                           
  8300                           ;drv_tmr1xx.c: 100: return readVal;
  8301  0739  0873               	movf	tmr1_readtimer@readVal+1,w
  8302  073A  00F1               	movwf	?_tmr1_readtimer+1
  8303  073B  0872               	movf	tmr1_readtimer@readVal,w
  8304  073C  00F0               	movwf	?_tmr1_readtimer
  8305  073D  0008               	return
  8306  073E                     __end_of_tmr1_readtimer:	
  8307  007E                     btemp	set	126	;btemp
  8308  007E                     int$flags	set	126
  8309  007E                     wtemp0	set	126
  8310  073E                     __ptext71:	
  8311 ;; *************** function i1_led_get_power_state *****************
  8312 ;; Defined at:
  8313 ;;		line 127 in file "src/app_led.c"
  8314 ;; Parameters:    Size  Location     Type
  8315 ;;		None
  8316 ;; Auto vars:     Size  Location     Type
  8317 ;;		None
  8318 ;; Return value:  Size  Location     Type
  8319 ;;                  1    wreg      unsigned char 
  8320 ;; Registers used:
  8321 ;;		wreg, status,2, status,0
  8322 ;; Tracked objects:
  8323 ;;		On entry : 1F/0
  8324 ;;		On exit  : 1F/1
  8325 ;;		Unchanged: 0/0
  8326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8331 ;;Total ram usage:        0 bytes
  8332 ;; Hardware stack levels used:    1
  8333 ;; This function calls:
  8334 ;;		Nothing
  8335 ;; This function is called by:
  8336 ;;		_ir_decode
  8337 ;; This function uses a non-reentrant model
  8338 ;;
  8339                           
  8340                           
  8341                           ;psect for function i1_led_get_power_state
  8342  073E                     i1_led_get_power_state:	
  8343                           
  8344                           ;app_led.c: 129: return m_led_para.mOn;
  8345                           
  8346                           ;incstack = 0
  8347                           ; Regs used in i1_led_get_power_state: [wreg+status,2+status,0]
  8348  073E  2F53               	ljmp	PL32	;call to abstracted procedure
  8349  073F                     __end_ofi1_led_get_power_state:	
  8350  073F                     __ptext70:	
  8351 ;; *************** function i1_tmr1_writetimer *****************
  8352 ;; Defined at:
  8353 ;;		line 77 in file "src/drv_tmr1xx.c"
  8354 ;; Parameters:    Size  Location     Type
  8355 ;;  value           2    0[COMMON] unsigned int 
  8356 ;; Auto vars:     Size  Location     Type
  8357 ;;		None
  8358 ;; Return value:  Size  Location     Type
  8359 ;;                  1    wreg      void 
  8360 ;; Registers used:
  8361 ;;		wreg
  8362 ;; Tracked objects:
  8363 ;;		On entry : 1F/0
  8364 ;;		On exit  : 1F/0
  8365 ;;		Unchanged: 0/0
  8366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8367 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;Total ram usage:        2 bytes
  8372 ;; Hardware stack levels used:    1
  8373 ;; This function calls:
  8374 ;;		Nothing
  8375 ;; This function is called by:
  8376 ;;		_ir_decode
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           
  8381                           ;psect for function i1_tmr1_writetimer
  8382  073F                     i1_tmr1_writetimer:	
  8383                           
  8384                           ;drv_tmr1xx.c: 79: if(T1CONbits.T1SYNC == 1) {
  8385                           
  8386                           ;incstack = 0
  8387                           ; Regs used in i1_tmr1_writetimer: [wreg]
  8388  073F  1D1B               	btfss	27,2	;volatile
  8389  0740  2F48               	goto	i1l2550
  8390                           
  8391                           ;drv_tmr1xx.c: 80: T1CONbits.TMR1ON = 0;
  8392  0741  101B               	bcf	27,0	;volatile
  8393                           
  8394                           ;drv_tmr1xx.c: 81: TMR1H = value >> 8;
  8395  0742  0871               	movf	i1tmr1_writetimer@value+1,w
  8396  0743  009A               	movwf	26	;volatile
  8397                           
  8398                           ;drv_tmr1xx.c: 82: TMR1L = value & 0xFF;
  8399  0744  0870               	movf	i1tmr1_writetimer@value,w
  8400  0745  0099               	movwf	25	;volatile
  8401                           
  8402                           ;drv_tmr1xx.c: 83: T1CONbits.TMR1ON = 1;
  8403  0746  141B               	bsf	27,0	;volatile
  8404                           
  8405                           ;drv_tmr1xx.c: 84: } else {
  8406  0747  0008               	return
  8407  0748                     i1l2550:	
  8408                           
  8409                           ;drv_tmr1xx.c: 85: TMR1H = value >> 8;
  8410  0748  0871               	movf	i1tmr1_writetimer@value+1,w
  8411  0749  009A               	movwf	26	;volatile
  8412                           
  8413                           ;drv_tmr1xx.c: 86: TMR1L = value & 0xFF;
  8414  074A  0870               	movf	i1tmr1_writetimer@value,w
  8415  074B  0099               	movwf	25	;volatile
  8416  074C  0008               	return
  8417  074D                     __end_ofi1_tmr1_writetimer:	
  8418  074D                     __ptext69:	
  8419 ;; *************** function i1_tmr2_enabled_isr *****************
  8420 ;; Defined at:
  8421 ;;		line 25 in file "src/drv_tmr2xx.c"
  8422 ;; Parameters:    Size  Location     Type
  8423 ;;		None
  8424 ;; Auto vars:     Size  Location     Type
  8425 ;;		None
  8426 ;; Return value:  Size  Location     Type
  8427 ;;                  1    wreg      void 
  8428 ;; Registers used:
  8429 ;;		None
  8430 ;; Tracked objects:
  8431 ;;		On entry : 1F/0
  8432 ;;		On exit  : 1F/1
  8433 ;;		Unchanged: 0/0
  8434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8439 ;;Total ram usage:        0 bytes
  8440 ;; Hardware stack levels used:    1
  8441 ;; This function calls:
  8442 ;;		Nothing
  8443 ;; This function is called by:
  8444 ;;		_ir_decode
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           
  8449                           ;psect for function i1_tmr2_enabled_isr
  8450  074D                     i1_tmr2_enabled_isr:	
  8451                           
  8452                           ;drv_tmr2xx.c: 27: PIE1bits.TMR2IE = 1;
  8453                           
  8454                           ;incstack = 0
  8455                           ; Regs used in i1_tmr2_enabled_isr: []
  8456  074D  0021               	movlb	1	; select bank1
  8457  074E  1491               	bsf	17,1	;volatile
  8458  074F  0008               	return
  8459  0750                     __end_ofi1_tmr2_enabled_isr:	
  8460  0750                     __ptext72:	
  8461 ;; *************** function _tmr2_disabled_isr *****************
  8462 ;; Defined at:
  8463 ;;		line 29 in file "src/drv_tmr2xx.c"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;		None
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;		None
  8468 ;; Return value:  Size  Location     Type
  8469 ;;                  1    wreg      void 
  8470 ;; Registers used:
  8471 ;;		None
  8472 ;; Tracked objects:
  8473 ;;		On entry : 1F/0
  8474 ;;		On exit  : 1F/1
  8475 ;;		Unchanged: 0/0
  8476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8481 ;;Total ram usage:        0 bytes
  8482 ;; Hardware stack levels used:    1
  8483 ;; This function calls:
  8484 ;;		Nothing
  8485 ;; This function is called by:
  8486 ;;		_ir_decode
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490                           
  8491                           ;psect for function _tmr2_disabled_isr
  8492  0750                     _tmr2_disabled_isr:	
  8493  0750                     i1l2328:	
  8494                           ;incstack = 0
  8495                           ; Regs used in _tmr2_disabled_isr: []
  8496                           
  8497                           
  8498                           ;drv_tmr2xx.c: 31: PIE1bits.TMR2IE = 0;
  8499  0750  0021               	movlb	1	; select bank1
  8500  0751  1091               	bcf	17,1	;volatile
  8501  0752  0008               	return
  8502  0753                     __end_of_tmr2_disabled_isr:	
  8503  0753                     PL32:	
  8504  0753  0021               	movlb	1	; select bank1
  8505  0754  0820               	movf	_m_led_para^(0+128),w
  8506  0755  3901               	andlw	1
  8507  0756  0008               	return
  8508  0757                     __end_ofPL32:	
  8509                           
  8510                           	psect	bssBANK0
  8511  0020                     __pbssBANK0:	
  8512  0020                     _m_led_run_para:	
  8513  0020                     	ds	21
  8514  0035                     led_notice@cnt:	
  8515  0035                     	ds	2
  8516  0037                     ir_long_action@cnt:	
  8517  0037                     	ds	2
  8518  0039                     ir_decode@codeVal:	
  8519  0039                     	ds	2
  8520  003B                     _m_ir_state:	
  8521  003B                     	ds	2
  8522  003D                     _tmr2_isr_cb:	
  8523  003D                     	ds	2
  8524  003F                     _tmr1_gate_isr_cb:	
  8525  003F                     	ds	2
  8526  0041                     led_run@cnt:	
  8527  0041                     	ds	1
  8528  0042                     ir_decode@rptCnt:	
  8529  0042                     	ds	1
  8530  0043                     ir_decode@nBit:	
  8531  0043                     	ds	1
  8532  0044                     _KeyValue:	
  8533  0044                     	ds	1
  8534                           
  8535                           	psect	dataBANK0
  8536  0045                     __pdataBANK0:	
  8537  0045                     app_led@max_bright:	
  8538  0045                     	ds	10
  8539  004F                     _max_bright:	
  8540  004F                     	ds	10
  8541  0059                     _step_bright:	
  8542  0059                     	ds	5
  8543                           
  8544                           	psect	bssBANK1
  8545  00A0                     __pbssBANK1:	
  8546  00A0                     _m_led_para:	
  8547  00A0                     	ds	51
  8548                           
  8549                           	psect	dataBANK1
  8550  00D3                     __pdataBANK1:	
  8551  00D3                     _led_load_duty:	
  8552  00D3                     	ds	10
  8553                           
  8554                           	psect	inittext
  8555  07F7                     init_ram:	
  8556  07F7  00FE               	movwf	126
  8557  07F8                     initloop:	
  8558  07F8  0012               	moviw fsr0++
  8559  07F9  001E               	movwi fsr1++
  8560  07FA  0BFE               	decfsz	126,f
  8561  07FB  2FF8               	goto	initloop
  8562  07FC  3400               	retlw	0
  8563                           
  8564                           	psect	clrtext
  8565  0DC3                     clear_ram0:	
  8566                           ;	Called with FSR0 containing the base address, and
  8567                           ;	WREG with the size to clear
  8568                           
  8569  0DC3  0064               	clrwdt	;clear the watchdog before getting into this loop
  8570  0DC4                     clrloop0:	
  8571  0DC4  0180               	clrf	0	;clear RAM location pointed to by FSR
  8572  0DC5  3101               	addfsr 0,1
  8573  0DC6  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  8574  0DC7  2DC4               	goto	clrloop0	;have we reached the end yet?
  8575  0DC8  3400               	retlw	0	;all done for this memory range, return
  8576                           
  8577                           	psect	cstackCOMMON
  8578  0070                     __pcstackCOMMON:	
  8579  0070                     ?_app_init:	
  8580  0070                     ?_led_para_init:	
  8581                           ; 1 bytes @ 0x0
  8582                           
  8583  0070                     ?_led_init:	
  8584                           ; 1 bytes @ 0x0
  8585                           
  8586  0070                     ?_ir_tmr1_overflow_rest:	
  8587                           ; 1 bytes @ 0x0
  8588                           
  8589  0070                     ?_ir_action:	
  8590                           ; 1 bytes @ 0x0
  8591                           
  8592  0070                     ?_ir_decode:	
  8593                           ; 1 bytes @ 0x0
  8594                           
  8595  0070                     ?_led_run:	
  8596                           ; 1 bytes @ 0x0
  8597                           
  8598  0070                     ?_led_save_para:	
  8599                           ; 1 bytes @ 0x0
  8600                           
  8601  0070                     ?_led_get_state:	
  8602                           ; 1 bytes @ 0x0
  8603                           
  8604  0070                     ?_led_get_power_state:	
  8605                           ; 1 bytes @ 0x0
  8606                           
  8607  0070                     ?_led_set_custom:	
  8608                           ; 1 bytes @ 0x0
  8609                           
  8610  0070                     ?_led_startnotice:	
  8611                           ; 1 bytes @ 0x0
  8612                           
  8613  0070                     ??_led_startnotice:	
  8614                           ; 1 bytes @ 0x0
  8615                           
  8616  0070                     ?_led_toggle:	
  8617                           ; 1 bytes @ 0x0
  8618                           
  8619  0070                     ?_led_clear_state:	
  8620                           ; 1 bytes @ 0x0
  8621                           
  8622  0070                     ?_led_set_state:	
  8623                           ; 1 bytes @ 0x0
  8624                           
  8625  0070                     ?_led_set_custom_bright:	
  8626                           ; 1 bytes @ 0x0
  8627                           
  8628  0070                     ?_osc_init:	
  8629                           ; 1 bytes @ 0x0
  8630                           
  8631  0070                     ?_pwm1_load_duty:	
  8632                           ; 1 bytes @ 0x0
  8633                           
  8634  0070                     ?_pwm2_load_duty:	
  8635                           ; 1 bytes @ 0x0
  8636                           
  8637  0070                     ?_pwm3_load_duty:	
  8638                           ; 1 bytes @ 0x0
  8639                           
  8640  0070                     ?_pwm4_load_duty:	
  8641                           ; 1 bytes @ 0x0
  8642                           
  8643  0070                     ?_pwm5_load_duty:	
  8644                           ; 1 bytes @ 0x0
  8645                           
  8646  0070                     ?_tmr1_starttimer:	
  8647                           ; 1 bytes @ 0x0
  8648                           
  8649  0070                     ?_tmr1_stoptimer:	
  8650                           ; 1 bytes @ 0x0
  8651                           
  8652  0070                     ?_tmr1_gate_enabled_isr:	
  8653                           ; 1 bytes @ 0x0
  8654                           
  8655  0070                     ?_tmr1_gate_isr:	
  8656                           ; 1 bytes @ 0x0
  8657                           
  8658  0070                     ?_tmr2_reload:	
  8659                           ; 1 bytes @ 0x0
  8660                           
  8661  0070                     ?_tmr2_starttimer:	
  8662                           ; 1 bytes @ 0x0
  8663                           
  8664  0070                     ?_tmr2_enabled_isr:	
  8665                           ; 1 bytes @ 0x0
  8666                           
  8667  0070                     ?_tmr2_disabled_isr:	
  8668                           ; 1 bytes @ 0x0
  8669                           
  8670  0070                     ??_tmr2_disabled_isr:	
  8671                           ; 1 bytes @ 0x0
  8672                           
  8673  0070                     ?_tmr2_isr:	
  8674                           ; 1 bytes @ 0x0
  8675                           
  8676  0070                     ?_main:	
  8677                           ; 1 bytes @ 0x0
  8678                           
  8679  0070                     ?_ISR:	
  8680                           ; 1 bytes @ 0x0
  8681                           
  8682  0070                     ?_ir_get_index:	
  8683                           ; 1 bytes @ 0x0
  8684                           
  8685  0070                     ?_ir_long_action:	
  8686                           ; 1 bytes @ 0x0
  8687                           
  8688  0070                     ?_ir_short_action:	
  8689                           ; 1 bytes @ 0x0
  8690                           
  8691  0070                     ?_led_turnon_direct:	
  8692                           ; 1 bytes @ 0x0
  8693                           
  8694  0070                     ??_led_turnon_direct:	
  8695                           ; 1 bytes @ 0x0
  8696                           
  8697  0070                     ?_led_turnoff_direct:	
  8698                           ; 1 bytes @ 0x0
  8699                           
  8700  0070                     ??_led_turnoff_direct:	
  8701                           ; 1 bytes @ 0x0
  8702                           
  8703  0070                     ?_led_turnon_ramp:	
  8704                           ; 1 bytes @ 0x0
  8705                           
  8706  0070                     ?_led_turnoff_ramp:	
  8707                           ; 1 bytes @ 0x0
  8708                           
  8709  0070                     ?_led_notice:	
  8710                           ; 1 bytes @ 0x0
  8711                           
  8712  0070                     ??_led_notice:	
  8713                           ; 1 bytes @ 0x0
  8714                           
  8715  0070                     ?_led_ramp:	
  8716                           ; 1 bytes @ 0x0
  8717                           
  8718  0070                     ?i1_tmr1_writetimer:	
  8719                           ; 1 bytes @ 0x0
  8720                           
  8721  0070                     ?i1_tmr2_enabled_isr:	
  8722                           ; 1 bytes @ 0x0
  8723                           
  8724  0070                     ??i1_tmr2_enabled_isr:	
  8725                           ; 1 bytes @ 0x0
  8726                           
  8727  0070                     ?i1_ir_get_index:	
  8728                           ; 1 bytes @ 0x0
  8729                           
  8730  0070                     ??i1_ir_get_index:	
  8731                           ; 1 bytes @ 0x0
  8732                           
  8733  0070                     ?i1_led_get_state:	
  8734                           ; 1 bytes @ 0x0
  8735                           
  8736  0070                     ??i1_led_get_state:	
  8737                           ; 1 bytes @ 0x0
  8738                           
  8739  0070                     ?i1_led_get_power_state:	
  8740                           ; 1 bytes @ 0x0
  8741                           
  8742  0070                     ??i1_led_get_power_state:	
  8743                           ; 1 bytes @ 0x0
  8744                           
  8745  0070                     ?i1_util_increase:	
  8746                           ; 1 bytes @ 0x0
  8747                           
  8748  0070                     ?i1_util_decrease:	
  8749                           ; 1 bytes @ 0x0
  8750                           
  8751  0070                     ?i1___bmul:	
  8752                           ; 1 bytes @ 0x0
  8753                           
  8754  0070                     ?_tmr1_readtimer:	
  8755                           ; 1 bytes @ 0x0
  8756                           
  8757  0070                     i1ir_get_index@keynum:	
  8758                           ; 2 bytes @ 0x0
  8759                           
  8760  0070                     i1util_increase@step:	
  8761                           ; 1 bytes @ 0x0
  8762                           
  8763  0070                     i1util_decrease@step:	
  8764                           ; 1 bytes @ 0x0
  8765                           
  8766  0070                     i1___bmul@multiplicand:	
  8767                           ; 1 bytes @ 0x0
  8768                           
  8769  0070                     pwm1_load_duty@duty:	
  8770                           ; 1 bytes @ 0x0
  8771                           
  8772  0070                     pwm2_load_duty@duty:	
  8773                           ; 2 bytes @ 0x0
  8774                           
  8775  0070                     pwm3_load_duty@duty:	
  8776                           ; 2 bytes @ 0x0
  8777                           
  8778  0070                     pwm4_load_duty@duty:	
  8779                           ; 2 bytes @ 0x0
  8780                           
  8781  0070                     pwm5_load_duty@duty:	
  8782                           ; 2 bytes @ 0x0
  8783                           
  8784  0070                     i1tmr1_writetimer@value:	
  8785                           ; 2 bytes @ 0x0
  8786                           
  8787                           
  8788                           ; 2 bytes @ 0x0
  8789  0070                     	ds	1
  8790  0071                     ??i1___bmul:	
  8791  0071                     led_startnotice@cnt:	
  8792                           ; 1 bytes @ 0x1
  8793                           
  8794  0071                     i1ir_get_index@index:	
  8795                           ; 1 bytes @ 0x1
  8796                           
  8797  0071                     i1___bmul@multiplier:	
  8798                           ; 1 bytes @ 0x1
  8799                           
  8800  0071                     i1util_increase@max:	
  8801                           ; 1 bytes @ 0x1
  8802                           
  8803  0071                     i1util_decrease@min:	
  8804                           ; 2 bytes @ 0x1
  8805                           
  8806                           
  8807                           ; 2 bytes @ 0x1
  8808  0071                     	ds	1
  8809  0072                     ??_pwm1_load_duty:	
  8810  0072                     ??_pwm2_load_duty:	
  8811                           ; 1 bytes @ 0x2
  8812                           
  8813  0072                     ??_pwm3_load_duty:	
  8814                           ; 1 bytes @ 0x2
  8815                           
  8816  0072                     ??_pwm4_load_duty:	
  8817                           ; 1 bytes @ 0x2
  8818                           
  8819  0072                     ??_pwm5_load_duty:	
  8820                           ; 1 bytes @ 0x2
  8821                           
  8822  0072                     ??_tmr1_readtimer:	
  8823                           ; 1 bytes @ 0x2
  8824                           
  8825  0072                     ??i1_tmr1_writetimer:	
  8826                           ; 1 bytes @ 0x2
  8827                           
  8828  0072                     i1___bmul@product:	
  8829                           ; 1 bytes @ 0x2
  8830                           
  8831  0072                     tmr1_readtimer@readVal:	
  8832                           ; 1 bytes @ 0x2
  8833                           
  8834                           
  8835                           ; 2 bytes @ 0x2
  8836  0072                     	ds	1
  8837  0073                     ??_led_set_custom:	
  8838  0073                     ??i1_util_increase:	
  8839                           ; 1 bytes @ 0x3
  8840                           
  8841  0073                     ??i1_util_decrease:	
  8842                           ; 1 bytes @ 0x3
  8843                           
  8844                           
  8845                           ; 1 bytes @ 0x3
  8846  0073                     	ds	1
  8847  0074                     ??_led_ramp:	
  8848  0074                     tmr1_readtimer@readValHigh:	
  8849                           ; 1 bytes @ 0x4
  8850                           
  8851                           
  8852                           ; 1 bytes @ 0x4
  8853  0074                     	ds	1
  8854  0075                     tmr1_readtimer@readValLow:	
  8855                           
  8856                           ; 1 bytes @ 0x5
  8857  0075                     	ds	1
  8858  0076                     ??_ir_decode:	
  8859  0076                     led_set_custom@chn:	
  8860                           ; 1 bytes @ 0x6
  8861                           
  8862                           
  8863                           ; 1 bytes @ 0x6
  8864  0076                     	ds	1
  8865  0077                     led_set_custom@i:	
  8866  0077                     i1util_increase@src:	
  8867                           ; 1 bytes @ 0x7
  8868                           
  8869  0077                     i1util_decrease@src:	
  8870                           ; 1 bytes @ 0x7
  8871                           
  8872                           
  8873                           ; 1 bytes @ 0x7
  8874  0077                     	ds	1
  8875  0078                     ?i1_led_set_increase_bright:	
  8876  0078                     ?i1_led_set_decrease_bright:	
  8877                           ; 1 bytes @ 0x8
  8878                           
  8879  0078                     i1led_set_increase_bright@step:	
  8880                           ; 1 bytes @ 0x8
  8881                           
  8882  0078                     i1led_set_decrease_bright@step:	
  8883                           ; 1 bytes @ 0x8
  8884                           
  8885                           
  8886                           ; 1 bytes @ 0x8
  8887  0078                     	ds	1
  8888  0079                     i1led_set_increase_bright@max:	
  8889  0079                     i1led_set_decrease_bright@min:	
  8890                           ; 2 bytes @ 0x9
  8891                           
  8892                           
  8893                           ; 2 bytes @ 0x9
  8894  0079                     	ds	1
  8895  007A                     ir_decode@reKeyNum:	
  8896  007A                     led_ramp@i:	
  8897                           ; 1 bytes @ 0xA
  8898                           
  8899                           
  8900                           ; 1 bytes @ 0xA
  8901  007A                     	ds	1
  8902  007B                     ??i1_led_set_increase_bright:	
  8903  007B                     ??i1_led_set_decrease_bright:	
  8904                           ; 1 bytes @ 0xB
  8905                           
  8906  007B                     ir_decode@keyNum:	
  8907                           ; 1 bytes @ 0xB
  8908                           
  8909  007B                     i1led_set_increase_bright@chn:	
  8910                           ; 1 bytes @ 0xB
  8911                           
  8912  007B                     i1led_set_decrease_bright@chn:	
  8913                           ; 1 bytes @ 0xB
  8914                           
  8915                           
  8916                           ; 1 bytes @ 0xB
  8917  007B                     	ds	1
  8918  007C                     ??_ir_long_action:	
  8919  007C                     ir_long_action@idx:	
  8920                           ; 1 bytes @ 0xC
  8921                           
  8922  007C                     ir_decode@hVal:	
  8923                           ; 1 bytes @ 0xC
  8924                           
  8925                           
  8926                           ; 2 bytes @ 0xC
  8927  007C                     	ds	1
  8928  007D                     ??_led_run:	
  8929  007D                     ??_tmr2_isr:	
  8930                           ; 1 bytes @ 0xD
  8931                           
  8932                           
  8933                           ; 1 bytes @ 0xD
  8934  007D                     	ds	1
  8935  007E                     ??_tmr1_gate_isr:	
  8936  007E                     ??_ISR:	
  8937                           ; 1 bytes @ 0xE
  8938                           
  8939                           
  8940                           	psect	cstackBANK0
  8941  005E                     __pcstackBANK0:	
  8942                           ; 1 bytes @ 0xE
  8943                           
  8944  005E                     ??_led_get_state:	
  8945  005E                     ??_led_get_power_state:	
  8946                           ; 1 bytes @ 0x0
  8947                           
  8948  005E                     ??_led_toggle:	
  8949                           ; 1 bytes @ 0x0
  8950                           
  8951  005E                     ?_led_setcolour:	
  8952                           ; 1 bytes @ 0x0
  8953                           
  8954  005E                     ??_led_clear_state:	
  8955                           ; 1 bytes @ 0x0
  8956                           
  8957  005E                     ??_led_set_state:	
  8958                           ; 1 bytes @ 0x0
  8959                           
  8960  005E                     ?_util_increase:	
  8961                           ; 1 bytes @ 0x0
  8962                           
  8963  005E                     ?_util_decrease:	
  8964                           ; 1 bytes @ 0x0
  8965                           
  8966  005E                     ?_gpio_set:	
  8967                           ; 1 bytes @ 0x0
  8968                           
  8969  005E                     ?_gpio_set_outputpps:	
  8970                           ; 1 bytes @ 0x0
  8971                           
  8972  005E                     ?_gpio_set_intputpps:	
  8973                           ; 1 bytes @ 0x0
  8974                           
  8975  005E                     ??_osc_init:	
  8976                           ; 1 bytes @ 0x0
  8977                           
  8978  005E                     ?_tmr1_init:	
  8979                           ; 1 bytes @ 0x0
  8980                           
  8981  005E                     ?_tmr1_writetimer:	
  8982                           ; 1 bytes @ 0x0
  8983                           
  8984  005E                     ??_tmr1_starttimer:	
  8985                           ; 1 bytes @ 0x0
  8986                           
  8987  005E                     ??_tmr1_stoptimer:	
  8988                           ; 1 bytes @ 0x0
  8989                           
  8990  005E                     ??_tmr1_gate_enabled_isr:	
  8991                           ; 1 bytes @ 0x0
  8992                           
  8993  005E                     ?_tmr2_init:	
  8994                           ; 1 bytes @ 0x0
  8995                           
  8996  005E                     ??_tmr2_reload:	
  8997                           ; 1 bytes @ 0x0
  8998                           
  8999  005E                     ??_tmr2_starttimer:	
  9000                           ; 1 bytes @ 0x0
  9001                           
  9002  005E                     ??_tmr2_enabled_isr:	
  9003                           ; 1 bytes @ 0x0
  9004                           
  9005  005E                     ??_ir_get_index:	
  9006                           ; 1 bytes @ 0x0
  9007                           
  9008  005E                     ??_led_turnon_ramp:	
  9009                           ; 1 bytes @ 0x0
  9010                           
  9011  005E                     ??_led_turnoff_ramp:	
  9012                           ; 1 bytes @ 0x0
  9013                           
  9014  005E                     ?_eeprom_write_byte:	
  9015                           ; 1 bytes @ 0x0
  9016                           
  9017  005E                     ?_eeprom_read_byte:	
  9018                           ; 1 bytes @ 0x0
  9019                           
  9020  005E                     ?___bmul:	
  9021                           ; 1 bytes @ 0x0
  9022                           
  9023  005E                     gpio_set@pin:	
  9024                           ; 1 bytes @ 0x0
  9025                           
  9026  005E                     gpio_set_outputpps@pin:	
  9027                           ; 1 bytes @ 0x0
  9028                           
  9029  005E                     gpio_set_intputpps@pin:	
  9030                           ; 1 bytes @ 0x0
  9031                           
  9032  005E                     tmr1_init@ckps:	
  9033                           ; 1 bytes @ 0x0
  9034                           
  9035  005E                     tmr2_init@outps:	
  9036                           ; 1 bytes @ 0x0
  9037                           
  9038  005E                     tmr2_reload@value:	
  9039                           ; 1 bytes @ 0x0
  9040                           
  9041  005E                     ir_get_index@keynum:	
  9042                           ; 1 bytes @ 0x0
  9043                           
  9044  005E                     led_turnon_ramp@i:	
  9045                           ; 1 bytes @ 0x0
  9046                           
  9047  005E                     led_turnoff_ramp@i:	
  9048                           ; 1 bytes @ 0x0
  9049                           
  9050  005E                     util_increase@step:	
  9051                           ; 1 bytes @ 0x0
  9052                           
  9053  005E                     util_decrease@step:	
  9054                           ; 1 bytes @ 0x0
  9055                           
  9056  005E                     ___bmul@multiplicand:	
  9057                           ; 1 bytes @ 0x0
  9058                           
  9059  005E                     tmr1_writetimer@value:	
  9060                           ; 1 bytes @ 0x0
  9061                           
  9062  005E                     led_setcolour@max:	
  9063                           ; 2 bytes @ 0x0
  9064                           
  9065  005E                     eeprom_write_byte@addr:	
  9066                           ; 2 bytes @ 0x0
  9067                           
  9068  005E                     eeprom_read_byte@addr:	
  9069                           ; 2 bytes @ 0x0
  9070                           
  9071                           
  9072                           ; 2 bytes @ 0x0
  9073  005E                     	ds	1
  9074  005F                     ??_led_init:	
  9075  005F                     ??_gpio_set_intputpps:	
  9076                           ; 1 bytes @ 0x1
  9077                           
  9078  005F                     ??___bmul:	
  9079                           ; 1 bytes @ 0x1
  9080                           
  9081  005F                     gpio_set@state:	
  9082                           ; 1 bytes @ 0x1
  9083                           
  9084  005F                     gpio_set_outputpps@outputpps:	
  9085                           ; 1 bytes @ 0x1
  9086                           
  9087  005F                     gpio_set_intputpps@port:	
  9088                           ; 1 bytes @ 0x1
  9089                           
  9090  005F                     tmr1_init@src:	
  9091                           ; 1 bytes @ 0x1
  9092                           
  9093  005F                     ir_get_index@index:	
  9094                           ; 1 bytes @ 0x1
  9095                           
  9096  005F                     led_set_state@idx:	
  9097                           ; 1 bytes @ 0x1
  9098                           
  9099  005F                     ___bmul@product:	
  9100                           ; 1 bytes @ 0x1
  9101                           
  9102  005F                     tmr2_init@cb:	
  9103                           ; 1 bytes @ 0x1
  9104                           
  9105  005F                     util_increase@max:	
  9106                           ; 2 bytes @ 0x1
  9107                           
  9108  005F                     util_decrease@min:	
  9109                           ; 2 bytes @ 0x1
  9110                           
  9111                           
  9112                           ; 2 bytes @ 0x1
  9113  005F                     	ds	1
  9114  0060                     ??_led_setcolour:	
  9115  0060                     ?_eeprom_read_buffer:	
  9116                           ; 1 bytes @ 0x2
  9117                           
  9118  0060                     ??_gpio_set:	
  9119                           ; 1 bytes @ 0x2
  9120                           
  9121  0060                     ??_gpio_set_outputpps:	
  9122                           ; 1 bytes @ 0x2
  9123                           
  9124  0060                     ??_tmr1_writetimer:	
  9125                           ; 1 bytes @ 0x2
  9126                           
  9127  0060                     ??_eeprom_read_byte:	
  9128                           ; 1 bytes @ 0x2
  9129                           
  9130  0060                     led_setcolour@chn:	
  9131                           ; 1 bytes @ 0x2
  9132                           
  9133  0060                     eeprom_write_byte@byte:	
  9134                           ; 1 bytes @ 0x2
  9135                           
  9136  0060                     ___bmul@multiplier:	
  9137                           ; 1 bytes @ 0x2
  9138                           
  9139  0060                     tmr1_init@cb:	
  9140                           ; 1 bytes @ 0x2
  9141                           
  9142  0060                     eeprom_read_buffer@addr:	
  9143                           ; 2 bytes @ 0x2
  9144                           
  9145                           
  9146                           ; 2 bytes @ 0x2
  9147  0060                     	ds	1
  9148  0061                     ??_led_set_custom_bright:	
  9149  0061                     ??_util_increase:	
  9150                           ; 1 bytes @ 0x3
  9151                           
  9152  0061                     ??_util_decrease:	
  9153                           ; 1 bytes @ 0x3
  9154                           
  9155  0061                     ??_tmr2_init:	
  9156                           ; 1 bytes @ 0x3
  9157                           
  9158  0061                     ??_eeprom_write_byte:	
  9159                           ; 1 bytes @ 0x3
  9160                           
  9161  0061                     gpio_set@port:	
  9162                           ; 1 bytes @ 0x3
  9163                           
  9164  0061                     led_setcolour@i:	
  9165                           ; 1 bytes @ 0x3
  9166                           
  9167  0061                     eeprom_write_byte@state:	
  9168                           ; 1 bytes @ 0x3
  9169                           
  9170                           
  9171                           ; 1 bytes @ 0x3
  9172  0061                     	ds	1
  9173  0062                     ?_eeprom_write_buffer:	
  9174  0062                     ??_tmr1_init:	
  9175                           ; 1 bytes @ 0x4
  9176                           
  9177  0062                     gpio_set@offset:	
  9178                           ; 1 bytes @ 0x4
  9179                           
  9180  0062                     tmr2_init@ckps:	
  9181                           ; 1 bytes @ 0x4
  9182                           
  9183  0062                     eeprom_read_buffer@pbuf:	
  9184                           ; 1 bytes @ 0x4
  9185                           
  9186  0062                     eeprom_write_buffer@addr:	
  9187                           ; 1 bytes @ 0x4
  9188                           
  9189                           
  9190                           ; 2 bytes @ 0x4
  9191  0062                     	ds	1
  9192  0063                     gpio_set@mask:	
  9193  0063                     tmr1_init@cs:	
  9194                           ; 1 bytes @ 0x5
  9195                           
  9196  0063                     eeprom_read_buffer@len:	
  9197                           ; 1 bytes @ 0x5
  9198                           
  9199                           
  9200                           ; 1 bytes @ 0x5
  9201  0063                     	ds	1
  9202  0064                     ??_eeprom_read_buffer:	
  9203  0064                     led_set_custom_bright@chn:	
  9204                           ; 1 bytes @ 0x6
  9205                           
  9206  0064                     eeprom_write_buffer@pbuf:	
  9207                           ; 1 bytes @ 0x6
  9208                           
  9209  0064                     eeprom_read_buffer@i:	
  9210                           ; 1 bytes @ 0x6
  9211                           
  9212                           
  9213                           ; 1 bytes @ 0x6
  9214  0064                     	ds	1
  9215  0065                     ??_led_para_init:	
  9216  0065                     led_set_custom_bright@i:	
  9217                           ; 1 bytes @ 0x7
  9218                           
  9219  0065                     util_increase@src:	
  9220                           ; 1 bytes @ 0x7
  9221                           
  9222  0065                     util_decrease@src:	
  9223                           ; 1 bytes @ 0x7
  9224                           
  9225  0065                     eeprom_write_buffer@len:	
  9226                           ; 1 bytes @ 0x7
  9227                           
  9228                           
  9229                           ; 1 bytes @ 0x7
  9230  0065                     	ds	1
  9231  0066                     ?_led_set_increase_bright:	
  9232  0066                     ?_led_set_decrease_bright:	
  9233                           ; 1 bytes @ 0x8
  9234                           
  9235  0066                     ??_eeprom_write_buffer:	
  9236                           ; 1 bytes @ 0x8
  9237                           
  9238  0066                     gpio_set_outputpps@port:	
  9239                           ; 1 bytes @ 0x8
  9240                           
  9241  0066                     led_set_increase_bright@step:	
  9242                           ; 1 bytes @ 0x8
  9243                           
  9244  0066                     led_set_decrease_bright@step:	
  9245                           ; 1 bytes @ 0x8
  9246                           
  9247  0066                     eeprom_write_buffer@i:	
  9248                           ; 1 bytes @ 0x8
  9249                           
  9250                           
  9251                           ; 1 bytes @ 0x8
  9252  0066                     	ds	1
  9253  0067                     ??_ir_tmr1_overflow_rest:	
  9254  0067                     ??_led_save_para:	
  9255                           ; 1 bytes @ 0x9
  9256                           
  9257  0067                     ?_pwm1_init:	
  9258                           ; 1 bytes @ 0x9
  9259                           
  9260  0067                     ?_pwm2_init:	
  9261                           ; 1 bytes @ 0x9
  9262                           
  9263  0067                     ?_pwm3_init:	
  9264                           ; 1 bytes @ 0x9
  9265                           
  9266  0067                     ?_pwm4_init:	
  9267                           ; 1 bytes @ 0x9
  9268                           
  9269  0067                     ?_pwm5_init:	
  9270                           ; 1 bytes @ 0x9
  9271                           
  9272  0067                     pwm1_init@pin:	
  9273                           ; 1 bytes @ 0x9
  9274                           
  9275  0067                     pwm2_init@pin:	
  9276                           ; 1 bytes @ 0x9
  9277                           
  9278  0067                     pwm3_init@pin:	
  9279                           ; 1 bytes @ 0x9
  9280                           
  9281  0067                     pwm4_init@pin:	
  9282                           ; 1 bytes @ 0x9
  9283                           
  9284  0067                     pwm5_init@pin:	
  9285                           ; 1 bytes @ 0x9
  9286                           
  9287  0067                     led_set_increase_bright@max:	
  9288                           ; 1 bytes @ 0x9
  9289                           
  9290  0067                     led_set_decrease_bright@min:	
  9291                           ; 2 bytes @ 0x9
  9292                           
  9293                           
  9294                           ; 2 bytes @ 0x9
  9295  0067                     	ds	1
  9296  0068                     pwm1_init@src:	
  9297  0068                     pwm2_init@src:	
  9298                           ; 1 bytes @ 0xA
  9299                           
  9300  0068                     pwm3_init@src:	
  9301                           ; 1 bytes @ 0xA
  9302                           
  9303  0068                     pwm4_init@src:	
  9304                           ; 1 bytes @ 0xA
  9305                           
  9306  0068                     pwm5_init@src:	
  9307                           ; 1 bytes @ 0xA
  9308                           
  9309                           
  9310                           ; 1 bytes @ 0xA
  9311  0068                     	ds	1
  9312  0069                     ??_led_set_increase_bright:	
  9313  0069                     ??_led_set_decrease_bright:	
  9314                           ; 1 bytes @ 0xB
  9315                           
  9316  0069                     ??_pwm1_init:	
  9317                           ; 1 bytes @ 0xB
  9318                           
  9319  0069                     ??_pwm2_init:	
  9320                           ; 1 bytes @ 0xB
  9321                           
  9322  0069                     ??_pwm3_init:	
  9323                           ; 1 bytes @ 0xB
  9324                           
  9325  0069                     ??_pwm4_init:	
  9326                           ; 1 bytes @ 0xB
  9327                           
  9328  0069                     ??_pwm5_init:	
  9329                           ; 1 bytes @ 0xB
  9330                           
  9331  0069                     pwm1_init@port:	
  9332                           ; 1 bytes @ 0xB
  9333                           
  9334  0069                     pwm5_init@port:	
  9335                           ; 1 bytes @ 0xB
  9336                           
  9337  0069                     led_set_increase_bright@chn:	
  9338                           ; 1 bytes @ 0xB
  9339                           
  9340  0069                     led_set_decrease_bright@chn:	
  9341                           ; 1 bytes @ 0xB
  9342                           
  9343                           
  9344                           ; 1 bytes @ 0xB
  9345  0069                     	ds	1
  9346  006A                     ??_ir_short_action:	
  9347  006A                     pwm2_init@port:	
  9348                           ; 1 bytes @ 0xC
  9349                           
  9350  006A                     pwm3_init@port:	
  9351                           ; 1 bytes @ 0xC
  9352                           
  9353  006A                     pwm4_init@port:	
  9354                           ; 1 bytes @ 0xC
  9355                           
  9356                           
  9357                           ; 1 bytes @ 0xC
  9358  006A                     	ds	1
  9359  006B                     ??_app_init:	
  9360  006B                     ir_short_action@idx:	
  9361                           ; 1 bytes @ 0xD
  9362                           
  9363                           
  9364                           ; 1 bytes @ 0xD
  9365  006B                     	ds	1
  9366  006C                     ??_ir_action:	
  9367  006C                     led_para_init@i_1144:	
  9368                           ; 1 bytes @ 0xE
  9369                           
  9370                           
  9371                           ; 1 bytes @ 0xE
  9372  006C                     	ds	1
  9373  006D                     led_para_init@i:	
  9374                           
  9375                           ; 1 bytes @ 0xF
  9376  006D                     	ds	1
  9377  006E                     led_para_init@j:	
  9378                           
  9379                           ; 1 bytes @ 0x10
  9380  006E                     	ds	1
  9381  006F                     ??_main:	
  9382                           
  9383                           	psect	swtext1
  9384  07ED                     __pswtext1:	
  9385  07ED                     S3064:	
  9386  07ED  3180  28E4         	ljmp	l2284
  9387  07EF  3180  28F5         	ljmp	l2286
  9388  07F1  3180  28FB         	ljmp	l2288
  9389  07F3  3181  2901         	ljmp	l2290
  9390  07F5  3181  2907         	ljmp	l2292
  9391                           
  9392                           	psect	intentry
  9393  0004                     __pintentry:	
  9394 ;; *************** function _ISR *****************
  9395 ;; Defined at:
  9396 ;;		line 59 in file "src/app_main.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;		None
  9399 ;; Auto vars:     Size  Location     Type
  9400 ;;		None
  9401 ;; Return value:  Size  Location     Type
  9402 ;;                  1    wreg      void 
  9403 ;; Registers used:
  9404 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9405 ;; Tracked objects:
  9406 ;;		On entry : 0/0
  9407 ;;		On exit  : 0/0
  9408 ;;		Unchanged: 0/0
  9409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9414 ;;Total ram usage:        0 bytes
  9415 ;; Hardware stack levels used:    1
  9416 ;; Hardware stack levels required when called:    5
  9417 ;; This function calls:
  9418 ;;		_tmr1_gate_isr
  9419 ;;		_tmr2_isr
  9420 ;; This function is called by:
  9421 ;;		Interrupt level 1
  9422 ;; This function uses a non-reentrant model
  9423 ;;
  9424                           
  9425  0004                     _ISR:	
  9426                           
  9427                           ;incstack = 0
  9428  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  9429                           
  9430                           ; Regs used in _ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9431  0005  3180               	pagesel	$
  9432                           
  9433                           ;app_main.c: 61: if(PIE1bits.TMR1GIE && PIR1bits.TMR1GIF) {
  9434  0006  0021               	movlb	1	; select bank1
  9435  0007  1F91               	btfss	17,7	;volatile
  9436  0008  2810               	goto	i1l268
  9437  0009  0020               	movlb	0	; select bank0
  9438  000A  1F91               	btfss	17,7	;volatile
  9439  000B  2810               	goto	i1l268
  9440                           
  9441                           ;app_main.c: 62: tmr1_gate_isr();
  9442  000C  3187  27D8  3180   	fcall	_tmr1_gate_isr
  9443                           
  9444                           ;app_main.c: 63: } else if(PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
  9445  000F  2818               	goto	i1l271
  9446  0010                     i1l268:	
  9447  0010  0021               	movlb	1	; select bank1
  9448  0011  1C91               	btfss	17,1	;volatile
  9449  0012  2818               	goto	i1l271
  9450  0013  0020               	movlb	0	; select bank0
  9451  0014  1C91               	btfss	17,1	;volatile
  9452  0015  2818               	goto	i1l271
  9453                           
  9454                           ;app_main.c: 64: tmr2_isr();
  9455  0016  3187  27CD         	fcall	_tmr2_isr
  9456  0018                     i1l271:	
  9457  0018  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  9458  0019  0009               	retfie
  9459  001A                     __end_of_ISR:	
  9460                           
  9461                           	psect	text46
  9462  07CD                     __ptext46:	
  9463 ;; *************** function _tmr2_isr *****************
  9464 ;; Defined at:
  9465 ;;		line 33 in file "src/drv_tmr2xx.c"
  9466 ;; Parameters:    Size  Location     Type
  9467 ;;		None
  9468 ;; Auto vars:     Size  Location     Type
  9469 ;;		None
  9470 ;; Return value:  Size  Location     Type
  9471 ;;                  1    wreg      void 
  9472 ;; Registers used:
  9473 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9474 ;; Tracked objects:
  9475 ;;		On entry : 1F/0
  9476 ;;		On exit  : 0/0
  9477 ;;		Unchanged: 0/0
  9478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9482 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9483 ;;Total ram usage:        0 bytes
  9484 ;; Hardware stack levels used:    1
  9485 ;; Hardware stack levels required when called:    4
  9486 ;; This function calls:
  9487 ;;		Absolute function
  9488 ;;		_led_run
  9489 ;; This function is called by:
  9490 ;;		_ISR
  9491 ;; This function uses a non-reentrant model
  9492 ;;
  9493                           
  9494                           
  9495                           ;psect for function _tmr2_isr
  9496  07CD                     _tmr2_isr:	
  9497                           
  9498                           ;drv_tmr2xx.c: 35: PIR1bits.TMR2IF = 0;
  9499                           
  9500                           ;incstack = 0
  9501                           ; Regs used in _tmr2_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9502  07CD  1091               	bcf	17,1	;volatile
  9503                           
  9504                           ;drv_tmr2xx.c: 36: if(tmr2_isr_cb != (0)) {
  9505  07CE  083D               	movf	_tmr2_isr_cb,w
  9506  07CF  043E               	iorwf	_tmr2_isr_cb+1,w
  9507  07D0  1903               	btfsc	3,2
  9508  07D1  0008               	return
  9509                           
  9510                           ;drv_tmr2xx.c: 37: tmr2_isr_cb();
  9511  07D2  083E               	movf	_tmr2_isr_cb+1,w
  9512  07D3  008A               	movwf	10
  9513  07D4  083D               	movf	_tmr2_isr_cb,w
  9514  07D5  000A               	callw
  9515  07D6  3187               	pagesel	$
  9516  07D7  0008               	return
  9517  07D8                     __end_of_tmr2_isr:	
  9518                           
  9519                           	psect	text47
  9520  0DC9                     __ptext47:	
  9521 ;; *************** function _led_run *****************
  9522 ;; Defined at:
  9523 ;;		line 206 in file "src/app_led.c"
  9524 ;; Parameters:    Size  Location     Type
  9525 ;;		None
  9526 ;; Auto vars:     Size  Location     Type
  9527 ;;		None
  9528 ;; Return value:  Size  Location     Type
  9529 ;;                  1    wreg      void 
  9530 ;; Registers used:
  9531 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9532 ;; Tracked objects:
  9533 ;;		On entry : 1F/0
  9534 ;;		On exit  : 10/0
  9535 ;;		Unchanged: 0/0
  9536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9541 ;;Total ram usage:        0 bytes
  9542 ;; Hardware stack levels used:    1
  9543 ;; Hardware stack levels required when called:    3
  9544 ;; This function calls:
  9545 ;;		_ir_long_action
  9546 ;;		_led_notice
  9547 ;;		_led_ramp
  9548 ;; This function is called by:
  9549 ;;		_app_init
  9550 ;;		_tmr2_isr
  9551 ;; This function uses a non-reentrant model
  9552 ;;
  9553                           
  9554                           
  9555                           ;psect for function _led_run
  9556  0DC9                     _led_run:	
  9557                           
  9558                           ;app_led.c: 208: static uint8_t cnt = 0;
  9559                           ;app_led.c: 210: if(m_led_run_para.mStartNotice) {
  9560                           
  9561                           ;incstack = 0
  9562                           ; Regs used in _led_run: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9563  0DC9  1CA0               	btfss	_m_led_run_para,1
  9564  0DCA  2DCC               	goto	i1l2880
  9565                           
  9566                           ;app_led.c: 211: led_notice();
  9567  0DCB  2F4C               	ljmp	i1l2488
  9568  0DCC                     i1l2880:	
  9569                           ;app_led.c: 212: } else {
  9570                           
  9571                           
  9572                           ;app_led.c: 213: cnt ++;
  9573  0DCC  0AC1               	incf	led_run@cnt,f
  9574                           
  9575                           ;app_led.c: 214: if((cnt & 0x03) == 0x00) {
  9576  0DCD  0841               	movf	led_run@cnt,w
  9577  0DCE  3903               	andlw	3
  9578  0DCF  1D03               	btfss	3,2
  9579  0DD0  2DD4               	goto	i1l2888
  9580                           
  9581                           ;app_led.c: 215: cnt = 0;
  9582  0DD1  01C1               	clrf	led_run@cnt
  9583                           
  9584                           ;app_led.c: 216: ir_long_action();
  9585  0DD2  25D5  318D         	fcall	_ir_long_action
  9586  0DD4                     i1l2888:	
  9587                           
  9588                           ;app_led.c: 217: }
  9589                           ;app_led.c: 218: led_ramp();
  9590  0DD4  2F89               	ljmp	i1l2508
  9591  0DD5                     __end_of_led_run:	
  9592  0DD5                     __ptext57:	
  9593 ;; *************** function _ir_long_action *****************
  9594 ;; Defined at:
  9595 ;;		line 219 in file "src/app_ir.c"
  9596 ;; Parameters:    Size  Location     Type
  9597 ;;		None
  9598 ;; Auto vars:     Size  Location     Type
  9599 ;;  idx             1   12[COMMON] unsigned char 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9604 ;; Tracked objects:
  9605 ;;		On entry : 1F/0
  9606 ;;		On exit  : 1E/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9610 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9612 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9613 ;;Total ram usage:        1 bytes
  9614 ;; Hardware stack levels used:    1
  9615 ;; Hardware stack levels required when called:    2
  9616 ;; This function calls:
  9617 ;;		_led_set_custom
  9618 ;;		_led_startnotice
  9619 ;;		i1_ir_get_index
  9620 ;;		i1_led_get_state
  9621 ;;		i1_led_set_decrease_bright
  9622 ;;		i1_led_set_increase_bright
  9623 ;; This function is called by:
  9624 ;;		_led_run
  9625 ;; This function uses a non-reentrant model
  9626 ;;
  9627                           
  9628                           
  9629                           ;psect for function _ir_long_action
  9630  0DD5                     _ir_long_action:	
  9631                           
  9632                           ;app_ir.c: 222: static uint8_t n = 0;
  9633                           ;app_ir.c: 223: static uint16_t cnt = 0;
  9634                           ;app_ir.c: 225: if(!m_ir_state.mRptKey) {
  9635                           
  9636                           ;incstack = 0
  9637                           ; Regs used in _ir_long_action: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9638  0DD5  1CBB               	btfss	_m_ir_state,1
  9639  0DD6  0008               	return
  9640                           
  9641                           ;app_ir.c: 227: }
  9642                           ;app_ir.c: 228: if(led_get_state()) {
  9643  0DD7  269F  318D         	fcall	i1_led_get_state
  9644  0DD9  3A00               	xorlw	0
  9645  0DDA  1D03               	btfss	3,2
  9646  0DDB  0008               	return
  9647  0DDC  0020               	movlb	0	; select bank0
  9648  0DDD  0844               	movf	_KeyValue,w
  9649                           
  9650                           ; Switch size 1, requested type "space"
  9651                           ; Number of cases is 14, Range of values is 4 to 76
  9652                           ; switch strategies available:
  9653                           ; Name         Instructions Cycles
  9654                           ; simple_byte           43    22 (average)
  9655                           ; direct_byte          155     9 (fixed)
  9656                           ; jumptable            263     9 (fixed)
  9657                           ;	Chosen strategy is simple_byte
  9658  0DDE  3A04               	xorlw	4	; case 4
  9659  0DDF  1903               	skipnz
  9660  0DE0  2E20               	goto	i1l2402
  9661  0DE1  3A09               	xorlw	9	; case 13
  9662  0DE2  1903               	skipnz
  9663  0DE3  2E31               	goto	i1l2412
  9664  0DE4  3A03               	xorlw	3	; case 14
  9665  0DE5  1903               	skipnz
  9666  0DE6  2E20               	goto	i1l2402
  9667  0DE7  3A01               	xorlw	1	; case 15
  9668  0DE8  1903               	skipnz
  9669  0DE9  2E20               	goto	i1l2402
  9670  0DEA  3A1E               	xorlw	30	; case 17
  9671  0DEB  1903               	skipnz
  9672  0DEC  2E20               	goto	i1l451
  9673  0DED  3A03               	xorlw	3	; case 18
  9674  0DEE  1903               	skipnz
  9675  0DEF  2E09               	goto	i1l2392
  9676  0DF0  3A06               	xorlw	6	; case 20
  9677  0DF1  1903               	skipnz
  9678  0DF2  2E09               	goto	i1l2392
  9679  0DF3  3A01               	xorlw	1	; case 21
  9680  0DF4  1903               	skipnz
  9681  0DF5  2E31               	goto	i1l2412
  9682  0DF6  3A03               	xorlw	3	; case 22
  9683  0DF7  1903               	skipnz
  9684  0DF8  2E20               	goto	i1l2402
  9685  0DF9  3A0D               	xorlw	13	; case 27
  9686  0DFA  1903               	skipnz
  9687  0DFB  2E09               	goto	i1l444
  9688  0DFC  3A06               	xorlw	6	; case 29
  9689  0DFD  1903               	skipnz
  9690  0DFE  2E31               	goto	i1l456
  9691  0DFF  3A03               	xorlw	3	; case 30
  9692  0E00  1903               	skipnz
  9693  0E01  2E09               	goto	i1l2392
  9694  0E02  3A01               	xorlw	1	; case 31
  9695  0E03  1903               	skipnz
  9696  0E04  2E31               	goto	i1l2412
  9697  0E05  3A53               	xorlw	83	; case 76
  9698  0E06  1903               	skipnz
  9699  0E07  2E09               	goto	i1l2392
  9700  0E08  2E45               	goto	i1l438
  9701  0E09                     i1l444:	
  9702  0E09                     i1l2392:	
  9703                           
  9704                           ;app_ir.c: 234: case 0x12:
  9705                           ;app_ir.c: 235: case 0x4C:
  9706                           ;app_ir.c: 236: case 0x1E:
  9707                           ;app_ir.c: 237: case 0x14:
  9708                           ;app_ir.c: 238: cnt ++;
  9709                           
  9710                           ;app_ir.c: 239: if((cnt & 0x03) == 0x00) {
  9711  0E09  27F5  318D         	fcall	PL26	;call to abstracted procedure
  9712  0E0B  1D03               	btfss	3,2
  9713  0E0C  0008               	return
  9714                           
  9715                           ;app_ir.c: 240: cnt = 0;
  9716  0E0D  01B7               	clrf	ir_long_action@cnt
  9717  0E0E  01B8               	clrf	ir_long_action@cnt+1
  9718                           
  9719                           ;app_ir.c: 241: idx = ir_get_index(KeyValue);
  9720  0E0F  0844               	movf	_KeyValue,w
  9721  0E10  2646  318D         	fcall	i1_ir_get_index
  9722  0E12  00FC               	movwf	ir_long_action@idx
  9723                           
  9724                           ;app_ir.c: 242: led_set_increase_bright(idx,4,max_bright[idx]);
  9725  0E13  3004               	movlw	4
  9726  0E14  00F8               	movwf	i1led_set_increase_bright@step
  9727  0E15  357C               	lslf	ir_long_action@idx,w
  9728  0E16  3E4F               	addlw	(low (_max_bright| 0))& (0+255)
  9729  0E17  0086               	movwf	6
  9730  0E18  0187               	clrf	7
  9731  0E19  3F40               	moviw [0]fsr1
  9732  0E1A  00F9               	movwf	i1led_set_increase_bright@max
  9733  0E1B  3F41               	moviw [1]fsr1
  9734  0E1C  00FA               	movwf	i1led_set_increase_bright@max+1
  9735  0E1D  087C               	movf	ir_long_action@idx,w
  9736  0E1E  2719               	fcall	i1_led_set_increase_bright
  9737  0E1F  0008               	return
  9738  0E20                     i1l451:	
  9739  0E20                     i1l2402:	
  9740                           
  9741                           ;app_ir.c: 246: case 0x16:
  9742                           ;app_ir.c: 247: case 0x04:
  9743                           ;app_ir.c: 248: case 0x0E:
  9744                           ;app_ir.c: 249: case 0x0F:
  9745                           ;app_ir.c: 250: cnt ++;
  9746                           
  9747                           ;app_ir.c: 251: if((cnt & 0x03) == 0x00) {
  9748  0E20  27F5  318D         	fcall	PL26	;call to abstracted procedure
  9749  0E22  1D03               	btfss	3,2
  9750  0E23  0008               	return
  9751                           
  9752                           ;app_ir.c: 252: cnt = 0;
  9753  0E24  01B7               	clrf	ir_long_action@cnt
  9754  0E25  01B8               	clrf	ir_long_action@cnt+1
  9755                           
  9756                           ;app_ir.c: 253: idx = ir_get_index(KeyValue);
  9757  0E26  0844               	movf	_KeyValue,w
  9758  0E27  2646  318D         	fcall	i1_ir_get_index
  9759  0E29  00FC               	movwf	ir_long_action@idx
  9760                           
  9761                           ;app_ir.c: 254: led_set_decrease_bright(idx,4,0);
  9762  0E2A  3004               	movlw	4
  9763  0E2B  00F8               	movwf	i1led_set_decrease_bright@step
  9764  0E2C  01F9               	clrf	i1led_set_decrease_bright@min
  9765  0E2D  01FA               	clrf	i1led_set_decrease_bright@min+1
  9766  0E2E  087C               	movf	ir_long_action@idx,w
  9767  0E2F  26E6               	fcall	i1_led_set_decrease_bright
  9768  0E30  0008               	return
  9769  0E31                     i1l456:	
  9770  0E31                     i1l2412:	
  9771                           
  9772                           ;app_ir.c: 258: case 0x1F:
  9773                           ;app_ir.c: 259: case 0x0D:
  9774                           ;app_ir.c: 260: case 0x15:
  9775                           ;app_ir.c: 261: cnt ++;
  9776  0E31  0AB7               	incf	ir_long_action@cnt,f
  9777  0E32  1903               	skipnz
  9778  0E33  0AB8               	incf	ir_long_action@cnt+1,f
  9779                           
  9780                           ;app_ir.c: 262: if(cnt == 750) {
  9781  0E34  30EE               	movlw	238
  9782  0E35  0637               	xorwf	ir_long_action@cnt,w
  9783  0E36  3002               	movlw	2
  9784  0E37  1903               	skipnz
  9785  0E38  0638               	xorwf	ir_long_action@cnt+1,w
  9786  0E39  1D03               	btfss	3,2
  9787  0E3A  0008               	return
  9788                           
  9789                           ;app_ir.c: 263: cnt = 0;
  9790  0E3B  01B7               	clrf	ir_long_action@cnt
  9791  0E3C  01B8               	clrf	ir_long_action@cnt+1
  9792                           
  9793                           ;app_ir.c: 264: idx = ir_get_index(KeyValue);
  9794  0E3D  0844               	movf	_KeyValue,w
  9795  0E3E  2646  318D         	fcall	i1_ir_get_index
  9796  0E40  00FC               	movwf	ir_long_action@idx
  9797                           
  9798                           ;app_ir.c: 265: led_set_custom(idx);
  9799  0E41  26B3  318D         	fcall	_led_set_custom
  9800                           
  9801                           ;app_ir.c: 266: led_startnotice(1);
  9802  0E43  3001               	movlw	1
  9803  0E44  2EDA               	ljmp	_led_startnotice
  9804  0E45                     i1l438:	
  9805  0E45  0008               	return
  9806  0E46                     __end_of_ir_long_action:	
  9807  0E46                     __ptext63:	
  9808 ;; *************** function i1_ir_get_index *****************
  9809 ;; Defined at:
  9810 ;;		line 39 in file "src/app_ir.c"
  9811 ;; Parameters:    Size  Location     Type
  9812 ;;  keynum          1    wreg     unsigned char 
  9813 ;; Auto vars:     Size  Location     Type
  9814 ;;  keynum          1    0[COMMON] unsigned char 
  9815 ;;  ir_get_index    1    1[COMMON] unsigned char 
  9816 ;; Return value:  Size  Location     Type
  9817 ;;                  1    wreg      unsigned char 
  9818 ;; Registers used:
  9819 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  9820 ;; Tracked objects:
  9821 ;;		On entry : 1F/0
  9822 ;;		On exit  : 1F/0
  9823 ;;		Unchanged: 1F/0
  9824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9826 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9829 ;;Total ram usage:        2 bytes
  9830 ;; Hardware stack levels used:    1
  9831 ;; This function calls:
  9832 ;;		Nothing
  9833 ;; This function is called by:
  9834 ;;		_ir_long_action
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           
  9839                           ;psect for function i1_ir_get_index
  9840  0E46                     i1_ir_get_index:	
  9841                           
  9842                           ;incstack = 0
  9843                           ; Regs used in i1_ir_get_index: [wreg-fsr0h+status,2+status,0]
  9844                           ;i1ir_get_index@keynum stored from wreg
  9845  0E46  00F0               	movwf	i1ir_get_index@keynum
  9846                           
  9847                           ;app_ir.c: 41: uint8_t index = 0xFF;
  9848  0E47  30FF               	movlw	255
  9849  0E48  00F1               	movwf	i1ir_get_index@index
  9850                           
  9851                           ;app_ir.c: 43: switch(keynum) {
  9852  0E49  2E56               	goto	i1l2250
  9853  0E4A                     i1l329:	
  9854  0E4A                     i1l2240:	
  9855                           
  9856                           ;app_ir.c: 45: case 0x1D:
  9857                           ;app_ir.c: 46: case 0x1B:
  9858                           ;app_ir.c: 47: case 0x11:
  9859                           ;app_ir.c: 48: case 0x4D:
  9860                           ;app_ir.c: 49: index = 0;
  9861  0E4A  01F1               	clrf	i1ir_get_index@index
  9862                           
  9863                           ;app_ir.c: 50: break;
  9864  0E4B  2E9D               	goto	i1l2252
  9865  0E4C                     i1l334:	
  9866  0E4C                     i1l336:	
  9867                           
  9868                           ;app_ir.c: 52: case 0x1F:
  9869                           ;app_ir.c: 53: case 0x12:
  9870                           ;app_ir.c: 54: case 0x16:
  9871                           ;app_ir.c: 55: case 0x00:
  9872                           ;app_ir.c: 56: index = 1;
  9873  0E4C  01F1               	clrf	i1ir_get_index@index
  9874  0E4D  0AF1               	incf	i1ir_get_index@index,f
  9875                           
  9876                           ;app_ir.c: 57: break;
  9877  0E4E  2E9D               	goto	i1l2252
  9878  0E4F                     i1l340:	
  9879  0E4F                     i1l2242:	
  9880                           
  9881                           ;app_ir.c: 59: case 0x0D:
  9882                           ;app_ir.c: 60: case 0x4C:
  9883                           ;app_ir.c: 61: case 0x04:
  9884                           ;app_ir.c: 62: case 0x1A:
  9885                           ;app_ir.c: 63: index = 2;
  9886  0E4F  3002               	movlw	2
  9887  0E50  2E54               	goto	L8
  9888  0E51                     i1l345:	
  9889                           ;app_ir.c: 64: break;
  9890                           
  9891  0E51                     i1l2244:	
  9892                           
  9893                           ;app_ir.c: 66: case 0x15:
  9894                           ;app_ir.c: 67: case 0x1E:
  9895                           ;app_ir.c: 68: case 0x0E:
  9896                           ;app_ir.c: 69: case 0x0C:
  9897                           ;app_ir.c: 70: index = 3;
  9898  0E51  3003               	movlw	3
  9899  0E52  2E54               	goto	L8
  9900  0E53                     i1l2246:	
  9901                           ;app_ir.c: 71: break;
  9902                           
  9903                           
  9904                           ;app_ir.c: 73: case 0x14:
  9905                           ;app_ir.c: 74: case 0x0F:
  9906                           ;app_ir.c: 75: index = 4;
  9907  0E53  3004               	movlw	4
  9908  0E54                     L8:	
  9909  0E54  00F1               	movwf	i1ir_get_index@index
  9910                           
  9911                           ;app_ir.c: 76: break;
  9912  0E55  2E9D               	goto	i1l2252
  9913  0E56                     i1l2250:	
  9914  0E56  0870               	movf	i1ir_get_index@keynum,w
  9915                           
  9916                           ; Switch size 1, requested type "space"
  9917                           ; Number of cases is 23, Range of values is 0 to 77
  9918                           ; switch strategies available:
  9919                           ; Name         Instructions Cycles
  9920                           ; simple_byte           70    36 (average)
  9921                           ; direct_byte          162     6 (fixed)
  9922                           ; jumptable            260     6 (fixed)
  9923                           ;	Chosen strategy is simple_byte
  9924  0E57  3A00               	xorlw	0	; case 0
  9925  0E58  1903               	skipnz
  9926  0E59  2E4C               	goto	i1l336
  9927  0E5A  3A04               	xorlw	4	; case 4
  9928  0E5B  1903               	skipnz
  9929  0E5C  2E4F               	goto	i1l2242
  9930  0E5D  3A0E               	xorlw	14	; case 10
  9931  0E5E  1903               	skipnz
  9932  0E5F  2E51               	goto	i1l345
  9933  0E60  3A06               	xorlw	6	; case 12
  9934  0E61  1903               	skipnz
  9935  0E62  2E51               	goto	i1l2244
  9936  0E63  3A01               	xorlw	1	; case 13
  9937  0E64  1903               	skipnz
  9938  0E65  2E4F               	goto	i1l2242
  9939  0E66  3A03               	xorlw	3	; case 14
  9940  0E67  1903               	skipnz
  9941  0E68  2E51               	goto	i1l2244
  9942  0E69  3A01               	xorlw	1	; case 15
  9943  0E6A  1903               	skipnz
  9944  0E6B  2E53               	goto	i1l2246
  9945  0E6C  3A1E               	xorlw	30	; case 17
  9946  0E6D  1903               	skipnz
  9947  0E6E  2E4A               	goto	i1l2240
  9948  0E6F  3A03               	xorlw	3	; case 18
  9949  0E70  1903               	skipnz
  9950  0E71  2E4C               	goto	i1l336
  9951  0E72  3A06               	xorlw	6	; case 20
  9952  0E73  1903               	skipnz
  9953  0E74  2E53               	goto	i1l2246
  9954  0E75  3A01               	xorlw	1	; case 21
  9955  0E76  1903               	skipnz
  9956  0E77  2E51               	goto	i1l2244
  9957  0E78  3A03               	xorlw	3	; case 22
  9958  0E79  1903               	skipnz
  9959  0E7A  2E4C               	goto	i1l336
  9960  0E7B  3A01               	xorlw	1	; case 23
  9961  0E7C  1903               	skipnz
  9962  0E7D  2E4C               	goto	i1l334
  9963  0E7E  3A0E               	xorlw	14	; case 25
  9964  0E7F  1903               	skipnz
  9965  0E80  2E4A               	goto	i1l329
  9966  0E81  3A03               	xorlw	3	; case 26
  9967  0E82  1903               	skipnz
  9968  0E83  2E4F               	goto	i1l2242
  9969  0E84  3A01               	xorlw	1	; case 27
  9970  0E85  1903               	skipnz
  9971  0E86  2E4A               	goto	i1l2240
  9972  0E87  3A07               	xorlw	7	; case 28
  9973  0E88  1903               	skipnz
  9974  0E89  2E53               	goto	i1l2246
  9975  0E8A  3A01               	xorlw	1	; case 29
  9976  0E8B  1903               	skipnz
  9977  0E8C  2E4A               	goto	i1l2240
  9978  0E8D  3A03               	xorlw	3	; case 30
  9979  0E8E  1903               	skipnz
  9980  0E8F  2E51               	goto	i1l2244
  9981  0E90  3A01               	xorlw	1	; case 31
  9982  0E91  1903               	skipnz
  9983  0E92  2E4C               	goto	i1l336
  9984  0E93  3A5F               	xorlw	95	; case 64
  9985  0E94  1903               	skipnz
  9986  0E95  2E4F               	goto	i1l340
  9987  0E96  3A0C               	xorlw	12	; case 76
  9988  0E97  1903               	skipnz
  9989  0E98  2E4F               	goto	i1l2242
  9990  0E99  3A01               	xorlw	1	; case 77
  9991  0E9A  1903               	skipnz
  9992  0E9B  2E4A               	goto	i1l2240
  9993  0E9C  2E9D               	goto	i1l2252
  9994  0E9D                     i1l2252:	
  9995                           
  9996                           ;app_ir.c: 80: return index;
  9997  0E9D  0871               	movf	i1ir_get_index@index,w
  9998  0E9E  0008               	return
  9999  0E9F                     __end_ofi1_ir_get_index:	
 10000  0E9F                     __ptext62:	
 10001 ;; *************** function i1_led_get_state *****************
 10002 ;; Defined at:
 10003 ;;		line 119 in file "src/app_led.c"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;		None
 10006 ;; Auto vars:     Size  Location     Type
 10007 ;;		None
 10008 ;; Return value:  Size  Location     Type
 10009 ;;                  1    wreg      unsigned char 
 10010 ;; Registers used:
 10011 ;;		wreg, status,2, status,0
 10012 ;; Tracked objects:
 10013 ;;		On entry : 1F/0
 10014 ;;		On exit  : 1F/1
 10015 ;;		Unchanged: 0/0
 10016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;Total ram usage:        0 bytes
 10022 ;; Hardware stack levels used:    1
 10023 ;; This function calls:
 10024 ;;		Nothing
 10025 ;; This function is called by:
 10026 ;;		_ir_long_action
 10027 ;; This function uses a non-reentrant model
 10028 ;;
 10029                           
 10030                           
 10031                           ;psect for function i1_led_get_state
 10032  0E9F                     i1_led_get_state:	
 10033                           
 10034                           ;app_led.c: 121: if(m_led_para.mState == 0x01 || m_led_para.mState == 0x02 || m_led_para
      +                          .mState == 0x04 ||
 10035                           ;app_led.c: 122: m_led_para.mState == 0x08) {
 10036                           
 10037                           ;incstack = 0
 10038                           ; Regs used in i1_led_get_state: [wreg+status,2+status,0]
 10039  0E9F  27FB  318D         	fcall	PL34	;call to abstracted procedure
 10040  0EA1  1903               	skipnz
 10041  0EA2  3401               	retlw	1
 10042  0EA3  0C20               	rrf	_m_led_para^(0+128),w
 10043  0EA4  397F               	andlw	127
 10044  0EA5  3A02               	xorlw	2
 10045  0EA6  1903               	skipnz
 10046  0EA7  3401               	retlw	1
 10047  0EA8  0C20               	rrf	_m_led_para^(0+128),w
 10048  0EA9  397F               	andlw	127
 10049  0EAA  3A04               	xorlw	4
 10050  0EAB  1903               	skipnz
 10051  0EAC  3401               	retlw	1
 10052  0EAD  0C20               	rrf	_m_led_para^(0+128),w
 10053  0EAE  397F               	andlw	127
 10054  0EAF  3A08               	xorlw	8
 10055  0EB0  1903               	btfsc	3,2
 10056                           
 10057                           ;app_led.c: 123: return 1;
 10058  0EB1  3401               	retlw	1
 10059                           
 10060                           ;app_led.c: 124: }
 10061                           ;app_led.c: 125: return 0;
 10062  0EB2  3400               	retlw	0
 10063  0EB3                     __end_ofi1_led_get_state:	
 10064  0EB3                     __ptext65:	
 10065 ;; *************** function _led_set_custom *****************
 10066 ;; Defined at:
 10067 ;;		line 161 in file "src/app_led.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  chn             1    wreg     unsigned char 
 10070 ;; Auto vars:     Size  Location     Type
 10071 ;;  chn             1    6[COMMON] unsigned char 
 10072 ;;  i               1    7[COMMON] unsigned char 
 10073 ;; Return value:  Size  Location     Type
 10074 ;;                  1    wreg      void 
 10075 ;; Registers used:
 10076 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10077 ;; Tracked objects:
 10078 ;;		On entry : 1F/0
 10079 ;;		On exit  : 0/0
 10080 ;;		Unchanged: 0/0
 10081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10083 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10084 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10086 ;;Total ram usage:        5 bytes
 10087 ;; Hardware stack levels used:    1
 10088 ;; Hardware stack levels required when called:    1
 10089 ;; This function calls:
 10090 ;;		i1___bmul
 10091 ;; This function is called by:
 10092 ;;		_ir_long_action
 10093 ;; This function uses a non-reentrant model
 10094 ;;
 10095                           
 10096                           
 10097                           ;psect for function _led_set_custom
 10098  0EB3                     _led_set_custom:	
 10099                           
 10100                           ;incstack = 0
 10101                           ; Regs used in _led_set_custom: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10102                           ;led_set_custom@chn stored from wreg
 10103  0EB3  00F6               	movwf	led_set_custom@chn
 10104                           
 10105                           ;app_led.c: 163: for(uint8_t i = 0; i < 5; i++) {
 10106  0EB4  01F7               	clrf	led_set_custom@i
 10107  0EB5                     i1l2152:	
 10108                           
 10109                           ;app_led.c: 164: m_led_para.mCustomBirght[chn][i] = m_led_para.mBright[i];
 10110  0EB5  3577               	lslf	led_set_custom@i,w
 10111  0EB6  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
 10112  0EB7  0086               	movwf	6
 10113  0EB8  0187               	clrf	7
 10114  0EB9  0877               	movf	led_set_custom@i,w
 10115  0EBA  00F3               	movwf	??_led_set_custom
 10116  0EBB  30AB               	movlw	(low ((_m_led_para| 0+11)))& (0+255)
 10117  0EBC  35F3               	lslf	??_led_set_custom,f
 10118  0EBD  0773               	addwf	??_led_set_custom,w
 10119  0EBE  00F4               	movwf	??_led_set_custom+1
 10120  0EBF  300A               	movlw	10
 10121  0EC0  00F0               	movwf	i1___bmul@multiplicand
 10122  0EC1  0876               	movf	led_set_custom@chn,w
 10123  0EC2  26CE               	fcall	i1___bmul
 10124  0EC3  0774               	addwf	??_led_set_custom+1,w
 10125  0EC4  00F5               	movwf	??_led_set_custom+2
 10126  0EC5  3186  2606  318D   	fcall	PL4	;call to abstracted procedure
 10127  0EC8  3005               	movlw	5
 10128  0EC9  0AF7               	incf	led_set_custom@i,f
 10129  0ECA  0277               	subwf	led_set_custom@i,w
 10130  0ECB  1803               	btfsc	3,0
 10131  0ECC  0008               	return
 10132  0ECD  2EB5               	goto	i1l2152
 10133  0ECE                     __end_of_led_set_custom:	
 10134  0ECE                     __ptext66:	
 10135 ;; *************** function i1___bmul *****************
 10136 ;; Defined at:
 10137 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v1.44\sources\common\Umul8.c"
 10138 ;; Parameters:    Size  Location     Type
 10139 ;;  multiplier      1    wreg     unsigned char 
 10140 ;;  multiplicand    1    0[COMMON] unsigned char 
 10141 ;; Auto vars:     Size  Location     Type
 10142 ;;  multiplier      1    1[COMMON] unsigned char 
 10143 ;;  __bmul          1    2[COMMON] unsigned char 
 10144 ;; Return value:  Size  Location     Type
 10145 ;;                  1    wreg      unsigned char 
 10146 ;; Registers used:
 10147 ;;		wreg, status,2, status,0
 10148 ;; Tracked objects:
 10149 ;;		On entry : 0/0
 10150 ;;		On exit  : 0/0
 10151 ;;		Unchanged: 0/0
 10152 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10153 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10154 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10156 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10157 ;;Total ram usage:        3 bytes
 10158 ;; Hardware stack levels used:    1
 10159 ;; This function calls:
 10160 ;;		Nothing
 10161 ;; This function is called by:
 10162 ;;		_led_set_custom
 10163 ;; This function uses a non-reentrant model
 10164 ;;
 10165                           
 10166                           
 10167                           ;psect for function i1___bmul
 10168  0ECE                     i1___bmul:	
 10169                           
 10170                           ;incstack = 0
 10171                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
 10172                           ;i1___bmul@multiplier stored from wreg
 10173  0ECE  00F1               	movwf	i1___bmul@multiplier
 10174  0ECF  01F2               	clrf	i1___bmul@product
 10175  0ED0                     i1l2122:	
 10176  0ED0  0870               	movf	i1___bmul@multiplicand,w
 10177  0ED1  1871               	btfsc	i1___bmul@multiplier,0
 10178  0ED2  07F2               	addwf	i1___bmul@product,f
 10179  0ED3  35F0               	lslf	i1___bmul@multiplicand,f
 10180  0ED4  36F1               	lsrf	i1___bmul@multiplier,f
 10181  0ED5  0871               	movf	i1___bmul@multiplier,w
 10182  0ED6  1D03               	btfss	3,2
 10183  0ED7  2ED0               	goto	i1l2122
 10184  0ED8  0872               	movf	i1___bmul@product,w
 10185  0ED9  0008               	return
 10186  0EDA                     __end_ofi1___bmul:	
 10187  0EDA                     __ptext64:	
 10188 ;; *************** function _led_startnotice *****************
 10189 ;; Defined at:
 10190 ;;		line 167 in file "src/app_led.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;  cnt             1    wreg     unsigned char 
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;  cnt             1    1[COMMON] unsigned char 
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  1    wreg      void 
 10197 ;; Registers used:
 10198 ;;		wreg, status,2, status,0
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 1F/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10205 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10206 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10207 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10208 ;;Total ram usage:        2 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; This function calls:
 10211 ;;		Nothing
 10212 ;; This function is called by:
 10213 ;;		_ir_long_action
 10214 ;; This function uses a non-reentrant model
 10215 ;;
 10216                           
 10217                           
 10218                           ;psect for function _led_startnotice
 10219  0EDA                     _led_startnotice:	
 10220                           
 10221                           ;incstack = 0
 10222                           ; Regs used in _led_startnotice: [wreg+status,2+status,0]
 10223                           ;led_startnotice@cnt stored from wreg
 10224  0EDA  00F1               	movwf	led_startnotice@cnt
 10225                           
 10226                           ;app_led.c: 169: m_led_run_para.mNoticeCount = cnt;
 10227  0EDB  00F0               	movwf	??_led_startnotice
 10228  0EDC  0DF0               	rlf	??_led_startnotice,f
 10229  0EDD  0DF0               	rlf	??_led_startnotice,f
 10230  0EDE  0020               	movlb	0	; select bank0
 10231  0EDF  0820               	movf	_m_led_run_para,w
 10232  0EE0  0670               	xorwf	??_led_startnotice,w
 10233  0EE1  3903               	andlw	-253
 10234  0EE2  0670               	xorwf	??_led_startnotice,w
 10235  0EE3  00A0               	movwf	_m_led_run_para
 10236                           
 10237                           ;app_led.c: 170: m_led_run_para.mStartNotice = 1;
 10238  0EE4  14A0               	bsf	_m_led_run_para,1
 10239  0EE5  0008               	return
 10240  0EE6                     __end_of_led_startnotice:	
 10241  0EE6                     __ptext60:	
 10242 ;; *************** function i1_led_set_decrease_bright *****************
 10243 ;; Defined at:
 10244 ;;		line 149 in file "src/app_led.c"
 10245 ;; Parameters:    Size  Location     Type
 10246 ;;  chn             1    wreg     unsigned char 
 10247 ;;  step            1    8[COMMON] unsigned char 
 10248 ;;  min             2    9[COMMON] unsigned int 
 10249 ;; Auto vars:     Size  Location     Type
 10250 ;;  chn             1   11[COMMON] unsigned char 
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  1    wreg      void 
 10253 ;; Registers used:
 10254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10255 ;; Tracked objects:
 10256 ;;		On entry : 1F/0
 10257 ;;		On exit  : 1F/0
 10258 ;;		Unchanged: 1F/0
 10259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10260 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10261 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10263 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10264 ;;Total ram usage:        4 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:    1
 10267 ;; This function calls:
 10268 ;;		i1_util_decrease
 10269 ;; This function is called by:
 10270 ;;		_ir_long_action
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           
 10274                           
 10275                           ;psect for function i1_led_set_decrease_bright
 10276  0EE6                     i1_led_set_decrease_bright:	
 10277                           
 10278                           ;incstack = 0
 10279                           ; Regs used in i1_led_set_decrease_bright: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10280                           ;i1led_set_decrease_bright@chn stored from wreg
 10281  0EE6  00FB               	movwf	i1led_set_decrease_bright@chn
 10282                           
 10283                           ;app_led.c: 151: util_decrease(&m_led_para.mBright[chn],step,min);
 10284  0EE7  0878               	movf	i1led_set_decrease_bright@step,w
 10285  0EE8  00F0               	movwf	i1util_decrease@step
 10286  0EE9  087A               	movf	i1led_set_decrease_bright@min+1,w
 10287  0EEA  00F2               	movwf	i1util_decrease@min+1
 10288  0EEB  0879               	movf	i1led_set_decrease_bright@min,w
 10289  0EEC  00F1               	movwf	i1util_decrease@min
 10290  0EED  357B               	lslf	i1led_set_decrease_bright@chn,w
 10291  0EEE  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
 10292  0EEF  26F9               	fcall	i1_util_decrease
 10293                           
 10294                           ;app_led.c: 152: m_led_run_para.mTargetBright[chn] = m_led_para.mBright[chn];
 10295  0EF0  357B               	lslf	i1led_set_decrease_bright@chn,w
 10296  0EF1  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
 10297  0EF2  0086               	movwf	6
 10298  0EF3  0187               	clrf	7
 10299  0EF4  357B               	lslf	i1led_set_decrease_bright@chn,w
 10300  0EF5  3E2B               	addlw	(low ((_m_led_run_para| 0+11)))& (0+255)
 10301  0EF6  3186  2606         	fcall	PL4	;call to abstracted procedure
 10302  0EF8  0008               	return
 10303  0EF9                     __end_ofi1_led_set_decrease_bright:	
 10304  0EF9                     __ptext61:	
 10305 ;; *************** function i1_util_decrease *****************
 10306 ;; Defined at:
 10307 ;;		line 11 in file "src/app_util.c"
 10308 ;; Parameters:    Size  Location     Type
 10309 ;;  src             1    wreg     PTR unsigned int 
 10310 ;;		 -> m_led_para.mBright(10), m_led_para(51), 
 10311 ;;  step            1    0[COMMON] unsigned char 
 10312 ;;  min             2    1[COMMON] unsigned int 
 10313 ;; Auto vars:     Size  Location     Type
 10314 ;;  src             1    7[COMMON] PTR unsigned int 
 10315 ;;		 -> m_led_para.mBright(10), m_led_para(51), 
 10316 ;; Return value:  Size  Location     Type
 10317 ;;                  1    wreg      void 
 10318 ;; Registers used:
 10319 ;;		wreg, fsr1l, fsr1h
 10320 ;; Tracked objects:
 10321 ;;		On entry : 1F/0
 10322 ;;		On exit  : 1F/0
 10323 ;;		Unchanged: 1F/0
 10324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10325 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10326 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10328 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10329 ;;Total ram usage:        8 bytes
 10330 ;; Hardware stack levels used:    1
 10331 ;; This function calls:
 10332 ;;		Nothing
 10333 ;; This function is called by:
 10334 ;;		i1_led_set_decrease_bright
 10335 ;; This function uses a non-reentrant model
 10336 ;;
 10337                           
 10338                           
 10339                           ;psect for function i1_util_decrease
 10340  0EF9                     i1_util_decrease:	
 10341                           
 10342                           ;incstack = 0
 10343                           ; Regs used in i1_util_decrease: [wregfsr1]
 10344                           ;i1util_decrease@src stored from wreg
 10345  0EF9  00F7               	movwf	i1util_decrease@src
 10346                           
 10347                           ;app_util.c: 13: if((*src) > min + step) {
 10348  0EFA  0086               	movwf	6
 10349  0EFB  0187               	clrf	7
 10350  0EFC  3F40               	moviw [0]fsr1
 10351  0EFD  00F3               	movwf	??i1_util_decrease
 10352  0EFE  3F41               	moviw [1]fsr1
 10353  0EFF  00F4               	movwf	??i1_util_decrease+1
 10354  0F00  0870               	movf	i1util_decrease@step,w
 10355  0F01  0771               	addwf	i1util_decrease@min,w
 10356  0F02  00F5               	movwf	??i1_util_decrease+2
 10357  0F03  0872               	movf	i1util_decrease@min+1,w
 10358  0F04  1803               	skipnc
 10359  0F05  0A72               	incf	i1util_decrease@min+1,w
 10360  0F06  00F6               	movwf	??i1_util_decrease+3
 10361  0F07  0874               	movf	??i1_util_decrease+1,w
 10362  0F08  0276               	subwf	??i1_util_decrease+3,w
 10363  0F09  1D03               	skipz
 10364  0F0A  2F0D               	goto	u102_25
 10365  0F0B  0873               	movf	??i1_util_decrease,w
 10366  0F0C  0275               	subwf	??i1_util_decrease+2,w
 10367  0F0D                     u102_25:	
 10368                           
 10369                           ;app_util.c: 14: (*src) -= step;
 10370  0F0D  0877               	movf	i1util_decrease@src,w
 10371  0F0E  0086               	movwf	6
 10372  0F0F  0187               	clrf	7
 10373  0F10  1803               	skipnc
 10374  0F11  2F14               	goto	L6
 10375  0F12  0870               	movf	i1util_decrease@step,w
 10376                           
 10377                           ;app_util.c: 15: } else {
 10378  0F13  2FE4               	ljmp	PL18	;call to abstracted procedure
 10379  0F14                     L6:	
 10380                           ;app_util.c: 16: (*src) = min;
 10381                           
 10382  0F14  0871               	movf	i1util_decrease@min,w
 10383  0F15  3FC0               	movwi [0]fsr1
 10384  0F16  0872               	movf	i1util_decrease@min+1,w
 10385  0F17  3FC1               	movwi [1]fsr1
 10386  0F18  0008               	return
 10387  0F19                     __end_ofi1_util_decrease:	
 10388  0F19                     __ptext58:	
 10389 ;; *************** function i1_led_set_increase_bright *****************
 10390 ;; Defined at:
 10391 ;;		line 144 in file "src/app_led.c"
 10392 ;; Parameters:    Size  Location     Type
 10393 ;;  chn             1    wreg     unsigned char 
 10394 ;;  step            1    8[COMMON] unsigned char 
 10395 ;;  max             2    9[COMMON] unsigned int 
 10396 ;; Auto vars:     Size  Location     Type
 10397 ;;  chn             1   11[COMMON] unsigned char 
 10398 ;; Return value:  Size  Location     Type
 10399 ;;                  1    wreg      void 
 10400 ;; Registers used:
 10401 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10402 ;; Tracked objects:
 10403 ;;		On entry : 1F/0
 10404 ;;		On exit  : 1F/0
 10405 ;;		Unchanged: 1F/0
 10406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10407 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10411 ;;Total ram usage:        4 bytes
 10412 ;; Hardware stack levels used:    1
 10413 ;; Hardware stack levels required when called:    1
 10414 ;; This function calls:
 10415 ;;		i1_util_increase
 10416 ;; This function is called by:
 10417 ;;		_ir_long_action
 10418 ;; This function uses a non-reentrant model
 10419 ;;
 10420                           
 10421                           
 10422                           ;psect for function i1_led_set_increase_bright
 10423  0F19                     i1_led_set_increase_bright:	
 10424                           
 10425                           ;incstack = 0
 10426                           ; Regs used in i1_led_set_increase_bright: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10427                           ;i1led_set_increase_bright@chn stored from wreg
 10428  0F19  00FB               	movwf	i1led_set_increase_bright@chn
 10429                           
 10430                           ;app_led.c: 146: util_increase(&m_led_para.mBright[chn],step,max);
 10431  0F1A  0878               	movf	i1led_set_increase_bright@step,w
 10432  0F1B  00F0               	movwf	i1util_increase@step
 10433  0F1C  087A               	movf	i1led_set_increase_bright@max+1,w
 10434  0F1D  00F2               	movwf	i1util_increase@max+1
 10435  0F1E  0879               	movf	i1led_set_increase_bright@max,w
 10436  0F1F  00F1               	movwf	i1util_increase@max
 10437  0F20  357B               	lslf	i1led_set_increase_bright@chn,w
 10438  0F21  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
 10439  0F22  272C               	fcall	i1_util_increase
 10440                           
 10441                           ;app_led.c: 147: m_led_run_para.mTargetBright[chn] = m_led_para.mBright[chn];
 10442  0F23  357B               	lslf	i1led_set_increase_bright@chn,w
 10443  0F24  3EA1               	addlw	(low ((_m_led_para| 0+1)))& (0+255)
 10444  0F25  0086               	movwf	6
 10445  0F26  0187               	clrf	7
 10446  0F27  357B               	lslf	i1led_set_increase_bright@chn,w
 10447  0F28  3E2B               	addlw	(low ((_m_led_run_para| 0+11)))& (0+255)
 10448  0F29  3186  2606         	fcall	PL4	;call to abstracted procedure
 10449  0F2B  0008               	return
 10450  0F2C                     __end_ofi1_led_set_increase_bright:	
 10451  0F2C                     __ptext59:	
 10452 ;; *************** function i1_util_increase *****************
 10453 ;; Defined at:
 10454 ;;		line 3 in file "src/app_util.c"
 10455 ;; Parameters:    Size  Location     Type
 10456 ;;  src             1    wreg     PTR unsigned int 
 10457 ;;		 -> m_led_para.mBright(10), m_led_para(51), 
 10458 ;;  step            1    0[COMMON] unsigned char 
 10459 ;;  max             2    1[COMMON] unsigned int 
 10460 ;; Auto vars:     Size  Location     Type
 10461 ;;  src             1    7[COMMON] PTR unsigned int 
 10462 ;;		 -> m_led_para.mBright(10), m_led_para(51), 
 10463 ;; Return value:  Size  Location     Type
 10464 ;;                  1    wreg      void 
 10465 ;; Registers used:
 10466 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 10467 ;; Tracked objects:
 10468 ;;		On entry : 1F/0
 10469 ;;		On exit  : 1F/0
 10470 ;;		Unchanged: 1F/0
 10471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10472 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10474 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10475 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10476 ;;Total ram usage:        8 bytes
 10477 ;; Hardware stack levels used:    1
 10478 ;; This function calls:
 10479 ;;		Nothing
 10480 ;; This function is called by:
 10481 ;;		i1_led_set_increase_bright
 10482 ;; This function uses a non-reentrant model
 10483 ;;
 10484                           
 10485                           
 10486                           ;psect for function i1_util_increase
 10487  0F2C                     i1_util_increase:	
 10488                           
 10489                           ;incstack = 0
 10490                           ; Regs used in i1_util_increase: [wreg+fsr1l+fsr1h+status,2+status,0]
 10491                           ;i1util_increase@src stored from wreg
 10492  0F2C  00F7               	movwf	i1util_increase@src
 10493                           
 10494                           ;app_util.c: 5: if((*src) + step < max) {
 10495  0F2D  0086               	movwf	6
 10496  0F2E  0187               	clrf	7
 10497  0F2F  3F40               	moviw [0]fsr1
 10498  0F30  00F3               	movwf	??i1_util_increase
 10499  0F31  3F41               	moviw [1]fsr1
 10500  0F32  00F4               	movwf	??i1_util_increase+1
 10501  0F33  0870               	movf	i1util_increase@step,w
 10502  0F34  0773               	addwf	??i1_util_increase,w
 10503  0F35  00F5               	movwf	??i1_util_increase+2
 10504  0F36  0874               	movf	??i1_util_increase+1,w
 10505  0F37  1803               	skipnc
 10506  0F38  0A74               	incf	??i1_util_increase+1,w
 10507  0F39  00F6               	movwf	??i1_util_increase+3
 10508  0F3A  0872               	movf	i1util_increase@max+1,w
 10509  0F3B  0276               	subwf	??i1_util_increase+3,w
 10510  0F3C  1D03               	skipz
 10511  0F3D  2F40               	goto	u101_25
 10512  0F3E  0871               	movf	i1util_increase@max,w
 10513  0F3F  0275               	subwf	??i1_util_increase+2,w
 10514  0F40                     u101_25:	
 10515                           
 10516                           ;app_util.c: 6: (*src) += step;
 10517  0F40  0877               	movf	i1util_increase@src,w
 10518  0F41  0086               	movwf	6
 10519  0F42  0187               	clrf	7
 10520  0F43  1803               	skipnc
 10521  0F44  2F47               	goto	L5
 10522  0F45  0870               	movf	i1util_increase@step,w
 10523                           
 10524                           ;app_util.c: 7: } else {
 10525  0F46  2FEA               	ljmp	PL22	;call to abstracted procedure
 10526  0F47                     L5:	
 10527                           ;app_util.c: 8: (*src) = max;
 10528                           
 10529  0F47  0871               	movf	i1util_increase@max,w
 10530  0F48  3FC0               	movwi [0]fsr1
 10531  0F49  0872               	movf	i1util_increase@max+1,w
 10532  0F4A  3FC1               	movwi [1]fsr1
 10533  0F4B  0008               	return
 10534  0F4C                     __end_ofi1_util_increase:	
 10535  0F4C                     __ptext54:	
 10536 ;; *************** function _led_notice *****************
 10537 ;; Defined at:
 10538 ;;		line 172 in file "src/app_led.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;		None
 10541 ;; Auto vars:     Size  Location     Type
 10542 ;;		None
 10543 ;; Return value:  Size  Location     Type
 10544 ;;                  1    wreg      void 
 10545 ;; Registers used:
 10546 ;;		wreg, status,2, status,0, pclath, cstack
 10547 ;; Tracked objects:
 10548 ;;		On entry : 1F/0
 10549 ;;		On exit  : 1F/0
 10550 ;;		Unchanged: 0/0
 10551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10554 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10555 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10556 ;;Total ram usage:        2 bytes
 10557 ;; Hardware stack levels used:    1
 10558 ;; Hardware stack levels required when called:    1
 10559 ;; This function calls:
 10560 ;;		_led_turnoff_direct
 10561 ;;		_led_turnon_direct
 10562 ;; This function is called by:
 10563 ;;		_led_run
 10564 ;; This function uses a non-reentrant model
 10565 ;;
 10566                           
 10567                           
 10568                           ;psect for function _led_notice
 10569  0F4C                     _led_notice:	
 10570  0F4C                     i1l2488:	
 10571                           ;incstack = 0
 10572                           ; Regs used in _led_notice: [wreg+status,2+status,0+pclath+cstack]
 10573                           
 10574                           
 10575                           ;app_led.c: 174: static uint16_t cnt = 0;
 10576                           ;app_led.c: 176: if(m_led_run_para.mNoticeCount) {
 10577  0F4C  0C20               	rrf	_m_led_run_para,w
 10578  0F4D  0C89               	rrf	9,f
 10579  0F4E  393F               	andlw	63
 10580  0F4F  1903               	skipnz
 10581  0F50  2F73               	goto	i1l625
 10582                           
 10583                           ;app_led.c: 177: cnt ++;
 10584  0F51  0AB5               	incf	led_notice@cnt,f
 10585  0F52  1903               	skipnz
 10586  0F53  0AB6               	incf	led_notice@cnt+1,f
 10587                           
 10588                           ;app_led.c: 178: if((cnt & 0x1FF) == 0x00) {
 10589  0F54  0835               	movf	led_notice@cnt,w
 10590  0F55  00F0               	movwf	??_led_notice
 10591  0F56  3001               	movlw	1
 10592  0F57  0536               	andwf	led_notice@cnt+1,w
 10593  0F58  00F1               	movwf	??_led_notice+1
 10594  0F59  0470               	iorwf	??_led_notice,w
 10595  0F5A  1D03               	btfss	3,2
 10596  0F5B  0008               	return
 10597                           
 10598                           ;app_led.c: 179: if(m_led_run_para.mNoticeStatus) {
 10599  0F5C  1C20               	btfss	_m_led_run_para,0
 10600  0F5D  2F6F               	goto	i1l2502
 10601                           
 10602                           ;app_led.c: 180: led_turnon_direct();
 10603  0F5E  2780               	fcall	_led_turnon_direct
 10604                           
 10605                           ;app_led.c: 181: m_led_run_para.mNoticeCount --;
 10606  0F5F  0020               	movlb	0	; select bank0
 10607  0F60  0C20               	rrf	_m_led_run_para,w
 10608  0F61  00F0               	movwf	??_led_notice
 10609  0F62  0C70               	rrf	??_led_notice,w
 10610  0F63  393F               	andlw	63
 10611  0F64  00F0               	movwf	??_led_notice
 10612  0F65  03F0               	decf	??_led_notice,f
 10613  0F66  0DF0               	rlf	??_led_notice,f
 10614  0F67  0DF0               	rlf	??_led_notice,f
 10615  0F68  0820               	movf	_m_led_run_para,w
 10616  0F69  0670               	xorwf	??_led_notice,w
 10617  0F6A  3903               	andlw	-253
 10618  0F6B  0670               	xorwf	??_led_notice,w
 10619  0F6C  00A0               	movwf	_m_led_run_para
 10620                           
 10621                           ;app_led.c: 182: m_led_run_para.mNoticeStatus = 0;
 10622  0F6D  1020               	bcf	_m_led_run_para,0
 10623                           
 10624                           ;app_led.c: 183: } else {
 10625  0F6E  0008               	return
 10626  0F6F                     i1l2502:	
 10627                           
 10628                           ;app_led.c: 184: led_turnoff_direct();
 10629  0F6F  2777               	fcall	_led_turnoff_direct
 10630                           
 10631                           ;app_led.c: 185: m_led_run_para.mNoticeStatus = 1;
 10632  0F70  0020               	movlb	0	; select bank0
 10633  0F71  1420               	bsf	_m_led_run_para,0
 10634  0F72  0008               	return
 10635  0F73                     i1l625:	
 10636                           
 10637                           ;app_led.c: 189: m_led_run_para.mStartNotice = 0;
 10638  0F73  10A0               	bcf	_m_led_run_para,1
 10639                           
 10640                           ;app_led.c: 190: cnt = 0;
 10641  0F74  01B5               	clrf	led_notice@cnt
 10642  0F75  01B6               	clrf	led_notice@cnt+1
 10643  0F76  0008               	return
 10644  0F77                     __end_of_led_notice:	
 10645  0F77                     __ptext56:	
 10646 ;; *************** function _led_turnoff_direct *****************
 10647 ;; Defined at:
 10648 ;;		line 25 in file "src/app_led.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;		None
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;		None
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      void 
 10655 ;; Registers used:
 10656 ;;		None
 10657 ;; Tracked objects:
 10658 ;;		On entry : 1F/0
 10659 ;;		On exit  : 1F/C
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10666 ;;Total ram usage:        0 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; This function calls:
 10669 ;;		Nothing
 10670 ;; This function is called by:
 10671 ;;		_led_notice
 10672 ;; This function uses a non-reentrant model
 10673 ;;
 10674                           
 10675                           
 10676                           ;psect for function _led_turnoff_direct
 10677  0F77                     _led_turnoff_direct:	
 10678                           
 10679                           ;app_led.c: 27: CCP1CON &= 0x7F;
 10680                           
 10681                           ;incstack = 0
 10682                           ; Regs used in _led_turnoff_direct: []
 10683  0F77  0025               	movlb	5	; select bank5
 10684  0F78  1393               	bcf	19,7	;volatile
 10685                           
 10686                           ;app_led.c: 28: CCP2CON &= 0x7F;
 10687  0F79  1397               	bcf	23,7	;volatile
 10688                           
 10689                           ;app_led.c: 29: CCP3CON &= 0x7F;
 10690  0F7A  0026               	movlb	6	; select bank6
 10691  0F7B  1393               	bcf	19,7	;volatile
 10692                           
 10693                           ;app_led.c: 30: CCP4CON &= 0x7F;
 10694  0F7C  1397               	bcf	23,7	;volatile
 10695                           
 10696                           ;app_led.c: 31: PWM5CON &= 0x7F;
 10697  0F7D  002C               	movlb	12	; select bank12
 10698  0F7E  1399               	bcf	25,7	;volatile
 10699  0F7F  0008               	return
 10700  0F80                     __end_of_led_turnoff_direct:	
 10701  0F80                     __ptext55:	
 10702 ;; *************** function _led_turnon_direct *****************
 10703 ;; Defined at:
 10704 ;;		line 17 in file "src/app_led.c"
 10705 ;; Parameters:    Size  Location     Type
 10706 ;;		None
 10707 ;; Auto vars:     Size  Location     Type
 10708 ;;		None
 10709 ;; Return value:  Size  Location     Type
 10710 ;;                  1    wreg      void 
 10711 ;; Registers used:
 10712 ;;		None
 10713 ;; Tracked objects:
 10714 ;;		On entry : 1F/0
 10715 ;;		On exit  : 1F/C
 10716 ;;		Unchanged: 0/0
 10717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10722 ;;Total ram usage:        0 bytes
 10723 ;; Hardware stack levels used:    1
 10724 ;; This function calls:
 10725 ;;		Nothing
 10726 ;; This function is called by:
 10727 ;;		_led_notice
 10728 ;; This function uses a non-reentrant model
 10729 ;;
 10730                           
 10731                           
 10732                           ;psect for function _led_turnon_direct
 10733  0F80                     _led_turnon_direct:	
 10734                           
 10735                           ;app_led.c: 19: CCP1CON |= 0x80;
 10736                           
 10737                           ;incstack = 0
 10738                           ; Regs used in _led_turnon_direct: []
 10739  0F80  0025               	movlb	5	; select bank5
 10740  0F81  1793               	bsf	19,7	;volatile
 10741                           
 10742                           ;app_led.c: 20: CCP2CON |= 0x80;
 10743  0F82  1797               	bsf	23,7	;volatile
 10744                           
 10745                           ;app_led.c: 21: CCP3CON |= 0x80;
 10746  0F83  0026               	movlb	6	; select bank6
 10747  0F84  1793               	bsf	19,7	;volatile
 10748                           
 10749                           ;app_led.c: 22: CCP4CON |= 0x80;
 10750  0F85  1797               	bsf	23,7	;volatile
 10751                           
 10752                           ;app_led.c: 23: PWM5CON |= 0x80;
 10753  0F86  002C               	movlb	12	; select bank12
 10754  0F87  1799               	bsf	25,7	;volatile
 10755  0F88  0008               	return
 10756  0F89                     __end_of_led_turnon_direct:	
 10757  0F89                     __ptext48:	
 10758 ;; *************** function _led_ramp *****************
 10759 ;; Defined at:
 10760 ;;		line 193 in file "src/app_led.c"
 10761 ;; Parameters:    Size  Location     Type
 10762 ;;		None
 10763 ;; Auto vars:     Size  Location     Type
 10764 ;;  i               1   10[COMMON] unsigned char 
 10765 ;; Return value:  Size  Location     Type
 10766 ;;                  1    wreg      void 
 10767 ;; Registers used:
 10768 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10769 ;; Tracked objects:
 10770 ;;		On entry : 1E/0
 10771 ;;		On exit  : 14/4
 10772 ;;		Unchanged: 0/0
 10773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10775 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10776 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10777 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10778 ;;Total ram usage:        7 bytes
 10779 ;; Hardware stack levels used:    1
 10780 ;; Hardware stack levels required when called:    1
 10781 ;; This function calls:
 10782 ;;		_pwm1_load_duty
 10783 ;;		_pwm2_load_duty
 10784 ;;		_pwm3_load_duty
 10785 ;;		_pwm4_load_duty
 10786 ;;		_pwm5_load_duty
 10787 ;; This function is called by:
 10788 ;;		_led_run
 10789 ;; This function uses a non-reentrant model
 10790 ;;
 10791                           
 10792                           
 10793                           ;psect for function _led_ramp
 10794  0F89                     _led_ramp:	
 10795  0F89                     i1l2508:	
 10796                           ;incstack = 0
 10797                           ; Regs used in _led_ramp: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10798                           
 10799                           
 10800                           ;app_led.c: 195: for(uint8_t i = 0; i < 5; i++) {
 10801  0F89  01FA               	clrf	led_ramp@i
 10802  0F8A                     i1l2514:	
 10803                           
 10804                           ;app_led.c: 196: if(m_led_run_para.mCurrentBright[i] + 2 < m_led_run_para.mTargetBright[
      +                          i]) {
 10805  0F8A  357A               	lslf	led_ramp@i,w
 10806  0F8B  3E2B               	addlw	(low ((_m_led_run_para| 0+11)))& (0+255)
 10807  0F8C  27DC  318D         	fcall	PL16	;call to abstracted procedure
 10808  0F8E  3E21               	addlw	(low ((_m_led_run_para| 0+1)))& (0+255)
 10809  0F8F  27CA  318D         	fcall	PL6	;call to abstracted procedure
 10810  0F91  1803               	skipnc
 10811  0F92  2F9A               	goto	i1l2518
 10812                           
 10813                           ;app_led.c: 197: m_led_run_para.mCurrentBright[i] += 2;
 10814  0F93  27EF  318D         	fcall	PL24	;call to abstracted procedure
 10815  0F95  0781               	addwf	1,f
 10816  0F96  3141               	addfsr 1,1
 10817  0F97  1803               	skipnc
 10818  0F98  0A81               	incf	1,f
 10819                           
 10820                           ;app_led.c: 198: } else if(m_led_run_para.mCurrentBright[i] > m_led_run_para.mTargetBrig
      +                          ht[i] + 2) {
 10821  0F99  2FB4               	goto	i1l2524
 10822  0F9A                     i1l2518:	
 10823  0F9A  357A               	lslf	led_ramp@i,w
 10824  0F9B  3E21               	addlw	(low ((_m_led_run_para| 0+1)))& (0+255)
 10825  0F9C  27DC  318D         	fcall	PL16	;call to abstracted procedure
 10826  0F9E  3E2B               	addlw	(low ((_m_led_run_para| 0+11)))& (0+255)
 10827  0F9F  27CA  318D         	fcall	PL6	;call to abstracted procedure
 10828  0FA1  1803               	skipnc
 10829  0FA2  2FAB               	goto	i1l2522
 10830                           
 10831                           ;app_led.c: 199: m_led_run_para.mCurrentBright[i] -= 2;
 10832  0FA3  27EF  318D         	fcall	PL24	;call to abstracted procedure
 10833  0FA5  0281               	subwf	1,f
 10834  0FA6  3000               	movlw	0
 10835  0FA7  3141               	addfsr 1,1
 10836  0FA8  3B81               	subwfb	1,f
 10837  0FA9  317F               	addfsr 1,-1
 10838                           
 10839                           ;app_led.c: 200: } else {
 10840  0FAA  2FB4               	goto	i1l2524
 10841  0FAB                     i1l2522:	
 10842                           
 10843                           ;app_led.c: 201: m_led_run_para.mCurrentBright[i] = m_led_run_para.mTargetBright[i];
 10844  0FAB  357A               	lslf	led_ramp@i,w
 10845  0FAC  3E2B               	addlw	(low ((_m_led_run_para| 0+11)))& (0+255)
 10846  0FAD  0086               	movwf	6
 10847  0FAE  0187               	clrf	7
 10848  0FAF  357A               	lslf	led_ramp@i,w
 10849  0FB0  3E21               	addlw	(low ((_m_led_run_para| 0+1)))& (0+255)
 10850  0FB1  3186  2606  318D   	fcall	PL4	;call to abstracted procedure
 10851  0FB4                     i1l2524:	
 10852                           
 10853                           ;app_led.c: 202: }
 10854                           ;app_led.c: 203: led_load_duty[i](m_led_run_para.mCurrentBright[i]);
 10855  0FB4  357A               	lslf	led_ramp@i,w
 10856  0FB5  3E21               	addlw	(low ((_m_led_run_para| 0+1)))& (0+255)
 10857  0FB6  0086               	movwf	6
 10858  0FB7  0187               	clrf	7
 10859  0FB8  3F40               	moviw [0]fsr1
 10860  0FB9  00F0               	movwf	pwm5_load_duty@duty
 10861  0FBA  3F41               	moviw [1]fsr1
 10862  0FBB  00F1               	movwf	pwm5_load_duty@duty+1
 10863  0FBC  357A               	lslf	led_ramp@i,w
 10864  0FBD  3ED3               	addlw	(low (_led_load_duty| 0))& (0+255)
 10865  0FBE  0086               	movwf	6
 10866  0FBF  3F41               	moviw [1]fsr1
 10867  0FC0  008A               	movwf	10
 10868  0FC1  3F40               	moviw [0]fsr1
 10869  0FC2  000A               	callw
 10870  0FC3  3005               	movlw	5
 10871  0FC4  318D               	pagesel	$
 10872  0FC5  0AFA               	incf	led_ramp@i,f
 10873  0FC6  027A               	subwf	led_ramp@i,w
 10874  0FC7  1803               	btfsc	3,0
 10875  0FC8  0008               	return
 10876  0FC9  2F8A               	goto	i1l2514
 10877  0FCA                     __end_of_led_ramp:	
 10878  0FCA                     PL6:	
 10879  0FCA  0086               	movwf	6
 10880  0FCB  3F40               	moviw [0]fsr1
 10881  0FCC  00F6               	movwf	??_led_ramp+2
 10882  0FCD  3F41               	moviw [1]fsr1
 10883  0FCE  00F7               	movwf	??_led_ramp+3
 10884  0FCF  0876               	movf	??_led_ramp+2,w
 10885  0FD0  3E02               	addlw	2
 10886  0FD1  00F8               	movwf	??_led_ramp+4
 10887  0FD2  3000               	movlw	0
 10888  0FD3  3D77               	addwfc	??_led_ramp+3,w
 10889  0FD4  00F9               	movwf	??_led_ramp+5
 10890  0FD5  0875               	movf	??_led_ramp+1,w
 10891  0FD6  0279               	subwf	??_led_ramp+5,w
 10892  0FD7  1D03               	skipz
 10893  0FD8  0008               	return
 10894  0FD9  0874               	movf	??_led_ramp,w
 10895  0FDA  0278               	subwf	??_led_ramp+4,w
 10896  0FDB  0008               	return
 10897  0FDC                     __end_ofPL6:	
 10898  0FDC                     PL16:	
 10899  0FDC  0086               	movwf	6
 10900  0FDD  0187               	clrf	7
 10901  0FDE  3F40               	moviw [0]fsr1
 10902  0FDF  00F4               	movwf	??_led_ramp
 10903  0FE0  3F41               	moviw [1]fsr1
 10904  0FE1  00F5               	movwf	??_led_ramp+1
 10905  0FE2  357A               	lslf	led_ramp@i,w
 10906  0FE3  0008               	return
 10907  0FE4                     __end_ofPL16:	
 10908  0FE4                     PL18:	
 10909  0FE4  0281               	subwf	1,f
 10910  0FE5  3141               	addfsr 1,1
 10911  0FE6  1C03               	skipc
 10912  0FE7  0381               	decf	1,f
 10913  0FE8  317F               	addfsr 1,-1
 10914  0FE9  0008               	return
 10915  0FEA                     __end_ofPL18:	
 10916  0FEA                     PL22:	
 10917  0FEA  0781               	addwf	1,f
 10918  0FEB  3141               	addfsr 1,1
 10919  0FEC  1803               	skipnc
 10920  0FED  0A81               	incf	1,f
 10921  0FEE  0008               	return
 10922  0FEF                     __end_ofPL22:	
 10923  0FEF                     PL24:	
 10924  0FEF  357A               	lslf	led_ramp@i,w
 10925  0FF0  3E21               	addlw	(low ((_m_led_run_para| 0+1)))& (0+255)
 10926  0FF1  0086               	movwf	6
 10927  0FF2  3002               	movlw	2
 10928  0FF3  0187               	clrf	7
 10929  0FF4  0008               	return
 10930  0FF5                     __end_ofPL24:	
 10931  0FF5                     PL26:	
 10932  0FF5  0AB7               	incf	ir_long_action@cnt,f
 10933  0FF6  1903               	skipnz
 10934  0FF7  0AB8               	incf	ir_long_action@cnt+1,f
 10935  0FF8  0837               	movf	ir_long_action@cnt,w
 10936  0FF9  3903               	andlw	3
 10937  0FFA  0008               	return
 10938  0FFB                     __end_ofPL26:	
 10939  0FFB                     PL34:	
 10940  0FFB  0021               	movlb	1	; select bank1
 10941  0FFC  0C20               	rrf	_m_led_para^(0+128),w
 10942  0FFD  397F               	andlw	127
 10943  0FFE  3A01               	xorlw	1
 10944  0FFF  0008               	return
 10945  1000                     __end_ofPL34:	
 10946                           
 10947                           	psect	text49
 10948  0770                     __ptext49:	
 10949 ;; *************** function _pwm4_load_duty *****************
 10950 ;; Defined at:
 10951 ;;		line 69 in file "src/drv_pwm.c"
 10952 ;; Parameters:    Size  Location     Type
 10953 ;;  duty            2    0[COMMON] unsigned int 
 10954 ;; Auto vars:     Size  Location     Type
 10955 ;;		None
 10956 ;; Return value:  Size  Location     Type
 10957 ;;                  1    wreg      void 
 10958 ;; Registers used:
 10959 ;;		wreg, status,2, status,0
 10960 ;; Tracked objects:
 10961 ;;		On entry : 10/0
 10962 ;;		On exit  : 1F/6
 10963 ;;		Unchanged: 0/0
 10964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10965 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10967 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10968 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10969 ;;Total ram usage:        4 bytes
 10970 ;; Hardware stack levels used:    1
 10971 ;; This function calls:
 10972 ;;		Nothing
 10973 ;; This function is called by:
 10974 ;;		_led_ramp
 10975 ;; This function uses a non-reentrant model
 10976 ;;
 10977                           
 10978                           
 10979                           ;psect for function _pwm4_load_duty
 10980  0770                     _pwm4_load_duty:	
 10981                           
 10982                           ;drv_pwm.c: 71: CCPR4H = duty >> 2;
 10983                           
 10984                           ;incstack = 0
 10985                           ; Regs used in _pwm4_load_duty: [wreg+status,2+status,0]
 10986  0770  0871               	movf	pwm4_load_duty@duty+1,w
 10987  0771  00F3               	movwf	??_pwm4_load_duty+1
 10988  0772  0870               	movf	pwm4_load_duty@duty,w
 10989  0773  00F2               	movwf	??_pwm4_load_duty
 10990  0774  36F3               	lsrf	??_pwm4_load_duty+1,f
 10991  0775  0CF2               	rrf	??_pwm4_load_duty,f
 10992  0776  36F3               	lsrf	??_pwm4_load_duty+1,f
 10993  0777  0CF2               	rrf	??_pwm4_load_duty,f
 10994  0778  0872               	movf	??_pwm4_load_duty,w
 10995  0779  0026               	movlb	6	; select bank6
 10996  077A  0096               	movwf	22	;volatile
 10997                           
 10998                           ;drv_pwm.c: 72: CCPR4L = (duty & 0x03) << 6;
 10999  077B  0870               	movf	pwm4_load_duty@duty,w
 11000  077C  3903               	andlw	3
 11001  077D  00F2               	movwf	??_pwm4_load_duty
 11002  077E  0CF2               	rrf	??_pwm4_load_duty,f
 11003  077F  0CF2               	rrf	??_pwm4_load_duty,f
 11004  0780  0C72               	rrf	??_pwm4_load_duty,w
 11005  0781  39C0               	andlw	192
 11006  0782  0095               	movwf	21	;volatile
 11007  0783  0008               	return
 11008  0784                     __end_of_pwm4_load_duty:	
 11009                           
 11010                           	psect	text50
 11011  0784                     __ptext50:	
 11012 ;; *************** function _pwm3_load_duty *****************
 11013 ;; Defined at:
 11014 ;;		line 51 in file "src/drv_pwm.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;  duty            2    0[COMMON] unsigned int 
 11017 ;; Auto vars:     Size  Location     Type
 11018 ;;		None
 11019 ;; Return value:  Size  Location     Type
 11020 ;;                  1    wreg      void 
 11021 ;; Registers used:
 11022 ;;		wreg, status,2, status,0
 11023 ;; Tracked objects:
 11024 ;;		On entry : 10/0
 11025 ;;		On exit  : 1F/6
 11026 ;;		Unchanged: 0/0
 11027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11028 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11030 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11031 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11032 ;;Total ram usage:        4 bytes
 11033 ;; Hardware stack levels used:    1
 11034 ;; This function calls:
 11035 ;;		Nothing
 11036 ;; This function is called by:
 11037 ;;		_led_ramp
 11038 ;; This function uses a non-reentrant model
 11039 ;;
 11040                           
 11041                           
 11042                           ;psect for function _pwm3_load_duty
 11043  0784                     _pwm3_load_duty:	
 11044                           
 11045                           ;drv_pwm.c: 53: CCPR3H = duty >> 2;
 11046                           
 11047                           ;incstack = 0
 11048                           ; Regs used in _pwm3_load_duty: [wreg+status,2+status,0]
 11049  0784  0871               	movf	pwm3_load_duty@duty+1,w
 11050  0785  00F3               	movwf	??_pwm3_load_duty+1
 11051  0786  0870               	movf	pwm3_load_duty@duty,w
 11052  0787  00F2               	movwf	??_pwm3_load_duty
 11053  0788  36F3               	lsrf	??_pwm3_load_duty+1,f
 11054  0789  0CF2               	rrf	??_pwm3_load_duty,f
 11055  078A  36F3               	lsrf	??_pwm3_load_duty+1,f
 11056  078B  0CF2               	rrf	??_pwm3_load_duty,f
 11057  078C  0872               	movf	??_pwm3_load_duty,w
 11058  078D  0026               	movlb	6	; select bank6
 11059  078E  0092               	movwf	18	;volatile
 11060                           
 11061                           ;drv_pwm.c: 54: CCPR3L = (duty & 0x03) << 6;
 11062  078F  0870               	movf	pwm3_load_duty@duty,w
 11063  0790  3903               	andlw	3
 11064  0791  00F2               	movwf	??_pwm3_load_duty
 11065  0792  0CF2               	rrf	??_pwm3_load_duty,f
 11066  0793  0CF2               	rrf	??_pwm3_load_duty,f
 11067  0794  0C72               	rrf	??_pwm3_load_duty,w
 11068  0795  39C0               	andlw	192
 11069  0796  0091               	movwf	17	;volatile
 11070  0797  0008               	return
 11071  0798                     __end_of_pwm3_load_duty:	
 11072                           
 11073                           	psect	text51
 11074  0798                     __ptext51:	
 11075 ;; *************** function _pwm2_load_duty *****************
 11076 ;; Defined at:
 11077 ;;		line 33 in file "src/drv_pwm.c"
 11078 ;; Parameters:    Size  Location     Type
 11079 ;;  duty            2    0[COMMON] unsigned int 
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;		None
 11082 ;; Return value:  Size  Location     Type
 11083 ;;                  1    wreg      void 
 11084 ;; Registers used:
 11085 ;;		wreg, status,2, status,0
 11086 ;; Tracked objects:
 11087 ;;		On entry : 10/0
 11088 ;;		On exit  : 1F/5
 11089 ;;		Unchanged: 0/0
 11090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11091 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11094 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11095 ;;Total ram usage:        4 bytes
 11096 ;; Hardware stack levels used:    1
 11097 ;; This function calls:
 11098 ;;		Nothing
 11099 ;; This function is called by:
 11100 ;;		_led_ramp
 11101 ;; This function uses a non-reentrant model
 11102 ;;
 11103                           
 11104                           
 11105                           ;psect for function _pwm2_load_duty
 11106  0798                     _pwm2_load_duty:	
 11107                           
 11108                           ;drv_pwm.c: 35: CCPR2H = duty >> 2;
 11109                           
 11110                           ;incstack = 0
 11111                           ; Regs used in _pwm2_load_duty: [wreg+status,2+status,0]
 11112  0798  0871               	movf	pwm2_load_duty@duty+1,w
 11113  0799  00F3               	movwf	??_pwm2_load_duty+1
 11114  079A  0870               	movf	pwm2_load_duty@duty,w
 11115  079B  00F2               	movwf	??_pwm2_load_duty
 11116  079C  36F3               	lsrf	??_pwm2_load_duty+1,f
 11117  079D  0CF2               	rrf	??_pwm2_load_duty,f
 11118  079E  36F3               	lsrf	??_pwm2_load_duty+1,f
 11119  079F  0CF2               	rrf	??_pwm2_load_duty,f
 11120  07A0  0872               	movf	??_pwm2_load_duty,w
 11121  07A1  0025               	movlb	5	; select bank5
 11122  07A2  0096               	movwf	22	;volatile
 11123                           
 11124                           ;drv_pwm.c: 36: CCPR2L = (duty & 0x03) << 6;
 11125  07A3  0870               	movf	pwm2_load_duty@duty,w
 11126  07A4  3903               	andlw	3
 11127  07A5  00F2               	movwf	??_pwm2_load_duty
 11128  07A6  0CF2               	rrf	??_pwm2_load_duty,f
 11129  07A7  0CF2               	rrf	??_pwm2_load_duty,f
 11130  07A8  0C72               	rrf	??_pwm2_load_duty,w
 11131  07A9  39C0               	andlw	192
 11132  07AA  0095               	movwf	21	;volatile
 11133  07AB  0008               	return
 11134  07AC                     __end_of_pwm2_load_duty:	
 11135                           
 11136                           	psect	text52
 11137  07AC                     __ptext52:	
 11138 ;; *************** function _pwm1_load_duty *****************
 11139 ;; Defined at:
 11140 ;;		line 15 in file "src/drv_pwm.c"
 11141 ;; Parameters:    Size  Location     Type
 11142 ;;  duty            2    0[COMMON] unsigned int 
 11143 ;; Auto vars:     Size  Location     Type
 11144 ;;		None
 11145 ;; Return value:  Size  Location     Type
 11146 ;;                  1    wreg      void 
 11147 ;; Registers used:
 11148 ;;		wreg, status,2, status,0
 11149 ;; Tracked objects:
 11150 ;;		On entry : 10/0
 11151 ;;		On exit  : 1F/5
 11152 ;;		Unchanged: 0/0
 11153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11154 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11155 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11156 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11157 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11158 ;;Total ram usage:        4 bytes
 11159 ;; Hardware stack levels used:    1
 11160 ;; This function calls:
 11161 ;;		Nothing
 11162 ;; This function is called by:
 11163 ;;		_led_ramp
 11164 ;; This function uses a non-reentrant model
 11165 ;;
 11166                           
 11167                           
 11168                           ;psect for function _pwm1_load_duty
 11169  07AC                     _pwm1_load_duty:	
 11170                           
 11171                           ;drv_pwm.c: 17: CCPR1H = duty >> 2;
 11172                           
 11173                           ;incstack = 0
 11174                           ; Regs used in _pwm1_load_duty: [wreg+status,2+status,0]
 11175  07AC  0871               	movf	pwm1_load_duty@duty+1,w
 11176  07AD  00F3               	movwf	??_pwm1_load_duty+1
 11177  07AE  0870               	movf	pwm1_load_duty@duty,w
 11178  07AF  00F2               	movwf	??_pwm1_load_duty
 11179  07B0  36F3               	lsrf	??_pwm1_load_duty+1,f
 11180  07B1  0CF2               	rrf	??_pwm1_load_duty,f
 11181  07B2  36F3               	lsrf	??_pwm1_load_duty+1,f
 11182  07B3  0CF2               	rrf	??_pwm1_load_duty,f
 11183  07B4  0872               	movf	??_pwm1_load_duty,w
 11184  07B5  0025               	movlb	5	; select bank5
 11185  07B6  0092               	movwf	18	;volatile
 11186                           
 11187                           ;drv_pwm.c: 18: CCPR1L = (duty & 0x03) << 6;
 11188  07B7  0870               	movf	pwm1_load_duty@duty,w
 11189  07B8  3903               	andlw	3
 11190  07B9  00F2               	movwf	??_pwm1_load_duty
 11191  07BA  0CF2               	rrf	??_pwm1_load_duty,f
 11192  07BB  0CF2               	rrf	??_pwm1_load_duty,f
 11193  07BC  0C72               	rrf	??_pwm1_load_duty,w
 11194  07BD  39C0               	andlw	192
 11195  07BE  0091               	movwf	17	;volatile
 11196  07BF  0008               	return
 11197  07C0                     __end_of_pwm1_load_duty:	
 11198                           
 11199                           	psect	text53
 11200  07C0                     __ptext53:	
 11201 ;; *************** function _pwm5_load_duty *****************
 11202 ;; Defined at:
 11203 ;;		line 85 in file "src/drv_pwm.c"
 11204 ;; Parameters:    Size  Location     Type
 11205 ;;  duty            2    0[COMMON] unsigned int 
 11206 ;; Auto vars:     Size  Location     Type
 11207 ;;		None
 11208 ;; Return value:  Size  Location     Type
 11209 ;;                  1    wreg      void 
 11210 ;; Registers used:
 11211 ;;		wreg, status,2, status,0
 11212 ;; Tracked objects:
 11213 ;;		On entry : 10/0
 11214 ;;		On exit  : 1F/C
 11215 ;;		Unchanged: 0/0
 11216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11217 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11219 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11220 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11221 ;;Total ram usage:        4 bytes
 11222 ;; Hardware stack levels used:    1
 11223 ;; This function calls:
 11224 ;;		Nothing
 11225 ;; This function is called by:
 11226 ;;		_led_ramp
 11227 ;; This function uses a non-reentrant model
 11228 ;;
 11229                           
 11230                           
 11231                           ;psect for function _pwm5_load_duty
 11232  07C0                     _pwm5_load_duty:	
 11233                           
 11234                           ;drv_pwm.c: 87: PWM5DCH = duty >> 2;
 11235                           
 11236                           ;incstack = 0
 11237                           ; Regs used in _pwm5_load_duty: [wreg+status,2+status,0]
 11238  07C0  0871               	movf	pwm5_load_duty@duty+1,w
 11239  07C1  00F3               	movwf	??_pwm5_load_duty+1
 11240  07C2  0870               	movf	pwm5_load_duty@duty,w
 11241  07C3  00F2               	movwf	??_pwm5_load_duty
 11242  07C4  36F3               	lsrf	??_pwm5_load_duty+1,f
 11243  07C5  0CF2               	rrf	??_pwm5_load_duty,f
 11244  07C6  36F3               	lsrf	??_pwm5_load_duty+1,f
 11245  07C7  0CF2               	rrf	??_pwm5_load_duty,f
 11246  07C8  0872               	movf	??_pwm5_load_duty,w
 11247  07C9  002C               	movlb	12	; select bank12
 11248  07CA  0098               	movwf	24	;volatile
 11249                           
 11250                           ;drv_pwm.c: 88: PWM5DCL = (duty & 0x03) >> 6;
 11251  07CB  0197               	clrf	23	;volatile
 11252  07CC  0008               	return
 11253  07CD                     __end_of_pwm5_load_duty:	
 11254                           
 11255                           	psect	text67
 11256  07D8                     __ptext67:	
 11257 ;; *************** function _tmr1_gate_isr *****************
 11258 ;; Defined at:
 11259 ;;		line 118 in file "src/drv_tmr1xx.c"
 11260 ;; Parameters:    Size  Location     Type
 11261 ;;		None
 11262 ;; Auto vars:     Size  Location     Type
 11263 ;;		None
 11264 ;; Return value:  Size  Location     Type
 11265 ;;                  1    wreg      void 
 11266 ;; Registers used:
 11267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 11268 ;; Tracked objects:
 11269 ;;		On entry : 1F/0
 11270 ;;		On exit  : 0/0
 11271 ;;		Unchanged: 0/0
 11272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11277 ;;Total ram usage:        0 bytes
 11278 ;; Hardware stack levels used:    1
 11279 ;; Hardware stack levels required when called:    2
 11280 ;; This function calls:
 11281 ;;		Absolute function
 11282 ;;		_ir_decode
 11283 ;; This function is called by:
 11284 ;;		_ISR
 11285 ;; This function uses a non-reentrant model
 11286 ;;
 11287                           
 11288                           
 11289                           ;psect for function _tmr1_gate_isr
 11290  07D8                     _tmr1_gate_isr:	
 11291                           
 11292                           ;drv_tmr1xx.c: 120: PIR1bits.TMR1GIF = 0;
 11293                           
 11294                           ;incstack = 0
 11295                           ; Regs used in _tmr1_gate_isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 11296  07D8  1391               	bcf	17,7	;volatile
 11297                           
 11298                           ;drv_tmr1xx.c: 122: if(tmr1_gate_isr_cb != (0)) {
 11299  07D9  083F               	movf	_tmr1_gate_isr_cb,w
 11300  07DA  0440               	iorwf	_tmr1_gate_isr_cb+1,w
 11301  07DB  1903               	btfsc	3,2
 11302  07DC  0008               	return
 11303                           
 11304                           ;drv_tmr1xx.c: 123: tmr1_gate_isr_cb();
 11305  07DD  0840               	movf	_tmr1_gate_isr_cb+1,w
 11306  07DE  008A               	movwf	10
 11307  07DF  083F               	movf	_tmr1_gate_isr_cb,w
 11308  07E0  000A               	callw
 11309  07E1  3187               	pagesel	$
 11310  07E2  0008               	return
 11311  07E3                     __end_of_tmr1_gate_isr:	


Data Sizes:
    Strings     0
    Constant    0
    Data        35
    BSS         88
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     17      79
    BANK1            80      0      61
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    eeprom_read_buffer@pbuf	PTR unsigned char  size(1) Largest target is 51
		 -> m_led_para(BANK1[51]), 

    eeprom_write_buffer@pbuf	PTR unsigned char  size(1) Largest target is 51
		 -> m_led_para(BANK1[51]), 

    util_decrease@src	PTR unsigned int  size(1) Largest target is 51
		 -> m_led_para.mBright(BANK1[10]), m_led_para(BANK1[51]), 

    util_increase@src	PTR unsigned int  size(1) Largest target is 51
		 -> m_led_para.mBright(BANK1[10]), m_led_para(BANK1[51]), 

    led_load_duty	PTR FTN(unsigned int ,)void [5] size(2) Largest target is 1
		 -> pwm5_load_duty(), pwm4_load_duty(), pwm3_load_duty(), pwm2_load_duty(), 
		 -> pwm1_load_duty(), 

    tmr2_init@cb	PTR FTN()void  size(2) Largest target is 1
		 -> led_run(), 

    tmr2_isr_cb	PTR FTN()void  size(2) Largest target is 1
		 -> led_run(), Absolute function(), 

    tmr1_init@cb	PTR FTN()void  size(2) Largest target is 1
		 -> ir_decode(), 

    tmr1_gate_isr_cb	PTR FTN()void  size(2) Largest target is 1
		 -> ir_decode(), Absolute function(), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _led_run->_ir_long_action
    _led_ramp->_pwm1_load_duty
    _led_ramp->_pwm2_load_duty
    _led_ramp->_pwm3_load_duty
    _led_ramp->_pwm4_load_duty
    _led_ramp->_pwm5_load_duty
    _ir_long_action->i1_led_set_decrease_bright
    _ir_long_action->i1_led_set_increase_bright
    i1_led_set_increase_bright->i1_util_increase
    i1_led_set_decrease_bright->i1_util_decrease
    _led_set_custom->i1___bmul
    _tmr1_gate_isr->_ir_decode
    _ir_decode->_tmr1_readtimer

Critical Paths under _main in BANK0

    _main->_led_para_init
    _led_para_init->_eeprom_read_buffer
    _eeprom_read_buffer->_eeprom_read_byte
    _ir_action->_ir_short_action
    _led_save_para->_eeprom_write_buffer
    _eeprom_write_buffer->_eeprom_write_byte
    _ir_short_action->_led_set_decrease_bright
    _ir_short_action->_led_set_increase_bright
    _led_set_increase_bright->_util_increase
    _led_set_decrease_bright->_util_decrease
    _led_set_custom_bright->___bmul
    _led_init->_led_turnoff_ramp
    _led_init->_led_turnon_ramp
    _app_init->_pwm2_init
    _app_init->_pwm3_init
    _app_init->_pwm4_init
    _pwm5_init->_gpio_set_outputpps
    _pwm4_init->_gpio_set_outputpps
    _pwm3_init->_gpio_set_outputpps
    _pwm2_init->_gpio_set_outputpps
    _pwm1_init->_gpio_set_outputpps

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   19432
                           _app_init
                          _ir_action
              _ir_tmr1_overflow_rest
                           _led_init
                      _led_para_init
 ---------------------------------------------------------------------------------
 (1) _led_para_init                                       10    10      0     950
                                              7 BANK0     10    10      0
                             ___bmul
                 _eeprom_read_buffer
 ---------------------------------------------------------------------------------
 (2) _eeprom_read_buffer                                   5     1      4     415
                                              2 BANK0      5     1      4
                   _eeprom_read_byte
 ---------------------------------------------------------------------------------
 (3) _eeprom_read_byte                                     2     0      2     109
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _ir_tmr1_overflow_rest                                0     0      0     782
                      _led_get_state
                      _led_save_para
                    _tmr1_starttimer
                     _tmr1_stoptimer
                    _tmr1_writetimer
                   _tmr2_enabled_isr
 ---------------------------------------------------------------------------------
 (2) _tmr1_stoptimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _led_get_state                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ir_action                                            0     0      0    2808
                    _ir_short_action
                      _led_save_para
 ---------------------------------------------------------------------------------
 (2) _led_save_para                                        0     0      0     524
                _eeprom_write_buffer
 ---------------------------------------------------------------------------------
 (3) _eeprom_write_buffer                                  5     1      4     524
                                              4 BANK0      5     1      4
                  _eeprom_write_byte
 ---------------------------------------------------------------------------------
 (4) _eeprom_write_byte                                    4     1      3     218
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _ir_short_action                                      2     2      0    2284
                                             12 BANK0      2     2      0
                       _ir_get_index
                    _led_clear_state
                _led_get_power_state
                           _led_init
              _led_set_custom_bright
            _led_set_decrease_bright
            _led_set_increase_bright
                      _led_set_state
                      _led_setcolour
                         _led_toggle
 ---------------------------------------------------------------------------------
 (3) _led_toggle                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_setcolour                                        4     2      2     242
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _led_set_state                                        2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _led_set_increase_bright                              4     1      3     626
                                              8 BANK0      4     1      3
                      _util_increase
 ---------------------------------------------------------------------------------
 (4) _util_increase                                        8     5      3     312
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (3) _led_set_decrease_bright                              4     1      3     626
                                              8 BANK0      4     1      3
                      _util_decrease
 ---------------------------------------------------------------------------------
 (4) _util_decrease                                        8     5      3     312
                                              0 BANK0      8     5      3
 ---------------------------------------------------------------------------------
 (3) _led_set_custom_bright                                5     5      0     333
                                              3 BANK0      5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               3     2      1     177
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (1) _led_init                                             0     0      0     158
                   _led_turnoff_ramp
                    _led_turnon_ramp
 ---------------------------------------------------------------------------------
 (2) _led_turnon_ramp                                      1     1      0      90
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _led_turnoff_ramp                                     1     1      0      68
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _led_get_power_state                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _led_clear_state                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ir_get_index                                         2     2      0      50
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _app_init                                             0     0      0   14734
                           _gpio_set
                 _gpio_set_intputpps
                           _osc_init
                          _pwm1_init
                          _pwm2_init
                          _pwm3_init
                          _pwm4_init
                          _pwm5_init
              _tmr1_gate_enabled_isr
                          _tmr1_init
                    _tmr1_starttimer
                    _tmr1_writetimer
                   _tmr2_enabled_isr
                          _tmr2_init
                        _tmr2_reload
                    _tmr2_starttimer
 ---------------------------------------------------------------------------------
 (2) _tmr2_starttimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _tmr2_reload                                          1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _tmr2_init                                            5     2      3     194
                                              0 BANK0      5     2      3
 ---------------------------------------------------------------------------------
 (2) _tmr2_enabled_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _tmr1_writetimer                                      2     0      2     258
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _tmr1_starttimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _tmr1_init                                            6     2      4     280
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) _tmr1_gate_enabled_isr                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pwm5_init                                            3     1      2    2484
                                              9 BANK0      3     1      2
                           _gpio_set
                 _gpio_set_outputpps
 ---------------------------------------------------------------------------------
 (2) _pwm4_init                                            4     2      2    2484
                                              9 BANK0      4     2      2
                           _gpio_set
                 _gpio_set_outputpps
 ---------------------------------------------------------------------------------
 (2) _pwm3_init                                            4     2      2    2484
                                              9 BANK0      4     2      2
                           _gpio_set
                 _gpio_set_outputpps
 ---------------------------------------------------------------------------------
 (2) _pwm2_init                                            4     2      2    2484
                                              9 BANK0      4     2      2
                           _gpio_set
                 _gpio_set_outputpps
 ---------------------------------------------------------------------------------
 (2) _pwm1_init                                            3     1      2    2484
                                              9 BANK0      3     1      2
                           _gpio_set
                 _gpio_set_outputpps
 ---------------------------------------------------------------------------------
 (3) _gpio_set_outputpps                                   9     7      2     794
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (3) _gpio_set                                             6     4      2    1452
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (2) _osc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _gpio_set_intputpps                                   2     1      1     108
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0    2040
                      _tmr1_gate_isr
                           _tmr2_isr
 ---------------------------------------------------------------------------------
 (6) _tmr2_isr                                             0     0      0    1606
                   Absolute function *
                            _led_run *
 ---------------------------------------------------------------------------------
 (7) _led_run                                              0     0      0    1606
                     _ir_long_action
                         _led_notice
                           _led_ramp
 ---------------------------------------------------------------------------------
 (8) _led_ramp                                             7     7      0     507
                                              4 COMMON     7     7      0
                     _pwm1_load_duty *
                     _pwm2_load_duty *
                     _pwm3_load_duty *
                     _pwm4_load_duty *
                     _pwm5_load_duty *
 ---------------------------------------------------------------------------------
 (9) _pwm5_load_duty                                       4     2      2      65
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _pwm4_load_duty                                       4     2      2      44
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _pwm3_load_duty                                       4     2      2      44
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _pwm2_load_duty                                       4     2      2      44
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _pwm1_load_duty                                       4     2      2      44
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (8) _led_notice                                           2     2      0       0
                                              0 COMMON     2     2      0
                 _led_turnoff_direct
                  _led_turnon_direct
 ---------------------------------------------------------------------------------
 (9) _led_turnon_direct                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _led_turnoff_direct                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ir_long_action                                       1     1      0    1099
                                             12 COMMON     1     1      0
                     _led_set_custom
                    _led_startnotice
                     i1_ir_get_index
                    i1_led_get_state
          i1_led_set_decrease_bright
          i1_led_set_increase_bright
 ---------------------------------------------------------------------------------
 (9) i1_led_set_increase_bright                            4     1      3     368
                                              8 COMMON     4     1      3
                    i1_util_increase
 ---------------------------------------------------------------------------------
 (10) i1_util_increase                                     8     5      3     206
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (9) i1_led_set_decrease_bright                            4     1      3     368
                                              8 COMMON     4     1      3
                    i1_util_decrease
 ---------------------------------------------------------------------------------
 (10) i1_util_decrease                                     8     5      3     206
                                              0 COMMON     8     5      3
 ---------------------------------------------------------------------------------
 (9) i1_led_get_state                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i1_ir_get_index                                       2     2      0      50
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _led_startnotice                                      2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (9) _led_set_custom                                       5     5      0     199
                                              3 COMMON     5     5      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (10) i1___bmul                                            3     2      1      87
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (6) _tmr1_gate_isr                                        0     0      0     434
                   Absolute function *
                          _ir_decode *
 ---------------------------------------------------------------------------------
 (7) _ir_decode                                            8     8      0     434
                                              6 COMMON     8     8      0
                     _tmr1_readtimer
                  _tmr2_disabled_isr
              i1_led_get_power_state
                  i1_tmr1_writetimer
                 i1_tmr2_enabled_isr
 ---------------------------------------------------------------------------------
 (8) i1_tmr2_enabled_isr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i1_tmr1_writetimer                                    2     0      2     114
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (8) i1_led_get_power_state                                0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _tmr2_disabled_isr                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _tmr1_readtimer                                       6     4      2      73
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _app_init
     _gpio_set
     _gpio_set_intputpps
     _osc_init
     _pwm1_init
       _gpio_set
       _gpio_set_outputpps
     _pwm2_init
       _gpio_set
       _gpio_set_outputpps
     _pwm3_init
       _gpio_set
       _gpio_set_outputpps
     _pwm4_init
       _gpio_set
       _gpio_set_outputpps
     _pwm5_init
       _gpio_set
       _gpio_set_outputpps
     _tmr1_gate_enabled_isr
     _tmr1_init
     _tmr1_starttimer
     _tmr1_writetimer
     _tmr2_enabled_isr
     _tmr2_init
     _tmr2_reload
     _tmr2_starttimer
   _ir_action
     _ir_short_action
       _ir_get_index
       _led_clear_state
       _led_get_power_state
       _led_init
         _led_turnoff_ramp
         _led_turnon_ramp
       _led_set_custom_bright
         ___bmul
       _led_set_decrease_bright
         _util_decrease
       _led_set_increase_bright
         _util_increase
       _led_set_state
       _led_setcolour
       _led_toggle
     _led_save_para
       _eeprom_write_buffer
         _eeprom_write_byte
   _ir_tmr1_overflow_rest
     _led_get_state
     _led_save_para
       _eeprom_write_buffer
         _eeprom_write_byte
     _tmr1_starttimer
     _tmr1_stoptimer
     _tmr1_writetimer
     _tmr2_enabled_isr
   _led_init
     _led_turnoff_ramp
     _led_turnon_ramp
   _led_para_init
     ___bmul
     _eeprom_read_buffer
       _eeprom_read_byte

 _ISR (ROOT)
   _tmr1_gate_isr
     Absolute function(Fake) *
     _ir_decode *
       _tmr1_readtimer
       _tmr2_disabled_isr
       i1_led_get_power_state
       i1_tmr1_writetimer
       i1_tmr2_enabled_isr
   _tmr2_isr
     Absolute function(Fake) *
     _led_run *
       _ir_long_action
         _led_set_custom
           i1___bmul
         _led_startnotice
         i1_ir_get_index
         i1_led_get_state
         i1_led_set_decrease_bright
           i1_util_decrease
         i1_led_set_increase_bright
           i1_util_increase
       _led_notice
         _led_turnoff_direct
         _led_turnon_direct
       _led_ramp
         _pwm1_load_duty *
         _pwm2_load_duty *
         _pwm3_load_duty *
         _pwm4_load_duty *
         _pwm5_load_duty *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      4F       5       98.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      3D       7       76.3%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      9A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      9A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Wed Oct 31 11:43:17 2018

                 ir_long_action@cnt 0037                   ir_long_action@idx 007C  
  __size_of_led_set_decrease_bright 0013                                   pc 0002  
          __size_ofi1_util_increase 0020                      ___bmul@product 005F  
                       __CFG_CP$OFF 0000                                  PL2 05F7  
                                PL4 0606                                  PL6 0FCA  
                                PL8 060D                                  l34 017A  
                    _m_led_run_para 0020           tmr1_readtimer@readValHigh 0074  
           __size_of_pwm3_load_duty 0014                ?_eeprom_write_buffer 0062  
__size_ofi1_led_set_increase_bright 0013                       _led_save_para 031E  
                       _step_bright 0059                                 PL10 0618  
                               PL20 0634                                 PL12 0622  
                               PL30 0640                                 PL22 0FEA  
                               PL14 062B                                 PL32 0753  
                               PL24 0FEF                                 PL16 0FDC  
                               PL34 0FFB                                 PL26 0FF5  
                               PL18 0FE4                                 PL28 063A  
                       __CFG_LVP$ON 0000                                 l340 0432  
                               l260 004F                                 l334 042F  
                               l336 042F                                 l360 02B2  
                               l345 0434                                 l329 042D  
                               l480 03B1                                 l474 039C  
                               l378 02E4                                 l468 0386  
                               l485 03C1                                 l493 0428  
            i1tmr1_writetimer@value 0070                                 l575 0289  
                               l489 03D1                                 l674 0378  
               led_para_init@i_1144 006C                                 _PR2 001E  
                      __CFG_CPD$OFF 0000                                 _ISR 0004  
            eeprom_write_buffer@len 0065             __size_of_tmr1_readtimer 0010  
             eeprom_write_byte@addr 005E                       _led_set_state 04A8  
             tmr1_readtimer@readVal 0072                ??i1_tmr2_enabled_isr 0070  
            ?i1_led_get_power_state 0070               eeprom_write_byte@byte 0060  
                     _led_setcolour 04B4                   ??_led_turnon_ramp 005E  
          __end_of_tmr2_enabled_isr 031E                                 wreg 0009  
           __size_of_pwm4_load_duty 0014                                S3064 07ED  
                    ?_led_get_state 0070                                ?_ISR 0070  
                              l3000 02B2                                l3010 02E9  
                              l3004 02B5                                l3006 02E1  
                              l3014 02EC                                l2304 0160  
                              l3008 02E4                                l3016 0318  
                              l2306 0163                                l2330 022A  
                              l2226 055D                                l2308 0177  
                              l2172 028C                                l2342 0256  
                              l2334 0230                                l2184 0341  
                              l2336 0244                                l2290 0101  
                              l2362 042D                                l2292 0107  
                              l2284 00E4                                l2364 0432  
                              l2372 0439                                l2348 0268  
                              l2356 0278                                l2444 04B6  
                              l2286 00F5                                l2366 0434  
                              l2374 0480                                l2454 058B  
                              l2358 0288                                l2288 00FB  
                              l2296 010D                                l2368 0436  
                              l2464 0485                                l2472 034B  
                              l2474 034D                                l2820 0386  
                              l2670 01FE                                l2840 03C1  
                              l2816 0383                 i1ir_get_index@index 0071  
                              l2834 03B1                                l2826 039B  
                              l2818 0385                                l2668 020A  
                              l2828 039C                                l2862 0569  
                              l2848 03D1                                l2858 03DE  
                              l2954 0503                                l2948 0501  
                              l2974 0529                                l2958 0522  
                              l2968 0528                                l2978 0550  
                 ?_led_turnoff_ramp 0070                        __CFG_WDTE$ON 0000  
                              u1240 04DC                                u1085 05EA  
                              _LATA 010C                                u1174 00DF  
                              u1175 00DE                                u1095 05B6  
                              u1905 0542                                u1774 03CA  
                              u1775 03C9                                u1885 0518  
                              _TMR2 001D                                _WPUA 020C  
                    _led_set_custom 0EB3             eeprom_write_buffer@addr 0062  
                      __CFG_WRT$OFF 0000             __size_of_pwm5_load_duty 000D  
           eeprom_write_buffer@pbuf 0064                  ??_led_turnoff_ramp 005E  
                  ??i1_ir_get_index 0070                                _main 0047  
                 ??_ir_short_action 006A                                fsr0h 0005  
                              fsr1h 0007                                indf0 0000  
                              fsr0l 0004                                indf1 0001  
                              fsr1l 0006                                btemp 007E  
            eeprom_write_byte@state 0061                                start 001A  
                    ?_led_para_init 0070                       __CFG_CSWEN$ON 0000  
                 ___bmul@multiplier 0060                       __CFG_MCLRE$ON 0000  
                             ??_ISR 007E               ??_eeprom_write_buffer 0066  
                  ?_led_clear_state 0070                      ?_led_save_para 0070  
                 led_set_custom@chn 0076             __size_of_tmr1_stoptimer 0002  
                             ?_main 0070                i1ir_get_index@keynum 0070  
                    ?_led_set_state 0070                      __CFG_DEBUG$OFF 0000  
                 _led_turnon_direct 0F80                               i1l340 0E4F  
                             i1l430 072D                               i1l334 0E4C  
                             i1l415 0705                               i1l271 0018  
                             i1l336 0E4C                               i1l345 0E51  
                             i1l329 0E4A                               i1l427 071D  
                             i1l419 06FE                               i1l451 0E20  
                             i1l444 0E09                               i1l268 0010  
                             i1l438 0E45                               i1l456 0E31  
                             i1l625 0F73                      ?_led_setcolour 005E  
                             _TMR1H 001A                               _TMR1L 0019  
              tmr1_writetimer@value 005E                               _TRISA 008C  
                     __CFG_PWRTE$ON 0000                  ?_led_turnon_direct 0070  
                    __CFG_FCMEN$OFF 0000                     __end_of_led_run 0DD5  
            __end_of_led_set_custom 0ECE                  i1util_decrease@min 0071  
                i1util_decrease@src 0077         __size_of_eeprom_read_buffer 0016  
             _led_set_custom_bright 0483                    __end_ofi1___bmul 0EDA  
                    __CFG_BOREN$OFF 0000                               pclath 000A  
               ??_led_turnon_direct 0070                      __CFG_BORV$HIGH 0000  
                             status 0003                               wtemp0 007E  
             __end_of_tmr1_gate_isr 07E3                     i1_led_get_state 0E9F  
       ??i1_led_set_decrease_bright 007B                       ?_ir_get_index 0070  
                   __initialization 001C              __size_of_util_decrease 0021  
                      __end_of_main 0055                   ??i1_util_decrease 0073  
          __size_of_tmr1_starttimer 0003           __end_of_led_turnon_direct 0F89  
                  tmr2_reload@value 005E                  _led_turnoff_direct 0F77  
                            ??_main 006F              __size_of_util_increase 0021  
                 ??i1_util_increase 0073                   i1_tmr1_writetimer 073F  
                   ??_led_get_state 005E                 ?_led_turnoff_direct 0070  
                ?i1_tmr1_writetimer 0070                         gpio_set@pin 005E  
                      ?_tmr2_reload 0070            __size_of_tmr2_starttimer 0002  
                   ?_led_set_custom 0070                              _CCPR1H 0292  
                            _CCPR2H 0296                              _CCPR3H 0312  
                            _CCPR1L 0291                              _CCPR4H 0316  
                            _CCPR2L 0295                              _CCPR3L 0311  
                            _CCPR4L 0315            __size_of_tmr1_writetimer 000E  
                            _ANSELA 018C                  __CFG_RSTOSC$HFINT1 0000  
                            _T1GPPS 0E13                              _RA0PPS 0E90  
                            _RC0PPS 0EA0                              _RB4PPS 0E9C  
                    _pwm1_load_duty 07AC                              u101_25 0F40  
                            u102_25 0F0D                              i1l2122 0ED0  
                            i1l2152 0EB5                              i1l2240 0E4A  
                            i1l2242 0E4F                              i1l2250 0E56  
                            i1l2402 0E20                              i1l2244 0E51  
                            i1l2252 0E9D                              i1l2412 0E31  
                            i1l2246 0E53                              i1l2502 0F6F  
                            i1l2328 0750                              i1l2522 0FAB  
                            i1l2514 0F8A                              i1l2524 0FB4  
                            i1l2508 0F89                              i1l2550 0748  
                            i1l2518 0F9A                              i1l2712 0652  
                            i1l2392 0E09                              i1l2802 0709  
                            i1l2722 0666                              i1l2812 071F  
                            i1l2726 0674                              i1l2736 0692  
                            i1l2728 0676                              i1l2488 0F4C  
                            i1l2746 069F                              i1l2738 0693  
                            i1l2748 06A1                              i1l2790 06FA  
                            i1l2880 0DCC                              i1l2796 0700  
                            i1l2888 0DD4                              u152_20 06B0  
                            u153_20 06B1                              u147_24 068B  
                            u147_25 0689                    _eeprom_read_byte 057D  
               ??i1_tmr1_writetimer 0072                     ??_led_para_init 0065  
                    ??_ir_get_index 005E                     _led_startnotice 0EDA  
                    _pwm2_load_duty 0798                 eeprom_read_buffer@i 0064  
           _led_set_decrease_bright 058F                    __end_of_app_init 00BE  
              ??_led_turnoff_direct 0070        __size_of_led_get_power_state 0001  
                            ___bmul 055B                    __end_of_led_init 028A  
                  __end_of_led_ramp 0FCA                     ??_led_save_para 0067  
                    __CFG_STVREN$ON 0000                    __end_of_gpio_set 0118  
                    _pwm3_load_duty 0784            tmr1_readtimer@readValLow 0075  
                   ??_led_set_state 005E                     ??_led_setcolour 0060  
       led_set_increase_bright@step 0066           __end_ofi1_tmr1_writetimer 074D  
               i1util_decrease@step 0070                           ??_led_run 007D  
                    _tmr1_readtimer 072E           i1_led_set_decrease_bright 0EE6  
                  __end_of_tmr2_isr 07D8                    __end_of_osc_init 00D8  
                    _pwm4_load_duty 0770                       _util_decrease 05A2  
            __end_of_pwm1_load_duty 07C0              ?_led_set_custom_bright 0070  
                   ir_decode@keyNum 007B             __end_ofi1_led_get_state 0EB3  
    __size_of_ir_tmr1_overflow_rest 0078       __end_of_ir_tmr1_overflow_rest 031B  
                   ir_decode@rptCnt 0042                      _pwm5_load_duty 07C0  
                  util_increase@max 005F                    util_increase@src 0065  
           __end_of__initialization 0044              __end_of_pwm2_load_duty 07AC  
                  led_turnon_ramp@i 005E                       _util_increase 05D6  
             _tmr1_gate_enabled_isr 01DA                 ___bmul@multiplicand 005E  
                    __pcstackCOMMON 0070                     led_set_custom@i 0077  
       __size_of_gpio_set_intputpps 0006              __end_of_pwm3_load_duty 0798  
                      __pidataBANK0 0757                        __pidataBANK1 07E3  
                   _led_turnon_ramp 028A       i1led_set_decrease_bright@step 0078  
                    _tmr1_stoptimer 033D              __end_of_tmr1_readtimer 073E  
                        __end_ofPL2 0606                          __end_ofPL4 060D  
                        __end_ofPL6 0FDC                          __end_ofPL8 0618  
        __size_of_led_turnon_direct 0009            ?_led_set_increase_bright 0066  
           ??i1_led_get_power_state 0070                           ?i1___bmul 0070  
            __end_of_pwm4_load_duty 0784                   ??_tmr1_starttimer 005E  
                   _ir_short_action 0382                      ?_util_decrease 005E  
                 ?_tmr2_enabled_isr 0070                    i1___bmul@product 0072  
                   ?_pwm1_load_duty 0070              __end_of_pwm5_load_duty 07CD  
                ??_tmr2_enabled_isr 005E         __size_of_gpio_set_outputpps 0026  
           __end_of_led_startnotice 0EE6                          __pbssBANK0 0020  
                        __pbssBANK1 00A0                  __size_of_ir_decode 00E8  
                __size_of_ir_action 0009                       led_notice@cnt 0035  
                    ?_util_increase 005E           ??_led_set_decrease_bright 0069  
                   ?_pwm2_load_duty 0070                   ??_tmr2_starttimer 005E  
                 ??_tmr1_writetimer 0060                          __pmaintext 0047  
                           ?___bmul 005E               gpio_set_intputpps@pin 005E  
            __end_of_tmr1_stoptimer 033F                     ?_pwm3_load_duty 0070  
         __size_of_led_turnoff_ramp 000C                     __CFG_PPS1WAY$ON 0000  
                      gpio_set@mask 0063                          __pintentry 0004  
                      gpio_set@port 0061                  __size_of_pwm1_init 001D  
                __size_of_pwm2_init 0020                  __size_of_pwm3_init 0023  
                __size_of_tmr1_init 0021                  __size_of_pwm4_init 0022  
                __size_of_tmr2_init 0016                             _CCP1CON 0293  
                           _CCP2CON 0297                             _CCP3CON 0313  
                __size_of_pwm5_init 001A                             _CCP4CON 0317  
           __size_of_ir_long_action 0071         gpio_set_outputpps@outputpps 005F  
                   ?_tmr1_readtimer 0070                          ??i1___bmul 0071  
        __size_ofi1_tmr1_writetimer 000E                  ir_get_index@keynum 005E  
                   ?_pwm4_load_duty 0070         __size_ofi1_tmr2_enabled_isr 0003  
              __end_of_ir_get_index 0482                             _OSCCON3 091B  
                    gpio_set@offset 0062                             _NVMADRH 0892  
                           _NVMADRL 0891                             _NVMDATL 0893  
                           _NVMCON2 0896                             _PWM5DCH 0618  
                           _PWM5DCL 0617                         tmr1_init@cb 0060  
                       tmr1_init@cs 0063                             _PWM5CON 0619  
                           _PPSLOCK 0E0F                           ?_app_init 0070  
                pwm1_load_duty@duty 0070                         tmr2_init@cb 005F  
                   ?_pwm5_load_duty 0070                          _m_led_para 00A0  
                  ?i1_led_get_state 0070                           ?_led_init 0070  
                         ?_led_ramp 0070                          _led_notice 0F4C  
                        _led_toggle 04D3                __size_of_tmr2_reload 0003  
                   i1_util_decrease 0EF9                           ?_gpio_set 005E  
                        _m_ir_state 003B              ?_tmr1_gate_enabled_isr 0070  
           __end_of_led_turnon_ramp 029A                  ir_short_action@idx 006B  
                         ?_tmr2_isr 0070                           ?_osc_init 0070  
       __end_of_eeprom_write_buffer 0361                     i1_util_increase 0F2C  
                        _max_bright 004F                     ?_tmr1_stoptimer 0070  
                   __size_of___bmul 000C                eeprom_read_byte@addr 005E  
           __end_of_ir_short_action 0429            __end_of_eeprom_read_byte 058B  
                 __end_of_ir_decode 072E                   __end_of_ir_action 02A3  
                           __ptext1 04DF                             __ptext2 0567  
                           __ptext3 057D                             __ptext4 02A3  
                           __ptext5 033D                             __ptext6 0328  
                           __ptext7 029A                             __ptext8 031E  
                           __ptext9 034B     __end_of_led_set_decrease_bright 05A2  
                           _led_run 0DC9                        __size_of_ISR 0016  
                         _T1CONbits 001B                     ??_util_decrease 0061  
                  ??_led_set_custom 0073                           _T2CONbits 001F  
        ?i1_led_set_increase_bright 0078                  i1util_increase@max 0071  
               i1___bmul@multiplier 0071                  i1util_increase@src 0077  
          __size_of_led_clear_state 0004                 _led_get_power_state 0482  
        __end_of_eeprom_read_buffer 057D                          ??_app_init 006B  
                           clrloop0 0DC4          led_set_decrease_bright@chn 0069  
        led_set_decrease_bright@min 0067                          ??_led_init 005F  
              end_of_initialization 0044                          ??_led_ramp 0074  
__size_ofi1_led_set_decrease_bright 0013                       pwm1_init@port 0069  
                   ??_util_increase 0061                   __end_of_pwm1_init 0135  
                 __end_of_pwm2_init 0155                   __end_of_pwm3_init 019E  
                 __end_of_tmr1_init 01FE                   __end_of_pwm4_init 01C0  
                 __end_of_tmr2_init 0225                    ?_led_startnotice 0070  
                 __end_of_pwm5_init 01DA                          ??_gpio_set 0060  
                           init_ram 07F7                             initloop 07F8  
                pwm3_load_duty@duty 0070                       pwm2_init@port 006A  
                        ??_tmr2_isr 007D                          ??_osc_init 005E  
              ?_led_get_power_state 0070                           _OSCENbits 091D  
                  ir_decode@codeVal 0039             __size_ofi1_ir_get_index 0059  
                     tmr1_init@ckps 005E                   led_turnoff_ramp@i 005E  
                     pwm3_init@port 006A              __size_of_tmr1_gate_isr 000B  
                     tmr2_init@ckps 0062             ??_led_set_custom_bright 0061  
                     pwm4_init@port 006A                   _eeprom_write_byte 0361  
                 util_increase@step 005E   __end_ofi1_led_set_increase_bright 0F2C  
           __end_ofi1_util_decrease 0F19                  ?_eeprom_write_byte 005E  
             __end_of_led_get_state 033D                eeprom_write_buffer@i 0066  
                  __CFG_FEXTOSC$OFF 0000                         ?_led_notice 0070  
                     pwm5_init@port 0069                         ?_led_toggle 0070  
                       _CCP1CONbits 0293                 ??_eeprom_write_byte 0061  
           __end_ofi1_util_increase 0F4C                         _CCP2CONbits 0297  
                       _CCP3CONbits 0313                    ?_led_turnon_ramp 0070  
                       _CCP4CONbits 0317               __end_of_led_para_init 055B  
             ??_led_get_power_state 005E                      led_para_init@i 006D  
                    led_para_init@j 006E                     _tmr1_starttimer 01FE  
       __size_of_led_turnoff_direct 0009                  pwm5_load_duty@duty 0070  
                  _led_turnoff_ramp 033F                          led_run@cnt 0041  
                    _ir_long_action 0DD5                      __end_of___bmul 0567  
             __end_of_led_save_para 0328                    ?_ir_short_action 0070  
             __size_of_ir_get_index 0059           __end_of_eeprom_write_byte 0382  
    __size_ofi1_led_get_power_state 0001               __end_of_led_set_state 04B4  
             __end_of_led_setcolour 04D3       __end_ofi1_led_get_power_state 073F  
                  ??_pwm1_load_duty 0072                       ir_decode@nBit 0043  
                     ir_decode@hVal 007C                   __size_ofi1___bmul 000C  
                       __end_ofPL10 0622                         __end_ofPL20 063A  
                       __end_ofPL12 062B                         __end_ofPL30 0646  
                       __end_ofPL22 0FEF                         __end_ofPL14 0634  
                       __end_ofPL32 0757                         __end_ofPL24 0FF5  
                       __end_ofPL16 0FE4                         __end_ofPL34 1000  
                       __end_ofPL26 0FFB                         __end_ofPL18 0FEA  
                       __end_ofPL28 0640                 start_initialization 001C  
                       __end_of_ISR 001A                     _tmr2_starttimer 0228  
            eeprom_read_buffer@addr 0060                     _tmr1_writetimer 0201  
            eeprom_read_buffer@pbuf 0062                    ??_pwm2_load_duty 0072  
  __size_of_led_set_increase_bright 0013                    led_set_state@idx 005F  
                 ??_led_clear_state 005E               _ir_tmr1_overflow_rest 02A3  
                  ??_pwm3_load_duty 0072                       _tmr1_gate_isr 07D8  
        __end_of_gpio_set_intputpps 00C4           __size_of_tmr2_enabled_isr 0003  
                  __CFG_LPBOREN$OFF 0000                        _ir_get_index 0429  
                  led_setcolour@chn 0060                    led_setcolour@max 005E  
                  ??_tmr1_readtimer 0072              __end_of_ir_long_action 0E46  
                          ??___bmul 005F                   _tmr2_disabled_isr 0750  
                       _CCPTMRSbits 029F                    ??_pwm4_load_duty 0072  
        led_set_increase_bright@chn 0069          led_set_increase_bright@max 0067  
     i1led_set_increase_bright@step 0078                         __pdataBANK0 0045  
                       __pdataBANK1 00D3                  ?_tmr2_disabled_isr 0070  
               __size_of_led_notice 002B                 __size_of_led_toggle 000C  
                  ??_pwm5_load_duty 0072                           ___latbits 0002  
               ??_tmr2_disabled_isr 0070                       __pcstackBANK0 005E  
        __end_of_gpio_set_outputpps 017B                    ?i1_util_decrease 0070  
      i1led_set_decrease_bright@chn 007B        i1led_set_decrease_bright@min 0079  
                 app_led@max_bright 0045             ??_tmr1_gate_enabled_isr 005E  
                 __size_of_app_init 0069                      led_setcolour@i 0061  
           __end_of_tmr1_starttimer 0201                   __size_of_led_init 0060  
                 __size_of_led_ramp 0041                      ?_tmr1_gate_isr 0070  
                  ?i1_util_increase 0070                    ??_tmr1_stoptimer 005E  
                 __size_of_gpio_set 0040           __end_of_tmr2_disabled_isr 0753  
                   ?_ir_long_action 0070                   __size_of_tmr2_isr 000B  
                    i1_ir_get_index 0E46                   __size_of_osc_init 0014  
            gpio_set_intputpps@port 005F                   ir_get_index@index 005F  
           __end_of_tmr2_starttimer 022A                           __pswtext1 07ED  
                     gpio_set@state 005F          __end_ofi1_tmr2_enabled_isr 0750  
                 ?_eeprom_read_byte 005E             __end_of_tmr1_writetimer 020F  
        __size_of_eeprom_write_byte 0021                            ?_led_run 0070  
                ??_eeprom_read_byte 0060                           _ir_decode 0646  
                         _ir_action 029A         ??i1_led_set_increase_bright 007B  
                     ??_tmr2_reload 005E            ?_led_set_decrease_bright 0066  
            ?_ir_tmr1_overflow_rest 0070                        pwm1_init@pin 0067  
                      pwm1_init@src 0068                           clear_ram0 0DC3  
                         _pwm1_init 0118                           _pwm2_init 0135  
                          _PIE1bits 0091                           _tmr1_init 01DD  
                         _pwm3_init 017B                           _tmr2_init 020F  
                         _pwm4_init 019E                           _pwm5_init 01C0  
            led_set_custom_bright@i 0065                  _eeprom_read_buffer 0567  
             i1___bmul@multiplicand 0070            __size_ofi1_led_get_state 0014  
                      pwm2_init@pin 0067                        pwm2_init@src 0068  
            __end_ofi1_ir_get_index 0E9F                    _tmr1_gate_isr_cb 003F  
                          _PIR1bits 0011                        pwm3_init@pin 0067  
                      pwm3_init@src 0068                        tmr1_init@src 005F  
               ?_eeprom_read_buffer 0060                        pwm4_init@pin 0067  
                      pwm4_init@src 0068        __size_of_eeprom_write_buffer 0016  
                          i1___bmul 0ECE                  led_startnotice@cnt 0071  
                      pwm5_init@pin 0067                        pwm5_init@src 0068  
                        ?_ir_decode 0070                          ?_ir_action 0070  
             __end_of_util_decrease 05C3                           led_ramp@i 007A  
    __size_of_led_set_custom_bright 0025       __end_of_led_set_custom_bright 04A8  
           _led_set_increase_bright 05C3            __end_of_led_turnoff_ramp 034B  
              ??_eeprom_read_buffer 0064                        ??_led_notice 0070  
                      ??_led_toggle 005E                     ??_tmr1_gate_isr 007E  
                          _KeyValue 0044               __end_of_util_increase 05F7  
             eeprom_read_buffer@len 0063                    ?_tmr1_starttimer 0070  
               __end_of_tmr2_reload 0228                          ?_pwm1_init 0067  
                        ?_pwm2_init 0067                          ?_pwm3_init 0067  
                        ?_tmr1_init 005E                          ?_pwm4_init 0067  
                        ?_tmr2_init 005E                          ?_pwm5_init 0067  
         i1_led_set_increase_bright 0F19                    _tmr2_enabled_isr 031B  
        __size_of_tmr2_disabled_isr 0003                     ?i1_ir_get_index 0070  
          __size_of_led_startnotice 000C        i1led_set_increase_bright@chn 007B  
      i1led_set_increase_bright@max 0079                  __end_of_led_notice 0F77  
                  ?_tmr2_starttimer 0070                  __end_of_led_toggle 04DF  
                  ?_tmr1_writetimer 005E                    __size_of_led_run 000C  
                   _led_clear_state 058B                            __ptext10 0361  
                          __ptext11 0382                            __ptext20 055B  
                          __ptext12 04D3                            __ptext21 022A  
                          __ptext13 04B4                          _T1GCONbits 001C  
                          __ptext30 020F                            __ptext22 028A  
                          __ptext14 04A8                            __ptext31 031B  
                          __ptext23 033F                            __ptext15 05C3  
                          __ptext40 0118                            __ptext32 0201  
                          __ptext24 0482                            __ptext16 05D6  
                          __ptext41 0155                            __ptext33 01FE  
                          __ptext25 058B                            __ptext17 058F  
                          __ptext50 0784                            __ptext42 00D8  
                          __ptext34 01DD                            __ptext26 0429  
                          __ptext18 05A2                            __ptext51 0798  
                          __ptext43 00C4                            __ptext35 01DA  
                          __ptext27 0055                            __ptext19 0483  
                          __ptext60 0EE6                            __ptext52 07AC  
                          __ptext44 00BE                            __ptext36 01C0  
                          __ptext28 0228                            __ptext61 0EF9  
                          __ptext53 07C0                            __ptext37 019E  
                          __ptext29 0225                            __ptext70 073F  
                          __ptext62 0E9F                            __ptext54 0F4C  
                          __ptext46 07CD                            __ptext38 017B  
                          __ptext71 073E                            __ptext63 0E46  
                          __ptext55 0F80                            __ptext47 0DC9  
                          __ptext39 0135                            __ptext72 0750  
                          __ptext64 0EDA                            __ptext56 0F77  
                          __ptext48 0F89                            __ptext73 072E  
                          __ptext65 0EB3                            __ptext57 0DD5  
                          __ptext49 0770                            __ptext66 0ECE  
                          __ptext58 0F19                            __ptext67 07D8  
                          __ptext59 0F2C                            __ptext68 0646  
                          __ptext69 074D                            _app_init 0055  
                          _led_init 022A                            _led_ramp 0F89  
                       _OSCCON1bits 0919         __end_of_led_get_power_state 0483  
           __size_of_led_set_custom 001B                            _gpio_set 00D8  
                     __size_of_main 000E                   util_decrease@step 005E  
        ?i1_led_set_decrease_bright 0078          __end_of_led_turnoff_direct 0F80  
                          _tmr2_isr 07CD                            _osc_init 00C4  
               i1util_increase@step 0070                            int$flags 007E  
            __size_of_led_get_state 0015            __size_of_led_turnon_ramp 0010  
                 ??i1_led_get_state 0070         led_set_decrease_bright@step 0066  
                _gpio_set_intputpps 00BE                         _OSCTUNEbits 091E  
                        _INTCONbits 000B           ??_led_set_increase_bright 0069  
                       ??_ir_decode 0076                         ??_ir_action 006C  
                       _NVMCON1bits 0895               i1_led_get_power_state 073E  
            __size_of_led_para_init 007C            __size_of_ir_short_action 00A7  
               ?_gpio_set_intputpps 005E                         _tmr2_isr_cb 003D  
                       _PWM5CONbits 0619                         _tmr2_reload 0225  
          led_set_custom_bright@chn 0064                            intlevel1 0000  
                pwm2_load_duty@duty 0070      __size_of_tmr1_gate_enabled_isr 0003  
            __size_of_led_save_para 000A       __end_of_tmr1_gate_enabled_isr 01DD  
                  ??_ir_long_action 007C                   __CFG_CLKOUTEN$OFF 0000  
                       ??_pwm1_init 0069                         ??_pwm2_init 0069  
                       ??_pwm3_init 0069                         ??_tmr1_init 0062  
                       ??_pwm4_init 0069                         ??_tmr2_init 0061  
                       _PPSLOCKbits 0E0F                         ??_pwm5_init 0069  
                  util_decrease@min 005F   __end_ofi1_led_set_decrease_bright 0EF9  
                  util_decrease@src 0065                  _gpio_set_outputpps 0155  
            __size_of_led_set_state 000C              __size_of_led_setcolour 001F  
              ??_gpio_set_intputpps 005F                          _OSCFRQbits 091F  
               ?_gpio_set_outputpps 005E             __end_of_led_clear_state 058F  
                 ??_led_startnotice 0070                   ir_decode@reKeyNum 007A  
            gpio_set_outputpps@port 0066             ??_ir_tmr1_overflow_rest 0067  
              ??_gpio_set_outputpps 0060                       _led_get_state 0328  
                i1_tmr2_enabled_isr 074D               gpio_set_outputpps@pin 005E  
           __size_of_pwm1_load_duty 0014           __size_of_eeprom_read_byte 000E  
               _eeprom_write_buffer 034B                         _PWMTMRSbits 061F  
          __size_ofi1_util_decrease 0020                      tmr2_init@outps 005E  
   __end_of_led_set_increase_bright 05D6                 ?i1_tmr2_enabled_isr 0070  
                     _led_load_duty 00D3                  pwm4_load_duty@duty 0070  
                     _led_para_init 04DF             __size_of_pwm2_load_duty 0014  
